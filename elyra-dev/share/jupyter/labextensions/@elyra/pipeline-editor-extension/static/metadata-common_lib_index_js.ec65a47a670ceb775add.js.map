{"version":3,"file":"metadata-common_lib_index_js.ec65a47a670ceb775add.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACgH;AACjB;AAC/F,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAC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","sources":["webpack://@elyra/pipeline-editor-extension/../metadata-common/style/index.css","webpack://@elyra/pipeline-editor-extension/../metadata-common/src/FilterTools.tsx","webpack://@elyra/pipeline-editor-extension/../metadata-common/src/MetadataCommonService.tsx","webpack://@elyra/pipeline-editor-extension/../metadata-common/src/MetadataEditor.tsx","webpack://@elyra/pipeline-editor-extension/../metadata-common/src/MetadataEditorWidget.tsx","webpack://@elyra/pipeline-editor-extension/../metadata-common/src/MetadataWidget.tsx","webpack://@elyra/pipeline-editor-extension/../metadata-common/src/index.ts","webpack://@elyra/pipeline-editor-extension/../metadata-common/style/index.css?bb89"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* MetadataWidget CSS */\n.elyra-metadata {\n  color: var(--jp-ui-font-color1);\n  background: var(--jp-layout-color1);\n}\n\n.elyra-metadata a,\n.elyra-metadataEditor a {\n  color: var(--jp-content-link-color);\n}\n\n.elyra-metadataHeader {\n  font-weight: bold;\n  padding: 2px 6px 2px 12px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.elyra-metadataHeader p {\n  font-weight: bold;\n}\n\nbutton.elyra-metadataHeader-button {\n  border: none;\n  margin: 5px 0;\n  padding: 5px;\n  background: none;\n}\n\n.elyra-metadataHeader-buttons {\n  display: flex;\n  align-items: center;\n}\n\n.elyra-metadataHeader-buttonDivider {\n  width: 0.05em;\n  height: 1.5em;\n  position: relative;\n  background-color: var(--jp-border-color1);\n}\n\n.elyra-metadataHeader-popper button {\n  border: none;\n  width: max-content;\n  padding: 7px 9px;\n  background: none;\n  cursor: pointer;\n}\n\n.elyra-metadataHeader-popper button:hover {\n  background-color: var(--jp-border-color3);\n}\n\n.elyra-metadataHeader-popper {\n  z-index: 100;\n  background-color: var(--jp-cell-editor-active-background);\n  border-radius: 10%;\n  border-radius: 8px;\n  border: 1px solid var(--jp-border-color2);\n}\n\n.elyra-metadataHeader-button:hover {\n  background-color: var(--jp-layout-color2);\n  cursor: pointer;\n}\n\n.elyra-metadataHeader [fill] {\n  fill: var(--jp-ui-font-color1);\n}\n\n.elyra-metadataHeader + div:first-of-type {\n  overflow-y: auto;\n  height: calc(100vh - 95px);\n}\n\n.elyra-metadata-item {\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color2);\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n}\n\n.elyra-metadata-item .elyra-expandableContainer-details-visible {\n  background-color: var(--jp-cell-editor-background);\n  resize: vertical;\n}\n\n.elyra-metadata-item .CodeMirror.cm-s-jupyter {\n  background-color: inherit;\n  border: none;\n  font-family: var(--jp-code-font-family);\n  font-size: var(--jp-code-font-size);\n  line-height: var(--jp-code-line-height);\n}\n\n.elyra-metadata-item .cm-s-jupyter li .cm-string {\n  word-break: normal;\n}\n\n/* Metadata Editor CSS (a lot of the style for the metadata editor is in\n * the ui-components package under formeditor.css\n */\n.elyra-metadataEditor {\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  height: 100%;\n  align-content: flex-start;\n  align-items: flex-start;\n  justify-content: flex-start;\n  color: var(--jp-ui-font-color1);\n}\n\n/* Code Snippet Filter CSS */\n.elyra-searchbar {\n  margin: 0px 8px;\n}\n\n.elyra-filterTools {\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color1);\n}\n\nmark.elyra-search-bolding {\n  background-color: transparent;\n  font-weight: bold;\n  color: var(--jp-ui-font-color0);\n}\n\n.elyra-filter {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 10px 10px 0 10px;\n}\n\n.elyra-filter .elyra-filter-btn {\n  align-self: flex-end;\n  padding: 0px;\n  margin-bottom: 5px;\n  border-radius: 5px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n.elyra-filter .elyra-filter-btn:hover {\n  background-color: var(--jp-layout-color2);\n}\n\n.elyra-filter-btn svg {\n  display: block;\n  width: 30px;\n  height: 22px;\n}\n\n.elyra-filter-arrow-up.idle,\n.elyra-filter-option.idle {\n  display: none;\n}\n\n.elyra-filter-arrow-up {\n  position: absolute;\n  margin-top: 16px;\n  margin-right: 38px;\n  align-self: flex-end;\n  background-color: var(--jp-layout-color0);\n}\n\n.elyra-filter-option {\n  border: var(--jp-border-width) solid var(--jp-border-color1);\n  height: 140px;\n  width: 100%;\n  margin-bottom: 10px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow: auto;\n}\n\n.elyra-filter-tags {\n  margin: 8px 8px;\n}\n\n.elyra-filter-tag {\n  margin-left: 3px;\n  margin-right: 3px;\n}\n\nbutton.elyra-filter-tag {\n  height: 24px;\n  padding: 0 12px;\n  cursor: pointer;\n  color: var(--jp-ui-font-color2);\n  font-size: var(--jp-ui-font-size1);\n}\n\nbutton.elyra-filter-tag .elyra-filter-tag-label {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\nbutton.elyra-filter-tag span,\nbutton.elyra-filter-tag svg {\n  pointer-events: none;\n}\n\n.elyra-filter-empty {\n  font-size: var(--jp-ui-font-size1);\n}\n\n.elyra-tools {\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color1);\n}\n\n.elyra-metadataEditor-saveButton button {\n  background: none;\n  border: 1px solid var(--jp-border-color1);\n  border-radius: 3px;\n  padding: 10px;\n  font-size: var(--jp-content-font-size2);\n  width: fit-content;\n  color: var(--jp-content-font-color0);\n  cursor: pointer;\n}\n\n.elyra-metadataEditor-saveButton button:hover {\n  background: var(--jp-border-color3);\n}\n\n.elyra-metadataEditor-saveButton.errorForm {\n  color: var(--jp-content-font-color3);\n}\n\n.elyra-metadataEditor-saveButton.errorForm button {\n  border-color: var(--jp-content-font-color3);\n  cursor: not-allowed;\n}\n\n.elyra-no-metadata-msg {\n  padding-left: 8px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../metadata-common/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;EAcE;;AAEF,uBAAuB;AACvB;EACE,+BAA+B;EAC/B,mCAAmC;AACrC;;AAEA;;EAEE,mCAAmC;AACrC;;AAEA;EACE,iBAAiB;EACjB,yBAAyB;EACzB,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,kBAAkB;EAClB,yCAAyC;AAC3C;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,YAAY;EACZ,yDAAyD;EACzD,kBAAkB;EAClB,kBAAkB;EAClB,yCAAyC;AAC3C;;AAEA;EACE,yCAAyC;EACzC,eAAe;AACjB;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;EAChB,0BAA0B;AAC5B;;AAEA;EACE,mEAAmE;EACnE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,kDAAkD;EAClD,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,uCAAuC;EACvC,mCAAmC;EACnC,uCAAuC;AACzC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;;EAEE;AACF;EACE,aAAa;EACb,aAAa;EACb,eAAe;EACf,YAAY;EACZ,yBAAyB;EACzB,uBAAuB;EACvB,2BAA2B;EAC3B,+BAA+B;AACjC;;AAEA,4BAA4B;AAC5B;EACE,eAAe;AACjB;;AAEA;EACE,mEAAmE;AACrE;;AAEA;EACE,6BAA6B;EAC7B,iBAAiB;EACjB,+BAA+B;AACjC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,wBAAwB;AAC1B;;AAEA;EACE,oBAAoB;EACpB,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,YAAY;EACZ,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;AACd;;AAEA;;EAEE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,oBAAoB;EACpB,yCAAyC;AAC3C;;AAEA;EACE,4DAA4D;EAC5D,aAAa;EACb,WAAW;EACX,mBAAmB;EACnB,gBAAgB;EAChB,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,eAAe;EACf,+BAA+B;EAC/B,kCAAkC;AACpC;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;;EAEE,oBAAoB;AACtB;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,mEAAmE;AACrE;;AAEA;EACE,gBAAgB;EAChB,yCAAyC;EACzC,kBAAkB;EAClB,aAAa;EACb,uCAAuC;EACvC,kBAAkB;EAClB,oCAAoC;EACpC,eAAe;AACjB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,2CAA2C;EAC3C,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB\",\"sourcesContent\":[\"/*\\n * Copyright 2018-2025 Elyra Authors\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/* MetadataWidget CSS */\\n.elyra-metadata {\\n  color: var(--jp-ui-font-color1);\\n  background: var(--jp-layout-color1);\\n}\\n\\n.elyra-metadata a,\\n.elyra-metadataEditor a {\\n  color: var(--jp-content-link-color);\\n}\\n\\n.elyra-metadataHeader {\\n  font-weight: bold;\\n  padding: 2px 6px 2px 12px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.elyra-metadataHeader p {\\n  font-weight: bold;\\n}\\n\\nbutton.elyra-metadataHeader-button {\\n  border: none;\\n  margin: 5px 0;\\n  padding: 5px;\\n  background: none;\\n}\\n\\n.elyra-metadataHeader-buttons {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.elyra-metadataHeader-buttonDivider {\\n  width: 0.05em;\\n  height: 1.5em;\\n  position: relative;\\n  background-color: var(--jp-border-color1);\\n}\\n\\n.elyra-metadataHeader-popper button {\\n  border: none;\\n  width: max-content;\\n  padding: 7px 9px;\\n  background: none;\\n  cursor: pointer;\\n}\\n\\n.elyra-metadataHeader-popper button:hover {\\n  background-color: var(--jp-border-color3);\\n}\\n\\n.elyra-metadataHeader-popper {\\n  z-index: 100;\\n  background-color: var(--jp-cell-editor-active-background);\\n  border-radius: 10%;\\n  border-radius: 8px;\\n  border: 1px solid var(--jp-border-color2);\\n}\\n\\n.elyra-metadataHeader-button:hover {\\n  background-color: var(--jp-layout-color2);\\n  cursor: pointer;\\n}\\n\\n.elyra-metadataHeader [fill] {\\n  fill: var(--jp-ui-font-color1);\\n}\\n\\n.elyra-metadataHeader + div:first-of-type {\\n  overflow-y: auto;\\n  height: calc(100vh - 95px);\\n}\\n\\n.elyra-metadata-item {\\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color2);\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.elyra-metadata-item .elyra-expandableContainer-details-visible {\\n  background-color: var(--jp-cell-editor-background);\\n  resize: vertical;\\n}\\n\\n.elyra-metadata-item .CodeMirror.cm-s-jupyter {\\n  background-color: inherit;\\n  border: none;\\n  font-family: var(--jp-code-font-family);\\n  font-size: var(--jp-code-font-size);\\n  line-height: var(--jp-code-line-height);\\n}\\n\\n.elyra-metadata-item .cm-s-jupyter li .cm-string {\\n  word-break: normal;\\n}\\n\\n/* Metadata Editor CSS (a lot of the style for the metadata editor is in\\n * the ui-components package under formeditor.css\\n */\\n.elyra-metadataEditor {\\n  padding: 20px;\\n  display: flex;\\n  flex-wrap: wrap;\\n  height: 100%;\\n  align-content: flex-start;\\n  align-items: flex-start;\\n  justify-content: flex-start;\\n  color: var(--jp-ui-font-color1);\\n}\\n\\n/* Code Snippet Filter CSS */\\n.elyra-searchbar {\\n  margin: 0px 8px;\\n}\\n\\n.elyra-filterTools {\\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color1);\\n}\\n\\nmark.elyra-search-bolding {\\n  background-color: transparent;\\n  font-weight: bold;\\n  color: var(--jp-ui-font-color0);\\n}\\n\\n.elyra-filter {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin: 10px 10px 0 10px;\\n}\\n\\n.elyra-filter .elyra-filter-btn {\\n  align-self: flex-end;\\n  padding: 0px;\\n  margin-bottom: 5px;\\n  border-radius: 5px;\\n  border: none;\\n  background: none;\\n  cursor: pointer;\\n}\\n\\n.elyra-filter .elyra-filter-btn:hover {\\n  background-color: var(--jp-layout-color2);\\n}\\n\\n.elyra-filter-btn svg {\\n  display: block;\\n  width: 30px;\\n  height: 22px;\\n}\\n\\n.elyra-filter-arrow-up.idle,\\n.elyra-filter-option.idle {\\n  display: none;\\n}\\n\\n.elyra-filter-arrow-up {\\n  position: absolute;\\n  margin-top: 16px;\\n  margin-right: 38px;\\n  align-self: flex-end;\\n  background-color: var(--jp-layout-color0);\\n}\\n\\n.elyra-filter-option {\\n  border: var(--jp-border-width) solid var(--jp-border-color1);\\n  height: 140px;\\n  width: 100%;\\n  margin-bottom: 10px;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n  overflow: auto;\\n}\\n\\n.elyra-filter-tags {\\n  margin: 8px 8px;\\n}\\n\\n.elyra-filter-tag {\\n  margin-left: 3px;\\n  margin-right: 3px;\\n}\\n\\nbutton.elyra-filter-tag {\\n  height: 24px;\\n  padding: 0 12px;\\n  cursor: pointer;\\n  color: var(--jp-ui-font-color2);\\n  font-size: var(--jp-ui-font-size1);\\n}\\n\\nbutton.elyra-filter-tag .elyra-filter-tag-label {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\nbutton.elyra-filter-tag span,\\nbutton.elyra-filter-tag svg {\\n  pointer-events: none;\\n}\\n\\n.elyra-filter-empty {\\n  font-size: var(--jp-ui-font-size1);\\n}\\n\\n.elyra-tools {\\n  border-bottom: var(--jp-border-width) solid var(--jp-border-color1);\\n}\\n\\n.elyra-metadataEditor-saveButton button {\\n  background: none;\\n  border: 1px solid var(--jp-border-color1);\\n  border-radius: 3px;\\n  padding: 10px;\\n  font-size: var(--jp-content-font-size2);\\n  width: fit-content;\\n  color: var(--jp-content-font-color0);\\n  cursor: pointer;\\n}\\n\\n.elyra-metadataEditor-saveButton button:hover {\\n  background: var(--jp-border-color3);\\n}\\n\\n.elyra-metadataEditor-saveButton.errorForm {\\n  color: var(--jp-content-font-color3);\\n}\\n\\n.elyra-metadataEditor-saveButton.errorForm button {\\n  border-color: var(--jp-content-font-color3);\\n  cursor: not-allowed;\\n}\\n\\n.elyra-no-metadata-msg {\\n  padding-left: 8px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { tagIcon } from '@elyra/ui-components';\nimport { InputGroup, checkIcon } from '@jupyterlab/ui-components';\n\nimport React from 'react';\n\ninterface IFilterMetadataProps {\n  tags: string[];\n  onFilter: (searchValue: string, filterTags: string[]) => void;\n  schemaspace: string;\n  omitTags?: boolean;\n}\n\ninterface IFilterMetadataState {\n  selectedTags: string[];\n  searchValue: string;\n}\n\nconst FILTER_OPTION = 'elyra-filter-option';\nconst FILTER_TAGS = 'elyra-filter-tags';\nconst FILTER_TAG = 'elyra-filter-tag';\nconst FILTER_TAG_LABEL = 'elyra-filter-tag-label';\nconst FILTER_CHECK = 'elyra-filter-check';\nconst FILTER_TOOLS = 'elyra-filterTools';\nconst FILTER_SEARCHBAR = 'elyra-searchbar';\nconst FILTER_SEARCHWRAPPER = 'elyra-searchwrapper';\nconst FILTER_CLASS = 'elyra-filter';\nconst FILTER_BUTTON = 'elyra-filter-btn';\nconst FILTER_EMPTY = 'elyra-filter-empty';\n\nexport class FilterTools extends React.Component<\n  IFilterMetadataProps,\n  IFilterMetadataState\n> {\n  constructor(props: IFilterMetadataProps) {\n    super(props);\n    this.state = { selectedTags: [], searchValue: '' };\n    this.createFilterBox = this.createFilterBox.bind(this);\n    this.renderFilterOption = this.renderFilterOption.bind(this);\n    this.renderTags = this.renderTags.bind(this);\n    this.renderAppliedTag = this.renderAppliedTag.bind(this);\n    this.renderUnappliedTag = this.renderUnappliedTag.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.filterMetadata = this.filterMetadata.bind(this);\n  }\n\n  componentDidMount(): void {\n    this.setState({\n      selectedTags: [],\n      searchValue: ''\n    });\n  }\n\n  componentDidUpdate(prevProps: IFilterMetadataProps): void {\n    if (prevProps !== this.props) {\n      this.setState((state) => ({\n        selectedTags: state.selectedTags\n          .filter((tag) => this.props.tags.includes(tag))\n          .sort()\n      }));\n    }\n  }\n\n  createFilterBox(): void {\n    const filterOption = document.querySelector(\n      `#${this.props.schemaspace} .${FILTER_OPTION}`\n    );\n\n    filterOption?.classList.toggle('idle');\n\n    this.filterMetadata();\n  }\n\n  renderTags(): JSX.Element {\n    if (!this.props.tags.length) {\n      return (\n        <div className={FILTER_TAGS}>\n          <p className={FILTER_EMPTY}>No tags defined</p>\n        </div>\n      );\n    }\n    return (\n      <div className={FILTER_TAGS}>\n        {this.props.tags.sort().map((tag: string, index: number) => {\n          if (this.state.selectedTags.includes(tag)) {\n            return this.renderAppliedTag(tag, index.toString());\n          } else {\n            return this.renderUnappliedTag(tag, index.toString());\n          }\n        })}\n      </div>\n    );\n  }\n\n  renderAppliedTag(tag: string, index: string): JSX.Element {\n    return (\n      <button\n        className={`${FILTER_TAG} jp-CellTags-Tag jp-CellTags-Applied`}\n        id={'filter' + '-' + tag + '-' + index}\n        key={'filter' + '-' + tag + '-' + index}\n        title={tag}\n        onClick={this.handleClick}\n      >\n        <span className={FILTER_TAG_LABEL}>{tag}</span>\n        <checkIcon.react\n          className={FILTER_CHECK}\n          tag=\"span\"\n          elementPosition=\"center\"\n          height=\"18px\"\n          width=\"18px\"\n          marginLeft=\"5px\"\n          marginRight=\"-3px\"\n        />\n      </button>\n    );\n  }\n\n  renderUnappliedTag(tag: string, index: string): JSX.Element {\n    return (\n      <button\n        className={`${FILTER_TAG} jp-CellTags-Tag jp-CellTags-Unapplied`}\n        id={'filter' + '-' + tag + '-' + index}\n        key={'filter' + '-' + tag + '-' + index}\n        title={tag}\n        onClick={this.handleClick}\n      >\n        <span className={FILTER_TAG_LABEL}>{tag}</span>\n      </button>\n    );\n  }\n\n  handleClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n    const target = event.target as HTMLElement;\n    const clickedTag = target.textContent ?? '';\n\n    this.setState(\n      (state) => ({\n        selectedTags: this.updateTagsCss(target, state.selectedTags, clickedTag)\n      }),\n      this.filterMetadata\n    );\n  }\n\n  updateTagsCss(\n    target: HTMLElement,\n    currentTags: string[],\n    clickedTag: string\n  ): string[] {\n    if (target.classList.contains('jp-CellTags-Unapplied')) {\n      target.classList.replace('jp-CellTags-Unapplied', 'jp-CellTags-Applied');\n\n      currentTags.splice(-1, 0, clickedTag);\n    } else if (target.classList.contains('jp-CellTags-Applied')) {\n      target.classList.replace('jp-CellTags-Applied', 'jp-CellTags-Unapplied');\n\n      const idx = currentTags.indexOf(clickedTag);\n      currentTags.splice(idx, 1);\n    }\n    return currentTags.sort();\n  }\n\n  handleSearch = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({ searchValue: event.target.value }, this.filterMetadata);\n  };\n\n  filterMetadata(): void {\n    const isTagFilterOpen = document\n      .querySelector(`#${this.props.schemaspace} .${FILTER_OPTION}`)\n      ?.classList.contains('idle');\n    this.props.onFilter(\n      this.state.searchValue,\n      isTagFilterOpen ? [] : this.state.selectedTags\n    );\n  }\n\n  renderFilterOption(): JSX.Element {\n    return <div className={`${FILTER_OPTION} idle`}>{this.renderTags()}</div>;\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className={FILTER_TOOLS}>\n        <div className={FILTER_SEARCHBAR}>\n          <InputGroup\n            className={FILTER_SEARCHWRAPPER}\n            type=\"text\"\n            placeholder=\"Search...\"\n            onChange={this.handleSearch}\n            rightIcon=\"ui-components:search\"\n            value={this.state.searchValue}\n          />\n        </div>\n        {this.props.omitTags ? (\n          <div style={{ height: '4px' }} />\n        ) : (\n          <div className={FILTER_CLASS} id={this.props.schemaspace}>\n            <button\n              title=\"Filter by tag\"\n              className={FILTER_BUTTON}\n              onClick={this.createFilterBox}\n            >\n              <tagIcon.react />\n            </button>\n            {this.renderFilterOption()}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IMetadataResource, MetadataService } from '@elyra/services';\n\nexport class MetadataCommonService {\n  /**\n   * Duplicates an existing metadata instance, using\n   * '<original-display-name>-Copy<unique-number>' as new display name.\n   *\n   * @param schemaSpace: schemaspace in which metadataInstance is defined\n   * @param metadataInstance: metadata instance to be duplicated\n   * @param existingInstances: list of existing metadata instances in schemaspace\n   *\n   * @returns A promise\n   */\n  static duplicateMetadataInstance(\n    schemaSpace: string,\n    metadataInstance: IMetadataResource,\n    existingInstances: IMetadataResource[]\n  ): Promise<IMetadataResource | undefined> {\n    // iterate through the list of currently defined\n    // instance names and find the next available one\n    // using '<source-instance-name>-Copy<N>'\n    let base_name = metadataInstance.display_name;\n    const match = metadataInstance.display_name.match(/-Copy\\d+$/);\n    if (match !== null) {\n      base_name = base_name.replace(/-Copy\\d+$/, '');\n    }\n    let count = 1;\n\n    while (\n      existingInstances.find(\n        (element) => element.display_name === `${base_name}-Copy${count}`\n      ) !== undefined\n    ) {\n      count += 1;\n    }\n\n    // Create a duplicate metadata instance using the derived name\n    const duplicated_metadata = JSON.parse(JSON.stringify(metadataInstance));\n    duplicated_metadata.display_name = `${base_name}-Copy${count}`;\n    delete duplicated_metadata.name;\n    return MetadataService.postMetadata(schemaSpace, duplicated_metadata);\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ISchemaResource, MetadataService } from '@elyra/services';\nimport {\n  RequestErrors,\n  FormEditor,\n  IFormEditorRef,\n  GenericObjectType\n} from '@elyra/ui-components';\n\nimport * as React from 'react';\n\nimport { IMetadataEditorProps } from './MetadataEditorWidget';\n\nconst ELYRA_METADATA_EDITOR_CLASS = 'elyra-metadataEditor';\n\n/**\n * Props for the metadata editor component.\n */\ninterface IMetadataEditorComponentProps extends IMetadataEditorProps {\n  /**\n   * Schema including the metadata wrapper and other fields like display name.\n   */\n  schemaTop: ISchemaResource;\n\n  /**\n   * Metadata that has already been defined (if this is not a new instance)\n   */\n  initialMetadata: GenericObjectType;\n\n  /**\n   * Handler for setting dirty state in the parent component.\n   */\n  setDirty: (dirty: boolean) => void;\n\n  /**\n   * Handler to trigger close after saving.\n   */\n  close: () => void;\n\n  /**\n   * All tags defined between all metadata instances.\n   */\n  allTags: string[];\n\n  /**\n   * Function to find default choices based on uihints and existing values for that field.\n   */\n  getDefaultChoices: (fieldName: string) => string[];\n}\n\n/**\n * Metadata editor widget\n */\nexport const MetadataEditor: React.FC<IMetadataEditorComponentProps> = ({\n  editorServices,\n  schemaspace,\n  onSave,\n  schemaName,\n  schemaTop,\n  initialMetadata,\n  translator,\n  name,\n  setDirty,\n  close,\n  allTags,\n  componentRegistry,\n  getDefaultChoices,\n  titleContext\n}: IMetadataEditorComponentProps) => {\n  const formRef = React.useRef<IFormEditorRef>(null);\n  const [isSubmitted, setSubmitted] = React.useState(false);\n  const [invalidForm, setInvalidForm] = React.useState(false);\n\n  const schema = schemaTop.properties?.metadata;\n\n  const [metadata, setMetadata] = React.useState(initialMetadata);\n  const displayName = initialMetadata?.['_noCategory']?.['display_name'];\n  const referenceURL = schemaTop.uihints?.reference_url;\n\n  const isFormDataValid = (data: GenericObjectType) => {\n    const state = formRef.current!.validateForm(data);\n    return state.isValid;\n  };\n\n  /**\n   * Saves metadata through either put or post request.\n   */\n  const saveMetadata = () => {\n    const isValid = isFormDataValid(metadata);\n    setInvalidForm(!isValid);\n    setSubmitted(true);\n\n    if (!isValid) {\n      return;\n    }\n\n    const newMetadata = {\n      schema_name: schemaName,\n      display_name: metadata?.['_noCategory']?.['display_name'],\n      metadata: flattenFormData(metadata)\n    };\n\n    if (!name) {\n      MetadataService.postMetadata(schemaspace, newMetadata)\n        .then(() => {\n          setDirty(false);\n          onSave();\n          close();\n        })\n        .catch(async (error) => {\n          await RequestErrors.serverError(error);\n        });\n    } else {\n      MetadataService.putMetadata(schemaspace, name, newMetadata)\n        .then(() => {\n          setDirty(false);\n          onSave();\n          close();\n        })\n        .catch(async (error) => {\n          await RequestErrors.serverError(error);\n        });\n    }\n  };\n\n  let headerText = `Edit \"${displayName}\"`;\n  if (!displayName) {\n    headerText = `Add new ${schemaTop.title} ${titleContext ?? ''}`;\n  }\n\n  /**\n   * Removes category wrappers in the data before sending to the server.\n   * @param newFormData - Form data with category wrappers.\n   * @returns - Form data as the server expects it.\n   */\n  const flattenFormData = (\n    newFormData: GenericObjectType\n  ): GenericObjectType => {\n    const flattened: GenericObjectType = {};\n    for (const category in newFormData) {\n      for (const property in newFormData[category]) {\n        flattened[property] = newFormData[category][property];\n      }\n    }\n    return flattened;\n  };\n\n  /**\n   * Triggers save and close on pressing enter key (outside of a text area)\n   */\n  const onKeyPress: React.KeyboardEventHandler = (\n    event: React.KeyboardEvent\n  ) => {\n    const targetElement = event.nativeEvent.target as HTMLElement;\n    if (event.key === 'Enter' && targetElement?.tagName !== 'TEXTAREA') {\n      saveMetadata();\n    }\n  };\n\n  return (\n    <div onKeyPress={onKeyPress} className={ELYRA_METADATA_EDITOR_CLASS}>\n      <h3> {headerText} </h3>\n      <p style={{ width: '100%', marginBottom: '10px' }}>\n        {translator.__('All fields marked with an asterisk are required.')}\n        &nbsp;\n        {referenceURL ? (\n          <a href={referenceURL} target=\"_blank\" rel=\"noreferrer noopener\">\n            {translator.__('[Learn more ...]')}\n          </a>\n        ) : null}\n      </p>\n      <FormEditor\n        ref={formRef}\n        schema={schema as GenericObjectType}\n        onChange={(formData: GenericObjectType): void => {\n          setMetadata(formData);\n          if (isSubmitted) {\n            setInvalidForm(!isFormDataValid(formData));\n          }\n          setDirty(true);\n        }}\n        componentRegistry={componentRegistry}\n        translator={translator}\n        editorServices={editorServices}\n        originalData={metadata}\n        allTags={allTags}\n        languageOptions={getDefaultChoices('language')}\n      />\n      <div\n        className={`elyra-metadataEditor-formInput elyra-metadataEditor-saveButton ${\n          invalidForm ? 'errorForm' : ''\n        }`}\n        key={'SaveButton'}\n      >\n        {invalidForm ? (\n          <p className=\"formError\">\n            {translator.__('Cannot save invalid form.')}\n          </p>\n        ) : (\n          <div />\n        )}\n        <button onClick={saveMetadata}>{translator.__('Save & Close')}</button>\n      </div>\n    </div>\n  );\n};\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IMetadataResource,\n  ISchemaResource,\n  MetadataService\n} from '@elyra/services';\nimport {\n  GenericObjectType,\n  IErrorResponse,\n  RequestErrors\n} from '@elyra/ui-components';\n\nimport { ILabStatus } from '@jupyterlab/application';\nimport { ReactWidget, showDialog, Dialog } from '@jupyterlab/apputils';\nimport { IEditorServices } from '@jupyterlab/codeeditor';\nimport { TranslationBundle } from '@jupyterlab/translation';\nimport { IFormRendererRegistry } from '@jupyterlab/ui-components';\nimport { find } from '@lumino/algorithm';\nimport { IDisposable } from '@lumino/disposable';\nimport { Message } from '@lumino/messaging';\n\nimport * as React from 'react';\n\nimport { MetadataEditor } from './MetadataEditor';\n\nconst DIRTY_CLASS = 'jp-mod-dirty';\n\n/**\n * Props for the Metadata Editor component.\n */\nexport interface IMetadataEditorProps {\n  /**\n   * Schema name used for schema lookup and save\n   */\n  schemaName: string;\n\n  /**\n   * Schemaspace also used for schema lookup and saving.\n   */\n  schemaspace: string;\n\n  /**\n   * Name of metadata to edit (undefined if new metadata)\n   */\n  name?: string;\n\n  /**\n   * Callback to handle updates after saving metadata.\n   */\n  onSave: () => void;\n\n  /**\n   * Editor services to create code editor for code fields.\n   */\n  editorServices: IEditorServices | null;\n\n  /**\n   * Translator for internationalization.\n   */\n  translator: TranslationBundle;\n\n  /**\n   * Status for handling unsaved changes through JupyterLab\n   */\n  status: ILabStatus;\n\n  /**\n   * Component registry to use custom field renderers.\n   */\n  componentRegistry?: IFormRendererRegistry;\n\n  /**\n   * String used to make the title of the editor more readable\n   */\n  titleContext?: string;\n\n  /**\n   * A default value for code fields\n   */\n  code?: string[];\n}\n\n/**\n * Widget wrapper around the metadata editor components. Handles preparing\n * the schema and metadata for the component.\n */\nexport class MetadataEditorWidget extends ReactWidget {\n  props: IMetadataEditorProps;\n  widgetClass: string;\n  schema: ISchemaResource | undefined;\n  metadata: GenericObjectType | undefined;\n  loading = true;\n  dirty = false;\n  clearDirty: IDisposable | null = null;\n  allTags: string[] = [];\n  allMetadata: IMetadataResource[] | undefined;\n\n  constructor(props: IMetadataEditorProps) {\n    super();\n    this.props = props;\n    this.widgetClass = `elyra-metadataEditor-${props.name ?? 'new'}`;\n    this.addClass(this.widgetClass);\n\n    this.getDefaultChoices = this.getDefaultChoices.bind(this);\n    this.handleDirtyState = this.handleDirtyState.bind(this);\n    this.close = this.close.bind(this);\n    void this.loadSchemaAndMetadata();\n  }\n\n  /**\n   * Loads schema and metadata and adds categories.\n   */\n  async loadSchemaAndMetadata(): Promise<void> {\n    try {\n      // Load all schema and all metadata in schemaspace.\n      const allSchema = await MetadataService.getSchema(this.props.schemaspace);\n      this.allMetadata = await MetadataService.getMetadata(\n        this.props.schemaspace\n      );\n\n      if (!this.allMetadata) {\n        throw new Error(\n          `No metadata found for schemaspace ${this.props.schemaspace}`\n        );\n      }\n\n      // Loads all tags to display as options in the editor.\n      this.allTags = this.allMetadata.reduce(\n        (acc: string[], metadata: IMetadataResource) => {\n          const tags = metadata.metadata.tags as string[] | undefined;\n          if (tags) {\n            acc.push(\n              ...tags.filter((tag: string) => {\n                return !acc.includes(tag);\n              })\n            );\n          }\n          return acc;\n        },\n        []\n      );\n\n      // Finds schema based on schemaName.\n      const schema = allSchema?.find((s) => {\n        return s.name === this.props.schemaName;\n      });\n\n      if (!schema) {\n        throw new Error(`Schema not found for ${this.props.schemaName}`);\n      }\n\n      if (!schema.properties?.metadata) {\n        throw new Error('Metadata not found in schema');\n      }\n      // Sets const fields to readonly.\n      const schemaMetadata = schema.properties?.metadata as\n        | GenericObjectType\n        | undefined;\n      const properties = schemaMetadata?.properties;\n\n      if (!properties) {\n        throw new Error('Metadata properties not found in schema');\n      }\n\n      for (const prop in properties) {\n        if (properties[prop].uihints?.hidden) {\n          delete properties[prop];\n          continue;\n        }\n        if (properties[prop].const !== undefined) {\n          properties[prop].default = properties[prop].const;\n          properties[prop].uihints = {\n            'ui:readonly': true\n          };\n        }\n      }\n\n      const metadata = this.allMetadata.find((m) => m.name === this.props.name);\n\n      // Adds categories as wrapper objects in the schema.\n      const metadataWithCategories: GenericObjectType = {};\n      const schemaPropertiesByCategory: GenericObjectType = {\n        _noCategory: {\n          type: 'object',\n          title: ' ',\n          properties: {\n            display_name: {\n              title: this.props.translator.__('Display Name'),\n              description: this.props.translator.__(\n                'Name used to identify an instance of metadata.'\n              ),\n              type: 'string'\n            }\n          },\n          required: ['display_name']\n        }\n      };\n\n      // Adds required fields to the wrapper required fields.\n      const requiredCategories: string[] = [];\n      for (const schemaProperty in schemaMetadata.properties) {\n        const properties = schemaMetadata.properties[schemaProperty];\n        const category =\n          (properties.uihints && properties.uihints.category) ?? '_noCategory';\n\n        if (!metadataWithCategories[category]) {\n          metadataWithCategories[category] = {};\n        }\n        metadataWithCategories[category][schemaProperty] =\n          metadata?.metadata?.[schemaProperty] ?? properties.default;\n        if (schemaProperty === 'code' && this.props.code) {\n          metadataWithCategories[category][schemaProperty] = this.props.code;\n        }\n        if (!schemaPropertiesByCategory[category]) {\n          schemaPropertiesByCategory[category] = {\n            type: 'object',\n            properties: {},\n            required: []\n          };\n        }\n\n        if (schemaMetadata.required?.includes(schemaProperty)) {\n          schemaPropertiesByCategory[category].required.push(schemaProperty);\n          if (!requiredCategories.includes(category)) {\n            requiredCategories.push(category);\n          }\n        }\n        schemaPropertiesByCategory[category]['properties'][schemaProperty] =\n          properties;\n      }\n      if (metadataWithCategories['_noCategory']) {\n        metadataWithCategories['_noCategory']['display_name'] =\n          metadata?.['display_name'];\n      }\n      this.schema = schema;\n      (this.schema.properties?.metadata as GenericObjectType).properties =\n        schemaPropertiesByCategory;\n      (this.schema.properties?.metadata as GenericObjectType).required =\n        requiredCategories;\n      this.metadata = metadataWithCategories;\n      this.title.label = metadata?.display_name ?? `New ${this.schema.title}`;\n      this.loading = false;\n      this.update();\n    } catch (error) {\n      await RequestErrors.serverError(error as IErrorResponse);\n    }\n  }\n\n  /**\n   * Puts the display name field in focus.\n   */\n  setFormFocus(): void {\n    const isFocused = document\n      .querySelector(`.${this.widgetClass}`)\n      ?.contains(document.activeElement);\n\n    if (!isFocused) {\n      const input = document.querySelector(\n        `.${this.widgetClass} .display_nameField input`\n      ) as HTMLInputElement;\n      if (input) {\n        input.focus();\n        input.setSelectionRange(input.value.length, input.value.length);\n      }\n    }\n  }\n\n  onAfterShow(_msg: Message): void {\n    this.setFormFocus();\n  }\n\n  onUpdateRequest(msg: Message): void {\n    super.onUpdateRequest(msg);\n    this.setFormFocus();\n  }\n\n  /**\n   * Sets the state to dirty to enable changing the display and\n   * add warnings when closing with unsaved changes.\n   */\n  handleDirtyState(dirty: boolean): void {\n    this.dirty = dirty;\n    if (dirty && !this.clearDirty) {\n      this.clearDirty = this.props.status.setDirty();\n    } else if (!dirty && this.clearDirty) {\n      this.clearDirty.dispose();\n      this.clearDirty = null;\n    }\n    if (dirty && !this.title.className.includes(DIRTY_CLASS)) {\n      this.title.className += DIRTY_CLASS;\n    } else if (!dirty) {\n      this.title.className = this.title.className.replace(DIRTY_CLASS, '');\n    }\n  }\n\n  onCloseRequest(msg: Message): void {\n    if (this.dirty) {\n      showDialog({\n        title: this.props.translator.__('Close without saving?'),\n        body: <p>Metadata has unsaved changes, close without saving?</p>,\n        buttons: [Dialog.cancelButton(), Dialog.okButton()]\n      }).then((response): void => {\n        if (response.button.accept) {\n          this.dispose();\n          super.onCloseRequest(msg);\n        }\n      });\n    } else {\n      this.dispose();\n      super.onCloseRequest(msg);\n    }\n  }\n\n  getDefaultChoices(fieldName: string): string[] {\n    if (!this.schema || !this.allMetadata) {\n      return [];\n    }\n    const schema = this.schema.properties?.metadata as GenericObjectType;\n    for (const category in schema.properties) {\n      const properties = schema.properties[category].properties[fieldName];\n      if (!properties) {\n        continue;\n      }\n      const defaultChoices =\n        Object.assign([], properties.uihints.default_choices) || [];\n      for (const otherMetadata of this.allMetadata) {\n        if (\n          // Don't include the current metadata\n          otherMetadata !== this.metadata?.metadata &&\n          // Don't add if otherMetadata hasn't defined field\n          otherMetadata.metadata[fieldName] &&\n          !find(defaultChoices, (choice: string) => {\n            return (\n              choice.toLowerCase() ===\n              (otherMetadata.metadata[fieldName] as string).toLowerCase()\n            );\n          })\n        ) {\n          defaultChoices.push(otherMetadata.metadata[fieldName]);\n        }\n      }\n      return defaultChoices;\n    }\n    return [];\n  }\n\n  render(): React.ReactElement {\n    if (this.loading) {\n      return <p>Loading...</p>;\n    }\n\n    if (!this.schema || !this.metadata) {\n      return <p>Error loading metadata</p>;\n    }\n\n    return (\n      <MetadataEditor\n        {...this.props}\n        schemaTop={this.schema}\n        initialMetadata={this.metadata}\n        setDirty={this.handleDirtyState}\n        close={this.close}\n        allTags={this.allTags}\n        getDefaultChoices={this.getDefaultChoices}\n      />\n    );\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IMetadataResource,\n  ISchemaResource,\n  MetadataService\n} from '@elyra/services';\nimport {\n  ExpandableComponent,\n  GenericObjectType,\n  IErrorResponse,\n  JSONComponent,\n  RequestErrors,\n  trashIcon\n} from '@elyra/ui-components';\n\nimport { JupyterFrontEnd } from '@jupyterlab/application';\nimport {\n  Dialog,\n  ReactWidget,\n  showDialog,\n  UseSignal\n} from '@jupyterlab/apputils';\nimport {\n  addIcon,\n  copyIcon,\n  editIcon,\n  LabIcon,\n  refreshIcon\n} from '@jupyterlab/ui-components';\nimport {\n  ReadonlyJSONObject,\n  ReadonlyPartialJSONObject\n} from '@lumino/coreutils';\nimport { Message } from '@lumino/messaging';\nimport { Signal } from '@lumino/signaling';\n\nimport React from 'react';\n\nimport { FilterTools } from './FilterTools';\nimport { MetadataCommonService } from './MetadataCommonService';\n\n/**\n * The CSS class added to metadata widgets.\n */\nexport const METADATA_CLASS = 'elyra-metadata';\nexport const METADATA_HEADER_CLASS = 'elyra-metadataHeader';\nexport const METADATA_ITEM = 'elyra-metadata-item';\nconst METADATA_HEADER_BUTTON_CLASS = 'elyra-metadataHeader-button';\nconst METADATA_JSON_CLASS = 'jp-RenderedJSON CodeMirror cm-s-jupyter';\n\nconst commands = {\n  OPEN_METADATA_EDITOR: 'elyra-metadata-editor:open'\n};\n\nexport interface IMetadataActionButton {\n  title: string;\n  icon: LabIcon;\n  feedback?: string;\n  onClick: () => void;\n}\n\nexport interface IOpenMetadataEditorArgs {\n  titleContext?: string;\n  schema: string;\n  schemaspace: string;\n  name?: string;\n  onSave: () => void;\n  code?: string[];\n}\n\n/**\n * MetadataDisplay props.\n */\nexport interface IMetadataDisplayProps {\n  metadata: IMetadataResource[];\n  openMetadataEditor: (args: IOpenMetadataEditorArgs) => void;\n  updateMetadata: () => void;\n  schemaspace: string;\n  sortMetadata: boolean;\n  className: string;\n  titleContext?: string;\n  labelName?: (args: IMetadataResource) => string;\n  omitTags?: boolean;\n}\n\n/**\n * MetadataDisplay state.\n */\nexport interface IMetadataDisplayState {\n  metadata: IMetadataResource[];\n  searchValue: string;\n  filterTags: string[];\n  matchesSearch: (searchValue: string, metadata: IMetadataResource) => boolean;\n  matchesTags: (\n    filterTags: Set<string>,\n    metadata: IMetadataResource\n  ) => boolean;\n}\n\n/**\n * A React Component for displaying a list of metadata\n */\nexport class MetadataDisplay<\n  T extends IMetadataDisplayProps\n  // U extends IMetadataDisplayState,\n> extends React.Component<T, IMetadataDisplayState> {\n  constructor(props: T) {\n    super(props);\n    this.state = {\n      metadata: props.metadata,\n      searchValue: '',\n      filterTags: [],\n      matchesSearch: this.matchesSearch.bind(this),\n      matchesTags: this.matchesTags.bind(this)\n    };\n  }\n\n  deleteMetadata = (metadata: IMetadataResource): Promise<void> => {\n    return showDialog({\n      title: `Delete ${\n        this.props.labelName ? this.props.labelName(metadata) : ''\n      } ${this.props.titleContext || ''} '${metadata.display_name}'?`,\n      buttons: [Dialog.cancelButton(), Dialog.okButton()]\n    }).then((result) => {\n      // Do nothing if the cancel button is pressed\n      if (result.button.accept) {\n        MetadataService.deleteMetadata(\n          this.props.schemaspace,\n          metadata.name\n        ).catch(async (error) => {\n          await RequestErrors.serverError(error);\n        });\n      }\n    });\n  };\n\n  actionButtons(metadata: IMetadataResource): IMetadataActionButton[] {\n    return [\n      {\n        title: 'Edit',\n        icon: editIcon,\n        onClick: (): void => {\n          this.props.openMetadataEditor({\n            onSave: this.props.updateMetadata,\n            schemaspace: this.props.schemaspace,\n            schema: metadata.schema_name,\n            name: metadata.name\n          });\n        }\n      },\n      {\n        title: 'Duplicate',\n        icon: copyIcon,\n        onClick: (): void => {\n          MetadataCommonService.duplicateMetadataInstance(\n            this.props.schemaspace,\n            metadata,\n            this.props.metadata\n          )\n            .then((): void => {\n              this.props.updateMetadata();\n            })\n            .catch(async (error) => {\n              await RequestErrors.serverError(error);\n            });\n        }\n      },\n      {\n        title: 'Delete',\n        icon: trashIcon,\n        onClick: (): void => {\n          this.deleteMetadata(metadata).then((): void => {\n            this.props.updateMetadata();\n          });\n        }\n      }\n    ];\n  }\n\n  /**\n   * Classes that extend MetadataWidget should override this\n   */\n  renderExpandableContent(metadata: IMetadataResource): JSX.Element {\n    const metadataWithoutTags = metadata.metadata;\n    delete metadataWithoutTags.tags;\n    return (\n      <div className={METADATA_JSON_CLASS}>\n        <JSONComponent json={metadataWithoutTags} />\n      </div>\n    );\n  }\n\n  // Render display of metadata list\n  renderMetadata = (metadata: IMetadataResource): JSX.Element => {\n    return (\n      <div\n        key={metadata.name}\n        className={METADATA_ITEM}\n        style={\n          this.state.metadata.includes(metadata) ? {} : { display: 'none' }\n        }\n      >\n        <ExpandableComponent\n          displayName={metadata.display_name}\n          tooltip={metadata.metadata.description as string}\n          actionButtons={this.actionButtons(metadata)}\n        >\n          <div id={metadata.name}>{this.renderExpandableContent(metadata)}</div>\n        </ExpandableComponent>\n      </div>\n    );\n  };\n\n  /**\n   * A function called when the `sortMetadata` property is `true`, sorts the\n   * `metadata` property alphabetically by `metadata.display_name` by default.\n   * Can be overridden if a different or more intensive sorting is desired.\n   */\n  sortMetadata(): void {\n    this.props.metadata.sort((a, b) =>\n      a.display_name.localeCompare(b.display_name)\n    );\n  }\n\n  filteredMetadata = (searchValue: string, filterTags: string[]): void => {\n    // filter with search\n    let filteredMetadata = this.props.metadata.filter(\n      (metadata: IMetadataResource): boolean => {\n        return (\n          metadata.name.toLowerCase().includes(searchValue.toLowerCase()) ||\n          metadata.display_name\n            .toLowerCase()\n            .includes(searchValue.toLowerCase())\n        );\n      }\n    );\n\n    // filter with tags\n    if (filterTags.length !== 0) {\n      filteredMetadata = filteredMetadata.filter((metadata) => {\n        return filterTags.some((tag) => {\n          const tags = metadata.metadata.tags as string[] | undefined;\n          if (tags) {\n            return tags.includes(tag);\n          }\n          return false;\n        });\n      });\n    }\n\n    this.setState({\n      metadata: filteredMetadata,\n      searchValue: searchValue,\n      filterTags: filterTags\n    });\n  };\n\n  getActiveTags(): string[] {\n    const activeTags: string[] = [];\n    for (const metadata of this.props.metadata) {\n      const metadataTags = metadata.metadata.tags as string[] | undefined;\n      if (metadataTags) {\n        for (const tag of metadataTags) {\n          if (!activeTags.includes(tag)) {\n            activeTags.push(tag);\n          }\n        }\n      }\n    }\n    return activeTags;\n  }\n\n  matchesTags(filterTags: Set<string>, metadata: IMetadataResource): boolean {\n    // True if there are no tags selected or if there are tags that match\n    // tags of metadata\n    const tags = metadata.metadata.tags as string[];\n    return (\n      filterTags.size === 0 || tags?.some((tag: string) => filterTags.has(tag))\n    );\n  }\n\n  matchesSearch(searchValue: string, metadata: IMetadataResource): boolean {\n    searchValue = searchValue.toLowerCase();\n    // True if search string is in name or display_name,\n    // or if the search string is empty\n    return (\n      metadata.name.toLowerCase().includes(searchValue) ||\n      metadata.display_name.toLowerCase().includes(searchValue)\n    );\n  }\n\n  static getDerivedStateFromProps(\n    props: IMetadataDisplayProps,\n    state: IMetadataDisplayState\n  ): IMetadataDisplayState {\n    if (state.searchValue === '' && state.filterTags.length === 0) {\n      return {\n        metadata: props.metadata,\n        searchValue: '',\n        filterTags: [],\n        matchesSearch: state.matchesSearch,\n        matchesTags: state.matchesTags\n      };\n    }\n\n    if (state.searchValue !== '' || state.filterTags.length !== 0) {\n      const filterTags = new Set(state.filterTags);\n      const searchValue = state.searchValue.toLowerCase().trim();\n\n      const newMetadata = props.metadata.filter(\n        (metadata) =>\n          state.matchesSearch(searchValue, metadata) &&\n          state.matchesTags(filterTags, metadata)\n      );\n      return {\n        metadata: newMetadata,\n        searchValue: state.searchValue,\n        filterTags: state.filterTags,\n        matchesSearch: state.matchesSearch,\n        matchesTags: state.matchesTags\n      };\n    }\n    return state;\n  }\n\n  render(): React.ReactElement {\n    if (this.props.sortMetadata) {\n      this.sortMetadata();\n    }\n    return (\n      <div id=\"elyra-metadata\" className={this.props.className}>\n        <FilterTools\n          onFilter={this.filteredMetadata}\n          tags={this.getActiveTags()}\n          omitTags={this.props.omitTags}\n          schemaspace={`${this.props.schemaspace}`}\n        />\n        <div>{this.props.metadata.map(this.renderMetadata)}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * MetadataWidget props.\n */\nexport interface IMetadataWidgetProps {\n  app: JupyterFrontEnd;\n  display_name: string;\n  schemaspace: string;\n  icon: LabIcon;\n  titleContext?: string;\n  appendToTitle?: boolean;\n  addLabel?: string;\n}\n\n/**\n * A abstract widget for viewing metadata.\n */\nexport class MetadataWidget extends ReactWidget {\n  renderSignal: Signal<this, IMetadataResource[]>;\n  props: IMetadataWidgetProps;\n  schemas?: ISchemaResource[];\n  titleContext?: string;\n  addLabel?: string;\n  refreshButtonTooltip?: string;\n\n  constructor(props: IMetadataWidgetProps) {\n    super();\n    this.addClass('elyra-metadata');\n\n    this.props = props;\n    this.renderSignal = new Signal<this, IMetadataResource[]>(this);\n    this.titleContext = props.titleContext;\n    this.addLabel = props.addLabel;\n    this.fetchMetadata = this.fetchMetadata.bind(this);\n    this.getSchemas = this.getSchemas.bind(this);\n    this.updateMetadata = this.updateMetadata.bind(this);\n    this.refreshMetadata = this.refreshMetadata.bind(this);\n    this.openMetadataEditor = this.openMetadataEditor.bind(this);\n    this.renderDisplay = this.renderDisplay.bind(this);\n    this.addMetadata = this.addMetadata.bind(this);\n\n    this.getSchemas();\n  }\n\n  async getSchemas(): Promise<void> {\n    try {\n      this.schemas = await MetadataService.getSchema(this.props.schemaspace);\n      const sortedSchema =\n        this.schemas?.sort((a, b) =>\n          (a.title ?? '').localeCompare(b.title ?? '')\n        ) ?? [];\n      if (sortedSchema.length > 1) {\n        for (const schema of sortedSchema) {\n          this.props.app.contextMenu.addItem({\n            selector: `#${this.props.schemaspace} .elyra-metadataHeader-addButton`,\n            command: 'elyra-metadata-editor:open',\n            args: {\n              onSave: this.updateMetadata,\n              schemaspace: this.props.schemaspace,\n              schema: schema.name,\n              title: schema.title,\n              titleContext: this.props.titleContext,\n              addLabel: this.props.addLabel,\n              appendToTitle: this.props.appendToTitle\n            } as unknown as ReadonlyJSONObject\n          });\n        }\n      }\n      this.update();\n    } catch (error) {\n      await RequestErrors.serverError(error as IErrorResponse);\n    }\n  }\n\n  addMetadata(schema: string, titleContext?: string): void {\n    this.openMetadataEditor({\n      onSave: this.updateMetadata,\n      schemaspace: this.props.schemaspace,\n      schema: schema,\n      titleContext\n    });\n  }\n\n  /**\n   * Request metadata from server and format it as expected by the\n   * instance of `MetadataDisplay` rendered in `renderDisplay`\n   *\n   * Classes that extend MetadataWidget should override this\n   *\n   * @returns metadata in the format expected by `renderDisplay`\n   */\n  async fetchMetadata(): Promise<IMetadataResource[] | undefined> {\n    try {\n      return await MetadataService.getMetadata(this.props.schemaspace);\n    } catch (error) {\n      await RequestErrors.serverError(error as IErrorResponse);\n      return;\n    }\n  }\n\n  updateMetadata(): void {\n    this.fetchMetadata().then((metadata) => {\n      if (!metadata) {\n        return;\n      }\n      this.renderSignal.emit(metadata);\n    });\n  }\n\n  refreshMetadata(): void {\n    this.updateMetadata();\n  }\n\n  // Triggered when the widget button on side panel is clicked\n  onAfterShow(_msg: Message): void {\n    this.updateMetadata();\n  }\n\n  openMetadataEditor = (args: IOpenMetadataEditorArgs): void => {\n    this.props.app.commands.execute(\n      commands.OPEN_METADATA_EDITOR,\n      args as unknown as ReadonlyPartialJSONObject\n    );\n  };\n\n  omitTags(): boolean {\n    for (const schema of this.schemas ?? []) {\n      const metadata = schema.properties?.metadata as\n        | GenericObjectType\n        | undefined;\n      if (metadata?.properties?.tags) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Classes that extend MetadataWidget should override this\n   *\n   * @returns a rendered instance of `MetadataDisplay`\n   */\n  renderDisplay(metadata: IMetadataResource[]): React.ReactElement {\n    if (Array.isArray(metadata) && !metadata.length) {\n      // Empty metadata\n      return (\n        <div>\n          <br />\n          <h6 className=\"elyra-no-metadata-msg\">\n            Click the + button to add {this.props.display_name.toLowerCase()}\n          </h6>\n        </div>\n      );\n    }\n\n    return (\n      <MetadataDisplay\n        metadata={metadata}\n        updateMetadata={this.updateMetadata}\n        openMetadataEditor={this.openMetadataEditor}\n        schemaspace={this.props.schemaspace}\n        sortMetadata={true}\n        className={`${METADATA_CLASS}-${this.props.schemaspace}`}\n        omitTags={this.omitTags()}\n        titleContext={this.props.titleContext}\n      />\n    );\n  }\n\n  render(): React.ReactElement {\n    const singleSchema = this.schemas?.length === 1;\n    return (\n      <div id={this.props.schemaspace} className={METADATA_CLASS}>\n        <header className={METADATA_HEADER_CLASS}>\n          <div style={{ display: 'flex' }}>\n            <this.props.icon.react\n              tag=\"span\"\n              width=\"auto\"\n              height=\"24px\"\n              verticalAlign=\"middle\"\n              marginRight=\"5px\"\n            />\n            <p> {this.props.display_name} </p>\n          </div>\n          <div className=\"elyra-metadataHeader-buttons\">\n            <button\n              className={METADATA_HEADER_BUTTON_CLASS}\n              onClick={(): void => {\n                this.refreshMetadata();\n              }}\n              title={this.refreshButtonTooltip ?? 'Refresh list'}\n            >\n              <refreshIcon.react\n                tag=\"span\"\n                elementPosition=\"center\"\n                width=\"16px\"\n              />\n            </button>\n            <div className=\"elyra-metadataHeader-buttonDivider\" />\n            <button\n              className={`${METADATA_HEADER_BUTTON_CLASS} elyra-metadataHeader-addButton`}\n              onClick={\n                singleSchema\n                  ? (): void =>\n                      this.addMetadata(\n                        this.schemas?.[0].name ?? '',\n                        this.titleContext\n                      )\n                  : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- types mismatch\n                    (event: any): void => {\n                      this.props.app.contextMenu.open(event);\n                    }\n              }\n              title={`Create new ${this.addLabel}`}\n            >\n              <addIcon.react tag=\"span\" elementPosition=\"center\" width=\"16px\" />\n            </button>\n          </div>\n        </header>\n        <UseSignal signal={this.renderSignal} initialArgs={[]}>\n          {(_, metadata): React.ReactElement =>\n            this.renderDisplay(metadata ?? [])\n          }\n        </UseSignal>\n      </div>\n    );\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '../style/index.css';\n\nexport * from './MetadataEditor';\nexport * from './MetadataWidget';\nexport * from './MetadataCommonService';\nexport * from './MetadataEditorWidget';\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}