{"version":3,"file":"lib_PipelineEditorWidget_js-lib_index_js.a81f787afc8ba18ca260.js","mappings":"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","sources":["webpack://@elyra/pipeline-editor-extension/./src/ComponentCatalogsWidget.tsx","webpack://@elyra/pipeline-editor-extension/./src/EmptyPipelineContent.tsx","webpack://@elyra/pipeline-editor-extension/./src/FileSubmissionDialog.tsx","webpack://@elyra/pipeline-editor-extension/./src/ParameterInputForm.tsx","webpack://@elyra/pipeline-editor-extension/./src/PipelineEditorWidget.tsx","webpack://@elyra/pipeline-editor-extension/./src/PipelineExportDialog.tsx","webpack://@elyra/pipeline-editor-extension/./src/PipelineService.tsx","webpack://@elyra/pipeline-editor-extension/./src/PipelineSubmissionDialog.tsx","webpack://@elyra/pipeline-editor-extension/./src/RuntimeConfigSelect.tsx","webpack://@elyra/pipeline-editor-extension/./src/RuntimeImagesWidget.tsx","webpack://@elyra/pipeline-editor-extension/./src/RuntimesWidget.tsx","webpack://@elyra/pipeline-editor-extension/./src/SubmitFileButtonExtension.tsx","webpack://@elyra/pipeline-editor-extension/./src/formDialogWidget.ts","webpack://@elyra/pipeline-editor-extension/./src/index.ts","webpack://@elyra/pipeline-editor-extension/./src/pipeline-hooks.ts","webpack://@elyra/pipeline-editor-extension/./src/runtime-utils.ts","webpack://@elyra/pipeline-editor-extension/./src/theme.tsx","webpack://@elyra/pipeline-editor-extension/./src/utils.ts"],"sourcesContent":["/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MetadataWidget,\n  IMetadataWidgetProps,\n  MetadataDisplay,\n  IMetadataDisplayProps,\n  IMetadataActionButton\n} from '@elyra/metadata-common';\nimport { IMetadataResource, MetadataService } from '@elyra/services';\nimport {\n  GenericObjectType,\n  IErrorResponse,\n  RequestErrors\n} from '@elyra/ui-components';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\nimport { LabIcon, refreshIcon } from '@jupyterlab/ui-components';\n\nimport React from 'react';\n\nimport { IRuntimeType, PipelineService } from './PipelineService';\n\nexport const COMPONENT_CATALOGS_SCHEMASPACE = 'component-catalogs';\n\nconst COMPONENT_CATALOGS_CLASS = 'elyra-metadata-component-catalogs';\n\n/**\n * A React Component for displaying the component catalogs list.\n */\nclass ComponentCatalogsDisplay extends MetadataDisplay<IMetadataDisplayProps> {\n  actionButtons(metadata: IMetadataResource): IMetadataActionButton[] {\n    return [\n      {\n        title: 'Reload components from catalog',\n        icon: refreshIcon,\n        onClick: (): void => {\n          PipelineService.refreshComponentsCache(metadata.name)\n            .then((): void => {\n              this.props.updateMetadata();\n            })\n            .catch((error) =>\n              console.error(\n                'An error occurred while refreshing components from catalog:',\n                error\n              )\n            );\n        }\n      },\n      ...super.actionButtons(metadata)\n    ];\n  }\n\n  //render catalog entries\n  renderExpandableContent(metadata: IMetadataResource): JSX.Element {\n    let category_output = [<li key=\"No category\">No category</li>];\n    if (metadata.metadata.categories) {\n      category_output = (metadata.metadata.categories as string[]).map(\n        (category) => <li key={category}>{category}</li>\n      );\n    }\n\n    return (\n      <div>\n        <h6>Runtime Type</h6>\n        {metadata.metadata.runtime_type as string}\n        <br />\n        <br />\n        <h6>Description</h6>\n        {(metadata.metadata.description as string) ?? 'No description'}\n        <br />\n        <br />\n        <h6>Categories</h6>\n        <ul>{category_output}</ul>\n      </div>\n    );\n  }\n\n  // Allow for filtering by display_name, name, and description\n  matchesSearch(searchValue: string, metadata: IMetadataResource): boolean {\n    searchValue = searchValue.toLowerCase();\n    // True if search string is in name or display_name,\n    // or if the search string is empty\n    const description = (\n      (metadata.metadata.description as string) || ''\n    ).toLowerCase();\n    return (\n      metadata.name.toLowerCase().includes(searchValue) ||\n      metadata.display_name.toLowerCase().includes(searchValue) ||\n      description.includes(searchValue)\n    );\n  }\n}\n\n/**\n * ComponentCatalogsWidget props.\n */\nexport interface IComponentCatalogsWidgetProps extends IMetadataWidgetProps {\n  app: JupyterFrontEnd;\n  display_name: string;\n  schemaspace: string;\n  icon: LabIcon;\n  titleContext?: string;\n  appendToTitle?: boolean;\n  refreshCallback?: () => void;\n}\n\n/**\n * A widget for displaying component catalogs.\n */\nexport class ComponentCatalogsWidget extends MetadataWidget {\n  refreshButtonTooltip: string;\n  refreshCallback?: () => void;\n  runtimeTypes: IRuntimeType[] = [];\n\n  constructor(props: IComponentCatalogsWidgetProps) {\n    super(props);\n    this.refreshCallback = props.refreshCallback;\n    this.refreshButtonTooltip =\n      'Refresh list and reload components from all catalogs';\n  }\n\n  async getSchemas(): Promise<void> {\n    try {\n      const schemas = await MetadataService.getSchema(this.props.schemaspace);\n      if (!schemas) {\n        return;\n      }\n      this.runtimeTypes = await PipelineService.getRuntimeTypes();\n      const sortedSchema = schemas.sort((a, b) =>\n        (a.title ?? '').localeCompare(b.title ?? '')\n      );\n      this.schemas = sortedSchema.filter((schema) => {\n        return !!this.runtimeTypes.find((r) => {\n          const metadata = schema.properties?.metadata as GenericObjectType;\n          return (\n            metadata?.properties.runtime_type?.enum?.includes(r.id) &&\n            r.runtime_enabled\n          );\n        });\n      });\n      if (this.schemas?.length ?? 0 > 1) {\n        for (const schema of this.schemas ?? []) {\n          this.props.app.contextMenu.addItem({\n            selector: `#${this.props.schemaspace} .elyra-metadataHeader-addButton`,\n            command: 'elyra-metadata-editor:open',\n            args: {\n              onSave: this.updateMetadata,\n              schemaspace: this.props.schemaspace,\n              schema: schema.name,\n              title: schema.title,\n              titleContext: this.props.titleContext,\n              appendToTitle: this.props.appendToTitle\n            } as GenericObjectType\n          });\n        }\n      }\n      this.update();\n    } catch (error) {\n      await RequestErrors.serverError(error as IErrorResponse);\n    }\n  }\n\n  // wrapper function that refreshes the palette after calling updateMetadata\n  updateMetadataAndRefresh = (): void => {\n    super.updateMetadata();\n    if (this.refreshCallback) {\n      this.refreshCallback();\n    }\n  };\n\n  refreshMetadata(): void {\n    PipelineService.refreshComponentsCache()\n      .then((): void => {\n        this.updateMetadataAndRefresh();\n      })\n      .catch(async (error) => {\n        // silently eat a 409, the server will log in in the console\n        if (error.status !== 409) {\n          await RequestErrors.serverError(error);\n        }\n      });\n  }\n\n  renderDisplay(metadata: IMetadataResource[]): React.ReactElement {\n    if (Array.isArray(metadata) && !metadata.length) {\n      // Empty metadata\n      return (\n        <div>\n          <br />\n          <h6 className=\"elyra-no-metadata-msg\">\n            Click the + button to add {this.props.display_name.toLowerCase()}\n          </h6>\n        </div>\n      );\n    }\n\n    const filteredMetadata = metadata.filter((m) => {\n      return !!this.runtimeTypes.find((r) => m.metadata?.runtime_type === r.id);\n    });\n\n    return (\n      <ComponentCatalogsDisplay\n        metadata={filteredMetadata}\n        updateMetadata={this.updateMetadataAndRefresh}\n        openMetadataEditor={this.openMetadataEditor}\n        schemaspace={COMPONENT_CATALOGS_SCHEMASPACE}\n        sortMetadata={true}\n        className={COMPONENT_CATALOGS_CLASS}\n        omitTags={this.omitTags()}\n        titleContext={this.props.titleContext}\n      />\n    );\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { componentCatalogIcon, dragDropIcon } from '@elyra/ui-components';\nimport { settingsIcon } from '@jupyterlab/ui-components';\n\nimport React from 'react';\n\nconst HEADER_CLASS = 'empty-pipeline-header';\nconst BUTTON_CLASS = 'empty-pipeline-button';\nconst ICON_CLASS = 'empty-pipeline-icon';\n\nexport interface IEmptyGenericPipelineProps {\n  onOpenSettings: () => void;\n}\n\nexport const EmptyGenericPipeline: React.FC<IEmptyGenericPipelineProps> = ({\n  onOpenSettings\n}) => {\n  return (\n    <div>\n      <dragDropIcon.react\n        className=\"drag-drop-icon\"\n        tag=\"div\"\n        elementPosition=\"center\"\n        height=\"120px\"\n      />\n      <h3 className={HEADER_CLASS}>\n        Start your new pipeline by dragging files from the file browser pane\n      </h3>\n      <br />\n      <br />\n      <h3 className={HEADER_CLASS}>\n        Click{' '}\n        <button\n          title=\"Settings\"\n          className={BUTTON_CLASS}\n          onClick={onOpenSettings}\n        >\n          <settingsIcon.react className={ICON_CLASS} tag=\"div\" height=\"24px\" />\n        </button>{' '}\n        to configure the pipeline editor.\n      </h3>\n    </div>\n  );\n};\n\nexport interface IEmptyPlatformSpecificPipelineProps {\n  onOpenCatalog: () => void;\n  onOpenSettings: () => void;\n}\n\nexport const EmptyPlatformSpecificPipeline: React.FC<\n  IEmptyPlatformSpecificPipelineProps\n> = ({ onOpenCatalog, onOpenSettings }) => {\n  // Note: the URL is rewritten by the release script by replacing `latest` with a\n  // specific version number, e.g. https://.../en/v3.6.0/user_guide/pi...\n  const customComponentsHelpTopicURL =\n    'https://elyra.readthedocs.io/en/latest/user_guide/pipeline-components.html';\n\n  return (\n    <div>\n      <dragDropIcon.react\n        className=\"drag-drop-icon\"\n        tag=\"div\"\n        elementPosition=\"center\"\n        height=\"120px\"\n      />\n      <h3 className={HEADER_CLASS}>\n        Start your new pipeline by dragging files from the file browser pane or\n        add custom components by clicking the{' '}\n        <button className={BUTTON_CLASS} onClick={onOpenCatalog}>\n          <componentCatalogIcon.react\n            className={ICON_CLASS}\n            tag=\"div\"\n            height=\"24px\"\n          />\n        </button>{' '}\n        button.\n      </h3>\n      <h4 className={HEADER_CLASS}>\n        Refer to the\n        <a\n          href={customComponentsHelpTopicURL}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {' '}\n          &apos;pipeline components&apos; help topic{' '}\n        </a>\n        for details.\n      </h4>\n      <br />\n      <br />\n      <h3 className={HEADER_CLASS}>\n        Click{' '}\n        <button\n          title=\"Settings\"\n          className={BUTTON_CLASS}\n          onClick={onOpenSettings}\n        >\n          <settingsIcon.react className={ICON_CLASS} tag=\"div\" height=\"24px\" />\n        </button>{' '}\n        to configure the pipeline editor.\n      </h3>\n    </div>\n  );\n};\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IDictionary } from '@elyra/services';\nimport * as React from 'react';\n\nimport { IRuntimeData } from './runtime-utils';\nimport RuntimeConfigSelect from './RuntimeConfigSelect';\nimport Utils from './utils';\n\ninterface IProps {\n  env: string[];\n  dependencyFileExtension: string;\n  images: IDictionary<string>;\n  runtimeData: IRuntimeData;\n}\n\nconst EnvForm: React.FC<{ env: string[] }> = ({ env }) => {\n  if (env.length > 0) {\n    return (\n      <>\n        <br />\n        <br />\n        <div>Environment Variables:</div>\n        <br />\n        {Utils.chunkArray(env, 4).map((col, i) => (\n          <div key={i}>\n            {col.map((envVar) => (\n              <div key={envVar}>\n                <label htmlFor={envVar}>{envVar}:</label>\n                <br />\n                <input\n                  type=\"text\"\n                  id={envVar}\n                  className=\"envVar\"\n                  name={envVar}\n                  size={30}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n      </>\n    );\n  }\n  return null;\n};\n\nexport const FileSubmissionDialog: React.FC<IProps> = ({\n  env,\n  images,\n  dependencyFileExtension,\n  runtimeData\n}) => {\n  const [includeDependency, setIncludeDependency] = React.useState(true);\n\n  const handleToggle = (): void => {\n    setIncludeDependency((prev) => !prev);\n  };\n\n  return (\n    <form className=\"elyra-dialog-form\">\n      <RuntimeConfigSelect runtimeData={runtimeData} />\n      <label htmlFor=\"framework\">Runtime Image:</label>\n      <br />\n      <select id=\"framework\" name=\"framework\" className=\"elyra-form-framework\">\n        {Object.entries(images).map(([key, val]) => (\n          <option key={key} value={key}>\n            {val}\n          </option>\n        ))}\n      </select>\n      <br />\n      <div className=\"elyra-resourcesWrapper\">\n        <div className=\"elyra-resourceInput\">\n          <label htmlFor=\"cpu\"> CPU request:</label>\n          <div className=\"elyra-resourceInputDescription\" id=\"cpu-description\">\n            For CPU-intensive workloads, you can request more than 1 CPU (e.g.\n            1.5, this is optional).\n          </div>\n          <input id=\"cpu\" type=\"number\" name=\"cpu\" />\n        </div>\n        <div className=\"elyra-resourceInput\">\n          <label htmlFor=\"cpu_limit\"> CPU limit:</label>\n          <div\n            className=\"elyra-resourceInputDescription\"\n            id=\"cpu-limit-description\"\n          >\n            The maximum CPU that can be allocated to this node. This should be\n            equal or higher than the request\n          </div>\n          <input id=\"cpu_limit\" type=\"number\" name=\"cpu_limit\" />\n        </div>\n        <div className=\"elyra-resourceInput\">\n          <label htmlFor=\"gpu\"> GPU:</label>\n          <div className=\"elyra-resourceInputDescription\" id=\"gpu-description\">\n            For GPU-intensive workloads, you can choose more than 1 GPU. Must be\n            an integer.\n          </div>\n          <input id=\"gpu\" type=\"number\" name=\"gpu\" />\n        </div>\n        <div className=\"elyra-resourceInput\">\n          <label htmlFor=\"memory\"> RAM request (GB):</label>\n          <div\n            className=\"elyra-resourceInputDescription\"\n            id=\"memory-description\"\n          >\n            The total amount of RAM requested (optional).\n          </div>\n          <input id=\"memory\" type=\"number\" name=\"memory\" />\n        </div>\n        <div className=\"elyra-resourceInput\">\n          <label htmlFor=\"memory_limit\"> RAM limit (GB):</label>\n          <div\n            className=\"elyra-resourceInputDescription\"\n            id=\"memory-limit-description\"\n          >\n            The maximum amount of RAM allowed. This should be equal or higher\n            than the request\n          </div>\n          <input id=\"memory_limit\" type=\"number\" name=\"memory_limit\" />\n        </div>\n      </div>\n      <br />\n      <input\n        type=\"checkbox\"\n        className=\"elyra-Dialog-checkbox\"\n        id=\"dependency_include\"\n        name=\"dependency_include\"\n        size={20}\n        checked={includeDependency}\n        onChange={handleToggle}\n      />\n      <label htmlFor=\"dependency_include\">Include File Dependencies:</label>\n      <br />\n      {includeDependency && (\n        <div key=\"dependencies\">\n          <br />\n          <input\n            type=\"text\"\n            id=\"dependencies\"\n            className=\"jp-mod-styled\"\n            name=\"dependencies\"\n            placeholder={`*${dependencyFileExtension}`}\n            defaultValue={`*${dependencyFileExtension}`}\n            size={30}\n          />\n        </div>\n      )}\n      <EnvForm env={env} />\n    </form>\n  );\n};\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\n\nconst DIALOG_WIDTH = 27;\n\nexport interface IParameterProps {\n  parameters?: {\n    name: string;\n    default_value?:\n      | { type: 'String'; value: string }\n      | { type: 'Integer'; value: number }\n      | { type: 'Float'; value: number }\n      | { type: 'Bool'; value: boolean };\n\n    type?: string;\n    required?: boolean;\n    description?: string;\n  }[];\n}\n\nexport const ParameterInputForm: React.FC<IParameterProps> = ({\n  parameters\n}) => {\n  return parameters && parameters.length > 0 ? (\n    <div>\n      <label\n        style={{\n          fontWeight: '600',\n          fontSize: 'var(--jp-content-font-size1)'\n        }}\n      >\n        Parameters\n      </label>\n      {parameters.map((param) => {\n        if (!param.name) {\n          return undefined;\n        }\n        const required =\n          param.required === true && param.default_value?.value === ''\n            ? true\n            : undefined;\n        let type = 'text';\n        switch (param.default_value?.type) {\n          case 'Bool':\n            type = 'checkbox';\n            break;\n          case 'Float':\n          case 'Integer':\n            type = 'number';\n            break;\n        }\n        if (type === 'checkbox') {\n          return (\n            <div key={param.name}>\n              <input\n                id={`${param.name}-paramInput`}\n                name={`${param.name}-paramInput`}\n                defaultChecked={param.default_value?.value as boolean}\n                type=\"checkbox\"\n              />\n              <label htmlFor={`${param.name}-paramInput`}>{`${param.name}${\n                required ? '*' : ''\n              }`}</label>\n              <br />\n              <br />\n            </div>\n          );\n        }\n        return (\n          <div key={param.name}>\n            <div className=\"label-header\">\n              <label\n                className=\"control-label\"\n                htmlFor={`${param.name}-paramInput`}\n              >{`${param.name}${param.required ? '*' : ''}`}</label>\n              {param.description && (\n                <div className=\"description-wrapper\">\n                  <div className=\"description-button\">?</div>\n                  <p\n                    style={{\n                      transform: `translate(0px, -10%)`,\n                      left: `-${\n                        Math.min(\n                          param.name.length,\n                          Math.min(DIALOG_WIDTH, param.description.length)\n                        ) - 4\n                      }ch`\n                    }}\n                    className={'field-description'}\n                  >\n                    {param.description}\n                  </p>\n                </div>\n              )}\n            </div>\n            <input\n              id={`${param.name}-paramInput`}\n              name={`${param.name}-paramInput`}\n              type={type}\n              placeholder={param.default_value?.value as string | undefined}\n              data-form-required={required}\n            />\n            <br />\n            <br />\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <div />\n  );\n};\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PipelineEditor,\n  PipelineOutOfDateError,\n  ThemeProvider\n} from '@elyra/pipeline-editor';\nimport {\n  migrate,\n  validate,\n  ComponentNotFoundError\n} from '@elyra/pipeline-services';\nimport { ContentParser } from '@elyra/services';\nimport {\n  IconUtil,\n  clearPipelineIcon,\n  exportPipelineIcon,\n  pipelineIcon,\n  savePipelineIcon,\n  showBrowseFileDialog,\n  runtimesIcon,\n  containerIcon,\n  Dropzone,\n  RequestErrors,\n  showFormDialog,\n  componentCatalogIcon,\n  GenericObjectType\n} from '@elyra/ui-components';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\nimport { Dialog, ReactWidget, showDialog } from '@jupyterlab/apputils';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport {\n  DocumentRegistry,\n  ABCWidgetFactory,\n  DocumentWidget\n} from '@jupyterlab/docregistry';\nimport { IDefaultFileBrowser } from '@jupyterlab/filebrowser';\nimport { ServiceManager } from '@jupyterlab/services';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\n\nimport 'carbon-components/css/carbon-components.min.css';\n\nimport { toArray } from '@lumino/algorithm';\nimport { CommandRegistry } from '@lumino/commands';\nimport {\n  PartialJSONArray,\n  PartialJSONObject,\n  PartialJSONValue,\n  ReadonlyPartialJSONObject\n} from '@lumino/coreutils';\nimport { IDragEvent } from '@lumino/dragdrop';\nimport { Signal } from '@lumino/signaling';\n\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  EmptyGenericPipeline,\n  EmptyPlatformSpecificPipeline\n} from './EmptyPipelineContent';\nimport { formDialogWidget } from './formDialogWidget';\nimport {\n  IRuntimeComponentNodeType,\n  IRuntimeComponentParameter,\n  IRuntimeComponentsResponse,\n  IRuntimeImage,\n  usePalette,\n  useRuntimeImages,\n  useRuntimesSchema\n} from './pipeline-hooks';\nimport { PipelineExportDialog } from './PipelineExportDialog';\nimport {\n  PipelineService,\n  RUNTIMES_SCHEMASPACE,\n  RUNTIME_IMAGES_SCHEMASPACE,\n  COMPONENT_CATALOGS_SCHEMASPACE,\n  IRuntimeSchema\n} from './PipelineService';\nimport { PipelineSubmissionDialog } from './PipelineSubmissionDialog';\nimport {\n  createRuntimeData,\n  getConfigDetails,\n  IRuntimeData\n} from './runtime-utils';\nimport { theme } from './theme';\n\nimport { getEmptyPipelineJson } from './index';\n\nconst PIPELINE_CLASS = 'elyra-PipelineEditor';\n\nexport const commandIDs = {\n  openPipelineEditor: 'pipeline-editor:open',\n  openMetadata: 'elyra-metadata:open',\n  openDocManager: 'docmanager:open',\n  newDocManager: 'docmanager:new-untitled',\n  saveDocManager: 'docmanager:save',\n  submitScript: 'script-editor:submit',\n  submitNotebook: 'notebook:submit',\n  addFileToPipeline: 'pipeline-editor:add-node',\n  refreshPalette: 'pipeline-editor:refresh-palette',\n  openViewer: 'code-viewer:open'\n};\n\ninterface IExtendedThemeProviderProps\n  extends React.ComponentProps<typeof ThemeProvider> {\n  children: React.ReactNode;\n}\n\n//extend ThemeProvider to accept the same props as original but with children prop as one of them.\nconst ExtendedThemeProvider: React.FC<IExtendedThemeProviderProps> = ({\n  children,\n  ...props\n}) => {\n  return <ThemeProvider {...props}>{children}</ThemeProvider>;\n};\n\nconst getAllPaletteNodes = (\n  palette: IRuntimeComponentsResponse | undefined\n): IRuntimeComponentNodeType[] => {\n  if (palette?.categories === undefined) {\n    return [];\n  }\n\n  const nodes: IRuntimeComponentNodeType[] = [];\n  for (const c of palette.categories) {\n    if (c.node_types) {\n      nodes.push(...c.node_types);\n    }\n  }\n\n  return nodes;\n};\n\nconst isRuntimeTypeAvailable = (data: IRuntimeData, type?: string): boolean => {\n  for (const p of data.platforms) {\n    if (type === undefined || p.id === type) {\n      if (p.configs.length > 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst getDisplayName = (\n  runtimesSchema?: IRuntimeSchema[],\n  type?: string\n): string | undefined => {\n  if (!type) {\n    return undefined;\n  }\n  const schema = runtimesSchema?.find((s) => s.runtime_type === type);\n  return schema?.title;\n};\n\ninterface IPipelineEditorWidgetProps {\n  context: DocumentRegistry.Context;\n  browserFactory: IDefaultFileBrowser;\n  serviceManager: ServiceManager.IManager;\n  shell: JupyterFrontEnd.IShell;\n  commands: CommandRegistry;\n  settings?: ISettingRegistry.ISettings;\n  widgetId?: string;\n  defaultRuntimeType: string;\n}\n\nclass PipelineEditorWidget extends ReactWidget {\n  addFileToPipelineSignal: Signal<\n    PipelineEditorWidget,\n    ReadonlyPartialJSONObject\n  >;\n  refreshPaletteSignal: Signal<PipelineEditorWidget, ReadonlyPartialJSONObject>;\n\n  constructor(private readonly args: IPipelineEditorWidgetProps) {\n    super();\n    let nullPipeline = this.args.context.model.toJSON() === null;\n\n    this.addFileToPipelineSignal = new Signal<\n      PipelineEditorWidget,\n      ReadonlyPartialJSONObject\n    >(this);\n\n    this.refreshPaletteSignal = new Signal<\n      PipelineEditorWidget,\n      ReadonlyPartialJSONObject\n    >(this);\n\n    this.args.context.model.contentChanged.connect(() => {\n      if (nullPipeline) {\n        nullPipeline = false;\n        this.update();\n      }\n    });\n    this.args.context.fileChanged.connect(() => {\n      if (this.args.context.model.toJSON() === null) {\n        const pipelineJson = getEmptyPipelineJson(this.args.defaultRuntimeType);\n        this.args.context.model.fromString(JSON.stringify(pipelineJson));\n      }\n    });\n  }\n\n  render() {\n    if (this.args.context.model.toJSON() === null) {\n      return <div className=\"elyra-loader\"></div>;\n    }\n    return (\n      <PipelineWrapper\n        context={this.args.context}\n        browserFactory={this.args.browserFactory}\n        shell={this.args.shell}\n        commands={this.args.commands}\n        addFileToPipelineSignal={this.addFileToPipelineSignal}\n        refreshPaletteSignal={this.refreshPaletteSignal}\n        widgetId={this.parent?.id}\n        settings={this.args.settings}\n        defaultRuntimeType={this.args.defaultRuntimeType}\n        serviceManager={this.args.serviceManager}\n      />\n    );\n  }\n}\n\nconst PipelineWrapper: React.FC<\n  IPipelineEditorWidgetProps & {\n    addFileToPipelineSignal: Signal<\n      PipelineEditorWidget,\n      ReadonlyPartialJSONObject\n    >;\n    refreshPaletteSignal: Signal<\n      PipelineEditorWidget,\n      ReadonlyPartialJSONObject\n    >;\n  }\n> = ({\n  context,\n  browserFactory,\n  shell,\n  commands,\n  addFileToPipelineSignal,\n  refreshPaletteSignal,\n  settings,\n  widgetId\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- PipelineEditor API not typed\n  const ref = useRef<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [pipeline, setPipeline] = useState<GenericObjectType>(\n    context.model.toJSON() as GenericObjectType\n  );\n  const [panelOpen, setPanelOpen] = React.useState(false);\n\n  const type: string | undefined =\n    pipeline?.pipelines?.[0]?.app_data?.runtime_type;\n\n  const { data: runtimesSchema, error: runtimesSchemaError } =\n    useRuntimesSchema();\n\n  const doubleClickToOpenProperties =\n    settings?.composite['doubleClickToOpenProperties'] ?? true;\n\n  const runtimeDisplayName = getDisplayName(runtimesSchema, type) ?? 'Generic';\n\n  const filePersistedRuntimeImages = useMemo(() => {\n    const images: string[] = [];\n    const pipelineDefaultRuntimeImage =\n      pipeline?.pipelines?.[0]?.app_data?.properties?.pipeline_defaults\n        ?.runtime_image;\n    if (pipelineDefaultRuntimeImage?.length > 0) {\n      images.push(pipelineDefaultRuntimeImage);\n    }\n    const nodes = pipeline?.pipelines?.[0]?.nodes;\n    if (nodes?.length > 0) {\n      for (const node of nodes) {\n        const nodeRuntimeImage =\n          node?.app_data?.component_parameters?.runtime_image;\n        if (nodeRuntimeImage?.length > 0) {\n          images.push(nodeRuntimeImage);\n        }\n      }\n    }\n\n    return images.map((imageName) => {\n      return {\n        name: imageName,\n        display_name: imageName,\n        metadata: {\n          image_name: imageName\n        }\n      } as IRuntimeImage;\n    });\n  }, [pipeline]);\n\n  const {\n    data: palette,\n    error: paletteError,\n    mutate: mutatePalette\n  } = usePalette(type, filePersistedRuntimeImages);\n\n  useEffect(() => {\n    const handleMutateSignal = (): void => {\n      mutatePalette?.();\n    };\n    refreshPaletteSignal.connect(handleMutateSignal);\n    return (): void => {\n      refreshPaletteSignal.disconnect(handleMutateSignal);\n    };\n  }, [refreshPaletteSignal, mutatePalette]);\n\n  const { data: runtimeImages, error: runtimeImagesError } = useRuntimeImages();\n\n  useEffect(() => {\n    if (runtimeImages?.length === 0) {\n      RequestErrors.noMetadataError('runtime image');\n    }\n  }, [runtimeImages?.length]);\n\n  useEffect(() => {\n    if (paletteError) {\n      RequestErrors.serverError(paletteError).then(() => {\n        shell.currentWidget?.close();\n      });\n    }\n  }, [paletteError, shell.currentWidget]);\n\n  useEffect(() => {\n    if (runtimeImagesError) {\n      RequestErrors.serverError(runtimeImagesError).then(() => {\n        shell.currentWidget?.close();\n      });\n    }\n  }, [runtimeImagesError, shell.currentWidget]);\n\n  useEffect(() => {\n    if (runtimesSchemaError) {\n      RequestErrors.serverError(runtimesSchemaError).then(() => {\n        shell.currentWidget?.close();\n      });\n    }\n  }, [runtimesSchemaError, shell.currentWidget]);\n\n  const contextRef = useRef(context);\n  useEffect(() => {\n    const currentContext = contextRef.current;\n\n    const changeHandler = (): void => {\n      const pipelineJson = currentContext.model.toJSON() as GenericObjectType;\n\n      // map IDs to display names\n      const nodes = pipelineJson?.pipelines?.[0]?.nodes;\n      if (nodes?.length > 0) {\n        for (const node of nodes) {\n          if (node?.app_data?.component_parameters) {\n            for (const [key, val] of Object.entries(\n              node?.app_data?.component_parameters\n            )) {\n              if (val === null) {\n                node.app_data.component_parameters[key] = undefined;\n              }\n            }\n          }\n        }\n      }\n      // TODO: don't persist this, but this will break things right now\n      if (pipelineJson?.pipelines?.[0]?.app_data) {\n        if (!pipelineJson.pipelines[0].app_data.properties) {\n          pipelineJson.pipelines[0].app_data.properties = {};\n        }\n        const pipeline_path = contextRef.current.path;\n        const pipeline_name = PathExt.basename(\n          pipeline_path,\n          PathExt.extname(pipeline_path)\n        );\n        pipelineJson.pipelines[0].app_data.properties.name = pipeline_name;\n        pipelineJson.pipelines[0].app_data.properties.runtime =\n          runtimeDisplayName;\n      }\n      setPipeline(pipelineJson);\n      setLoading(false);\n    };\n\n    currentContext.ready.then(changeHandler);\n    currentContext.model.contentChanged.connect(changeHandler);\n\n    return (): void => {\n      currentContext.model.contentChanged.disconnect(changeHandler);\n    };\n  }, [runtimeDisplayName]);\n\n  const onChange = useCallback((pipelineJson: GenericObjectType): void => {\n    const isNullOrEmpty = (\n      value: PartialJSONValue | null | undefined\n    ): boolean => value === null || value === undefined || value === '';\n\n    const cleanArray = (arr: PartialJSONArray): PartialJSONArray => {\n      const newArray: PartialJSONArray = [];\n\n      for (const item of arr) {\n        if (isNullOrEmpty(item)) {\n          continue;\n        }\n        if (typeof item === 'object') {\n          const itemCopy = JSON.parse(\n            JSON.stringify(item)\n          ) as PartialJSONObject;\n          removeNullValues(itemCopy);\n          newArray.push(itemCopy);\n        } else {\n          newArray.push(item);\n        }\n      }\n\n      return newArray;\n    };\n\n    const removeNullValues = (data?: PartialJSONObject): void => {\n      if (!data) {\n        return;\n      }\n\n      for (const key in data) {\n        const value = data[key];\n        if (isNullOrEmpty(value)) {\n          delete data[key];\n        } else if (Array.isArray(value)) {\n          data[key] = cleanArray(value);\n        } else if (typeof value === 'object') {\n          const objCopy = JSON.parse(JSON.stringify(value));\n          removeNullValues(objCopy);\n          data[key] = objCopy;\n        }\n      }\n    };\n\n    // Remove all null values from the pipeline\n    for (const node of pipelineJson?.pipelines?.[0]?.nodes ?? []) {\n      removeNullValues(node.app_data ?? {});\n    }\n    removeNullValues(\n      pipelineJson?.pipelines?.[0]?.app_data?.properties?.pipeline_defaults ??\n        {}\n    );\n    if (contextRef.current.isReady) {\n      contextRef.current.model.fromString(\n        JSON.stringify(pipelineJson, null, 2)\n      );\n    }\n  }, []);\n\n  const isDialogAlreadyShowing = useRef(false);\n  const onError = useCallback(\n    (error?: Error): void => {\n      if (isDialogAlreadyShowing.current) {\n        return; // bail, we are already showing a dialog.\n      }\n      isDialogAlreadyShowing.current = true;\n      if (error instanceof PipelineOutOfDateError) {\n        showDialog({\n          title: 'Migrate pipeline?',\n          body: (\n            <p>\n              This pipeline corresponds to an older version of Elyra and needs\n              to be migrated.\n              <br />\n              Although the pipeline can be further edited and/or submitted after\n              its update,\n              <br />\n              the migration will not be completed until the pipeline has been\n              saved within the editor.\n              <br />\n              <br />\n              Proceed with migration?\n            </p>\n          ),\n          buttons: [Dialog.cancelButton(), Dialog.okButton()]\n        }).then(async (result) => {\n          isDialogAlreadyShowing.current = false;\n          if (result.button.accept) {\n            // proceed with migration\n            console.log('migrating pipeline');\n            const pipelineJSON =\n              contextRef.current.model.toJSON() as GenericObjectType;\n            try {\n              const migratedPipeline = migrate(pipelineJSON, (pipeline) => {\n                // function for updating to relative paths in v2\n                // uses location of filename as expected in v1\n                for (const node of pipeline.nodes) {\n                  node.app_data.filename =\n                    PipelineService.getPipelineRelativeNodePath(\n                      contextRef.current.path,\n                      node.app_data.filename\n                    );\n                }\n                return pipeline;\n              });\n              contextRef.current.model.fromString(\n                JSON.stringify(migratedPipeline, null, 2)\n              );\n            } catch (migrationError) {\n              if (migrationError instanceof ComponentNotFoundError) {\n                showDialog({\n                  title: 'Pipeline migration aborted!',\n                  body: (\n                    <p>\n                      {' '}\n                      The pipeline you are trying to migrate uses example\n                      components, which are not <br />\n                      enabled in your environment. Complete the setup\n                      instructions in{' '}\n                      <a\n                        href=\"https://elyra.readthedocs.io/en/latest/user_guide/pipeline-components.html#example-custom-components\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        Example Custom Components\n                      </a>{' '}\n                      and try again.\n                    </p>\n                  ),\n                  buttons: [Dialog.okButton({ label: 'Close' })]\n                }).then(() => {\n                  shell.currentWidget?.close();\n                });\n              } else {\n                showDialog({\n                  title: 'Pipeline migration failed!',\n                  body: <p> {(migrationError as Error)?.message || ''} </p>,\n                  buttons: [Dialog.okButton()]\n                }).then(() => {\n                  shell.currentWidget?.close();\n                });\n              }\n            }\n          } else {\n            shell.currentWidget?.close();\n          }\n        });\n      } else {\n        showDialog({\n          title: 'Load pipeline failed!',\n          body: <p> {error?.message || ''} </p>,\n          buttons: [Dialog.okButton()]\n        }).then(() => {\n          isDialogAlreadyShowing.current = false;\n          shell.currentWidget?.close();\n        });\n      }\n    },\n    [shell.currentWidget]\n  );\n\n  const onFileRequested = async (args: {\n    filename?: string;\n    propertyID?: string;\n    filters?: { [key: string]: string[] };\n  }): Promise<string[] | undefined> => {\n    const pipelineFilePath = contextRef.current.path;\n    const contextFilePath = args.filename\n      ? PipelineService.getWorkspaceRelativeNodePath(\n          pipelineFilePath,\n          args.filename\n        )\n      : pipelineFilePath;\n    const contextFolderPath = PathExt.dirname(contextFilePath);\n\n    if (args.propertyID?.includes('dependencies')) {\n      const res = await showBrowseFileDialog({\n        manager: browserFactory.model.manager,\n        multiselect: true,\n        includeDir: true,\n        rootPath: contextFolderPath,\n        filter: (model) => {\n          return model.path !== pipelineFilePath ? {} : null;\n        }\n      });\n\n      if (res.button.accept && res.value?.length) {\n        return res.value;\n      }\n    } else {\n      const res = await showBrowseFileDialog({\n        manager: browserFactory.model.manager,\n        startPath: contextFolderPath,\n        filter: (model) => {\n          if (args.filters?.File === undefined || model.type === 'directory') {\n            return {};\n          }\n\n          const ext = PathExt.extname(model.path);\n          return args.filters.File.includes(ext) ? {} : null;\n        }\n      });\n\n      if (res.button.accept && res.value?.length) {\n        const file = PipelineService.getPipelineRelativeNodePath(\n          contextRef.current.path,\n          res.value[0]\n        );\n        return [file];\n      }\n    }\n\n    return undefined;\n  };\n\n  const onPropertiesUpdateRequested = async (args: {\n    component_parameters?: IRuntimeComponentParameter;\n  }): Promise<{\n    component_parameters?: IRuntimeComponentParameter;\n  }> => {\n    if (!contextRef.current.path || !args.component_parameters?.filename) {\n      return args;\n    }\n    const path = PipelineService.getWorkspaceRelativeNodePath(\n      contextRef.current.path,\n      args.component_parameters.filename\n    );\n    const new_env_vars = await ContentParser.getEnvVars(path).then((response) =>\n      response.map((str: string) => {\n        return { env_var: str };\n      })\n    );\n\n    const env_vars = args.component_parameters?.env_vars ?? [];\n    const merged_env_vars = [\n      ...env_vars,\n      ...new_env_vars.filter(\n        (new_var) =>\n          !env_vars.some((old_var) => {\n            return old_var.env_var === new_var.env_var;\n          })\n      )\n    ];\n\n    return {\n      ...args,\n      component_parameters: {\n        ...args.component_parameters,\n        env_vars: merged_env_vars.filter(Boolean)\n      }\n    };\n  };\n\n  const handleOpenComponentDef = useCallback(\n    (componentId: string, componentSource: string) => {\n      // Show error dialog if the component does not exist\n      if (!componentId) {\n        const dialogBody: string[] = [];\n        try {\n          const componentSourceJson = JSON.parse(componentSource);\n          dialogBody.push(`catalog_type: ${componentSourceJson.catalog_type}`);\n          for (const [key, value] of Object.entries(\n            componentSourceJson.component_ref\n          )) {\n            dialogBody.push(`${key}: ${value}`);\n          }\n        } catch {\n          dialogBody.push(componentSource);\n        }\n        return showDialog({\n          title: 'Component not found',\n          body: (\n            <p>\n              This node uses a component that is not stored in your component\n              registry.\n              {dialogBody.map((line, i) => (\n                <span key={i}>\n                  <br />\n                  {line}\n                </span>\n              ))}\n              <br />\n              <br />\n              <a\n                href=\"https://elyra.readthedocs.io/en/latest/user_guide/best-practices-custom-pipeline-components.html#troubleshooting-missing-pipeline-components\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Learn more...\n              </a>\n            </p>\n          ),\n          buttons: [Dialog.okButton()]\n        });\n      }\n      return PipelineService.getComponentDef(type, componentId)\n        .then((res) => {\n          if (!res) {\n            return;\n          }\n          const nodeDef = getAllPaletteNodes(palette).find(\n            (n) => n.id === componentId\n          );\n          commands.execute(commandIDs.openViewer, {\n            content: res.content,\n            mimeType: res.mimeType,\n            label: nodeDef?.label ?? componentId\n          });\n        })\n        .catch(async (e) => await RequestErrors.serverError(e));\n    },\n    [commands, palette, type]\n  );\n\n  const onDoubleClick = (data: { selectedObjectIds: string[] }): void => {\n    for (let i = 0; i < data.selectedObjectIds.length; i++) {\n      const node = pipeline.pipelines[0].nodes.find(\n        (node: { id: string }) => node.id === data.selectedObjectIds[i]\n      );\n      const nodeDef = getAllPaletteNodes(palette).find(\n        (n) => n.op === node?.op\n      );\n      if (node?.app_data?.component_parameters?.filename) {\n        commands.execute(commandIDs.openDocManager, {\n          path: PipelineService.getWorkspaceRelativeNodePath(\n            contextRef.current.path,\n            node.app_data.component_parameters.filename\n          )\n        });\n      } else if (nodeDef && !nodeDef.app_data?.parameter_refs?.filehandler) {\n        handleOpenComponentDef(nodeDef.id, node?.app_data?.component_source);\n      }\n    }\n  };\n\n  const handleSubmission = useCallback(\n    async (actionType: 'run' | 'export'): Promise<void> => {\n      const pipelineJson = context.model.toJSON() as GenericObjectType;\n      // Check that all nodes are valid\n      const errorMessages = validate(\n        JSON.stringify(pipelineJson),\n        getAllPaletteNodes(palette),\n        palette?.properties\n      );\n      if (errorMessages && errorMessages.length > 0) {\n        let errorMessage = '';\n        for (const error of errorMessages) {\n          errorMessage += (errorMessage ? '\\n' : '') + error.message;\n        }\n        toast.error(`Failed ${actionType}: ${errorMessage}`);\n        return;\n      }\n\n      if (contextRef.current.model.dirty) {\n        const dialogResult = await showDialog({\n          title:\n            'This pipeline contains unsaved changes. To submit the pipeline the changes need to be saved.',\n          buttons: [\n            Dialog.cancelButton(),\n            Dialog.okButton({ label: 'Save and Submit' })\n          ]\n        });\n        if (dialogResult.button && dialogResult.button.accept === true) {\n          await contextRef.current.save();\n        } else {\n          // Don't proceed if cancel button pressed\n          return;\n        }\n      }\n\n      const pipelineName = PathExt.basename(\n        contextRef.current.path,\n        PathExt.extname(contextRef.current.path)\n      );\n\n      // TODO: Parallelize this\n      const runtimeTypes = await PipelineService.getRuntimeTypes();\n      const runtimes = await PipelineService.getRuntimes()\n        .then((runtimeList) => {\n          return runtimeList?.filter((runtime) => {\n            return (\n              !runtime.metadata.runtime_enabled &&\n              !!runtimeTypes.find((r) => runtime.metadata.runtime_type === r.id)\n            );\n          });\n        })\n        .catch(async (error) => {\n          await RequestErrors.serverError(error);\n        });\n      const schema = await PipelineService.getRuntimesSchema().catch(\n        async (error) => {\n          await RequestErrors.serverError(error);\n        }\n      );\n\n      if (!runtimes) {\n        await RequestErrors.noMetadataError('runtime');\n        return;\n      }\n\n      if (!schema) {\n        await RequestErrors.noMetadataError('schema');\n        return;\n      }\n\n      const runtimeData = createRuntimeData({\n        schema,\n        runtimes,\n        allowLocal: actionType === 'run'\n      });\n\n      let title =\n        type !== undefined\n          ? `${actionType} pipeline for ${runtimeDisplayName}`\n          : `${actionType} pipeline`;\n\n      if (actionType === 'export' || type !== undefined) {\n        if (!isRuntimeTypeAvailable(runtimeData, type)) {\n          const res = await RequestErrors.noMetadataError(\n            'runtime',\n            `${actionType} pipeline.`,\n            type !== undefined ? runtimeDisplayName : undefined\n          );\n\n          if (res.button.label.includes(RUNTIMES_SCHEMASPACE)) {\n            // Open the runtimes widget\n            shell.activateById(`elyra-metadata:${RUNTIMES_SCHEMASPACE}`);\n          }\n          return;\n        }\n      }\n      // Capitalize\n      title = title.charAt(0).toUpperCase() + title.slice(1);\n\n      let dialogOptions: Partial<Dialog.IOptions<GenericObjectType>>;\n\n      pipelineJson.pipelines[0].app_data.properties.pipeline_parameters =\n        pipelineJson.pipelines[0].app_data.properties.pipeline_parameters?.filter(\n          (param: { name: string }) => {\n            return !!pipelineJson.pipelines[0].nodes.find(\n              (node: {\n                app_data: {\n                  component_parameters?: {\n                    pipeline_parameters?: GenericObjectType;\n                  };\n                };\n              }) => {\n                return (\n                  param.name !== '' &&\n                  (node.app_data.component_parameters?.pipeline_parameters?.includes(\n                    param.name\n                  ) ||\n                    (node.app_data.component_parameters &&\n                      Object.values(node.app_data.component_parameters).find(\n                        (property) =>\n                          property.widget === 'parameter' &&\n                          property.value === param.name\n                      )))\n                );\n              }\n            );\n          }\n        );\n\n      const parameters =\n        pipelineJson?.pipelines[0].app_data.properties.pipeline_parameters;\n\n      switch (actionType) {\n        case 'run':\n          dialogOptions = {\n            title,\n            body: formDialogWidget(\n              <PipelineSubmissionDialog\n                name={pipelineName}\n                runtimeData={runtimeData}\n                pipelineType={type}\n                parameters={parameters}\n              />\n            ),\n            buttons: [Dialog.cancelButton(), Dialog.okButton()],\n            defaultButton: 1,\n            focusNodeSelector: '#pipeline_name'\n          };\n          break;\n        case 'export':\n          dialogOptions = {\n            title,\n            body: formDialogWidget(\n              <PipelineExportDialog\n                runtimeData={runtimeData}\n                runtimeTypeInfo={runtimeTypes}\n                pipelineType={type}\n                exportName={pipelineName}\n                parameters={parameters}\n              />\n            ),\n            buttons: [Dialog.cancelButton(), Dialog.okButton()],\n            defaultButton: 1,\n            focusNodeSelector: '#runtime_config'\n          };\n          break;\n      }\n\n      const dialogResult = await showFormDialog(dialogOptions);\n\n      if (dialogResult.value === null) {\n        // When Cancel is clicked on the dialog, just return\n        return;\n      }\n\n      // Clean null properties\n      for (const node of pipelineJson.pipelines[0].nodes) {\n        if (node.app_data.component_parameters.cpu === null) {\n          delete node.app_data.component_parameters.cpu;\n        }\n        if (node.app_data.component_parameters.cpu_limit === null) {\n          delete node.app_data.component_parameters.cpu_limit;\n        }\n        if (node.app_data.component_parameters.memory === null) {\n          delete node.app_data.component_parameters.memory;\n        }\n        if (node.app_data.component_parameters.memory_limit === null) {\n          delete node.app_data.component_parameters.memory_limit;\n        }\n        if (node.app_data.component_parameters.gpu === null) {\n          delete node.app_data.component_parameters.gpu;\n        }\n      }\n\n      const configDetails = getConfigDetails(\n        runtimeData,\n        dialogResult.value.runtime_config\n      );\n\n      PipelineService.setNodePathsRelativeToWorkspace(\n        pipelineJson.pipelines[0],\n        getAllPaletteNodes(palette),\n        contextRef.current.path\n      );\n\n      // Metadata\n      pipelineJson.pipelines[0].app_data.name =\n        dialogResult.value.pipeline_name ?? pipelineName;\n      pipelineJson.pipelines[0].app_data.source = PathExt.basename(\n        contextRef.current.path\n      );\n\n      // Pipeline parameter overrides\n      for (const paramIndex in parameters ?? []) {\n        const param = parameters[paramIndex];\n        if (param.name) {\n          let paramOverride = dialogResult.value[`${param.name}-paramInput`];\n          if (\n            (param.default_value?.type === 'Integer' ||\n              param.default_value?.type === 'Float') &&\n            paramOverride !== ''\n          ) {\n            paramOverride = Number(paramOverride);\n          }\n          pipelineJson.pipelines[0].app_data.properties.pipeline_parameters[\n            paramIndex\n          ].value =\n            paramOverride === '' ? param.default_value?.value : paramOverride;\n        }\n      }\n\n      // Pipeline name\n      pipelineJson.pipelines[0].app_data.name =\n        dialogResult.value.pipeline_name ?? pipelineName;\n\n      // Runtime info\n      pipelineJson.pipelines[0].app_data.runtime_config =\n        configDetails?.id ?? null;\n\n      // Export info\n      const pipeline_dir = PathExt.dirname(contextRef.current.path);\n      const basePath = pipeline_dir ? `${pipeline_dir}/` : '';\n      const exportType = dialogResult.value.pipeline_filetype;\n      const exportName = dialogResult.value.export_name;\n      const exportPath = `${basePath}${exportName}.${exportType}`;\n\n      switch (actionType) {\n        case 'run':\n          PipelineService.submitPipeline(\n            pipelineJson,\n            configDetails?.platform.displayName ?? ''\n          ).catch(async (error) => {\n            await RequestErrors.serverError(error);\n          });\n          break;\n        case 'export':\n          PipelineService.exportPipeline(\n            pipelineJson,\n            exportType,\n            exportPath,\n            dialogResult.value.overwrite\n          ).catch(async (error) => {\n            await RequestErrors.serverError(error);\n          });\n          break;\n      }\n    },\n    [context.model, palette, runtimeDisplayName, type, shell]\n  );\n\n  const handleClearPipeline = useCallback(async (): Promise<void> => {\n    return showDialog({\n      title: 'Clear Pipeline',\n      body: 'Are you sure you want to clear the pipeline?',\n      buttons: [\n        Dialog.cancelButton(),\n        Dialog.okButton({ label: 'Clear All' }),\n        Dialog.okButton({ label: 'Clear Canvas' })\n      ]\n    }).then((result) => {\n      if (result.button.accept) {\n        const newPipeline =\n          contextRef.current.model.toJSON() as GenericObjectType;\n        if (newPipeline?.pipelines?.[0]?.nodes?.length > 0) {\n          newPipeline.pipelines[0].nodes = [];\n        }\n        // remove supernode pipelines\n        newPipeline.pipelines = [newPipeline.pipelines[0]];\n        // only clear pipeline properties when \"Clear All\" is selected\n        if (result.button.label === 'Clear All') {\n          const pipelineProperties =\n            newPipeline?.pipelines?.[0]?.app_data?.properties;\n          if (pipelineProperties) {\n            // Remove all fields of pipeline properties except for the name/runtime (readonly)\n            newPipeline.pipelines[0].app_data.properties = {\n              name: pipelineProperties.name,\n              runtime: pipelineProperties.runtime\n            };\n          }\n        }\n        contextRef.current.model.fromJSON(newPipeline);\n      }\n    });\n  }, []);\n\n  const onAction = useCallback(\n    (args: { type: string; payload?: GenericObjectType | string }) => {\n      switch (args.type) {\n        case 'save':\n          contextRef.current.save();\n          break;\n        case 'run':\n        case 'export':\n          handleSubmission(args.type);\n          break;\n        case 'clear':\n          handleClearPipeline();\n          break;\n        case 'toggleOpenPanel':\n          setPanelOpen(!panelOpen);\n          break;\n        case 'properties':\n          setPanelOpen(true);\n          break;\n        case 'openRuntimes':\n          shell.activateById(`elyra-metadata:${RUNTIMES_SCHEMASPACE}`);\n          break;\n        case 'openRuntimeImages':\n          shell.activateById(`elyra-metadata:${RUNTIME_IMAGES_SCHEMASPACE}`);\n          break;\n        case 'openComponentCatalogs':\n          shell.activateById(\n            `elyra-metadata:${COMPONENT_CATALOGS_SCHEMASPACE}`\n          );\n          break;\n        case 'openFile':\n          if (typeof args.payload !== 'string') {\n            return;\n          }\n          commands.execute(commandIDs.openDocManager, {\n            path: PipelineService.getWorkspaceRelativeNodePath(\n              contextRef.current.path,\n              args.payload\n            )\n          });\n          break;\n        case 'openComponentDef':\n          if (!args.payload || typeof args.payload !== 'object') {\n            return;\n          }\n          handleOpenComponentDef(\n            args.payload.componentId,\n            args.payload.componentSource\n          );\n          break;\n        default:\n          break;\n      }\n    },\n    [\n      handleSubmission,\n      handleClearPipeline,\n      panelOpen,\n      shell,\n      commands,\n      handleOpenComponentDef\n    ]\n  );\n\n  const toolbar = {\n    leftBar: [\n      {\n        action: 'run',\n        label: 'Run Pipeline',\n        enable: true\n      },\n      {\n        action: 'save',\n        label: 'Save Pipeline',\n        enable: true,\n        iconEnabled: IconUtil.encode(savePipelineIcon),\n        iconDisabled: IconUtil.encode(savePipelineIcon)\n      },\n      {\n        action: 'export',\n        label: 'Export Pipeline',\n        enable: true,\n        iconEnabled: IconUtil.encode(exportPipelineIcon),\n        iconDisabled: IconUtil.encode(exportPipelineIcon)\n      },\n      {\n        action: 'clear',\n        label: 'Clear Pipeline',\n        enable: true,\n        iconEnabled: IconUtil.encode(clearPipelineIcon),\n        iconDisabled: IconUtil.encode(clearPipelineIcon)\n      },\n      {\n        action: 'openRuntimes',\n        label: 'Open Runtimes',\n        enable: true,\n        iconEnabled: IconUtil.encode(runtimesIcon),\n        iconDisabled: IconUtil.encode(runtimesIcon)\n      },\n      {\n        action: 'openRuntimeImages',\n        label: 'Open Runtime Images',\n        enable: true,\n        iconEnabled: IconUtil.encode(containerIcon),\n        iconDisabled: IconUtil.encode(containerIcon)\n      },\n      {\n        action: 'openComponentCatalogs',\n        label: 'Open Component Catalogs',\n        enable: true,\n        iconEnabled: IconUtil.encode(componentCatalogIcon),\n        iconDisabled: IconUtil.encode(componentCatalogIcon)\n      },\n      { action: 'undo', label: 'Undo' },\n      { action: 'redo', label: 'Redo' },\n      { action: 'cut', label: 'Cut' },\n      { action: 'copy', label: 'Copy' },\n      { action: 'paste', label: 'Paste' },\n      { action: 'createAutoComment', label: 'Add Comment', enable: true },\n      { action: 'deleteSelectedObjects', label: 'Delete' },\n      {\n        action: 'arrangeHorizontally',\n        label: 'Arrange Horizontally',\n        enable: true\n      },\n      {\n        action: 'arrangeVertically',\n        label: 'Arrange Vertically',\n        enable: true\n      }\n    ],\n    rightBar: [\n      {\n        action: '',\n        label: `Runtime: ${runtimeDisplayName}`,\n        incLabelWithIcon: 'before',\n        enable: false,\n        kind: 'tertiary'\n        // TODO: re-add icon\n        // iconEnabled: IconUtil.encode(ICON_MAP[type ?? ''] ?? pipelineIcon)\n      },\n      {\n        action: 'toggleOpenPanel',\n        label: panelOpen ? 'Close Panel' : 'Open Panel',\n        enable: true,\n        iconTypeOverride: panelOpen ? 'paletteOpen' : 'paletteClose'\n      }\n    ]\n  };\n\n  const [defaultPosition, setDefaultPosition] = useState(10);\n\n  const handleAddFileToPipeline = useCallback(\n    (location?: { x: number; y: number }) => {\n      const fileBrowser = browserFactory;\n      // Only add file to pipeline if it is currently in focus\n      if (shell.currentWidget?.id !== widgetId) {\n        return;\n      }\n\n      let failedAdd = 0;\n      let position = 0;\n      const missingXY = !location;\n\n      // if either x or y is undefined use the default coordinates\n      if (missingXY) {\n        position = defaultPosition;\n        location = {\n          x: 75,\n          y: 85\n        };\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any -- PipelineEditor API not typed\n      toArray(fileBrowser.selectedItems()).map((item: any): void => {\n        if (PipelineService.isSupportedNode(item)) {\n          item.op = PipelineService.getNodeType(item.path);\n          item.path = PipelineService.getPipelineRelativeNodePath(\n            contextRef.current.path,\n            item.path\n          );\n          item.x = (location?.x ?? 0) + position;\n          item.y = (location?.y ?? 0) + position;\n\n          const success = ref.current?.addFile({\n            nodeTemplate: {\n              op: item.op\n            },\n            offsetX: item.x,\n            offsetY: item.y,\n            path: item.path\n          });\n\n          if (success) {\n            position += 20;\n          } else {\n            // handle error\n          }\n        } else {\n          failedAdd++;\n        }\n      });\n      // update position if the default coordinates were used\n      if (missingXY) {\n        setDefaultPosition(position);\n      }\n\n      if (failedAdd) {\n        return showDialog({\n          title: 'Unsupported File(s)',\n          body: 'Only supported files (Notebooks, Python scripts, and R scripts) can be added to a pipeline.',\n          buttons: [Dialog.okButton()]\n        });\n      }\n\n      return;\n    },\n    [browserFactory, defaultPosition, shell, widgetId]\n  );\n\n  const handleDrop = async (e: IDragEvent): Promise<void> => {\n    handleAddFileToPipeline({ x: e.offsetX, y: e.offsetY });\n  };\n\n  useEffect(() => {\n    const handleSignal = (): void => {\n      handleAddFileToPipeline();\n    };\n    addFileToPipelineSignal.connect(handleSignal);\n    return (): void => {\n      addFileToPipelineSignal.disconnect(handleSignal);\n    };\n  }, [addFileToPipelineSignal, handleAddFileToPipeline]);\n\n  if (loading || palette === undefined) {\n    return <div className=\"elyra-loader\"></div>;\n  }\n\n  const handleOpenCatalog = (): void => {\n    shell.activateById(`elyra-metadata:${COMPONENT_CATALOGS_SCHEMASPACE}`);\n  };\n\n  const handleOpenSettings = (): void => {\n    commands.execute('settingeditor:open', { query: 'Pipeline Editor' });\n  };\n\n  return (\n    <ExtendedThemeProvider theme={theme}>\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={30000}\n        hideProgressBar\n        closeOnClick={false}\n        className=\"elyra-PipelineEditor-toast\"\n        draggable={false}\n        theme=\"colored\"\n      />\n      <Dropzone onDrop={handleDrop}>\n        <PipelineEditor\n          ref={ref}\n          palette={palette}\n          pipelineProperties={palette.properties}\n          pipelineParameters={palette.parameters}\n          toolbar={toolbar}\n          pipeline={pipeline}\n          onAction={onAction}\n          onChange={onChange}\n          onDoubleClickNode={\n            doubleClickToOpenProperties ? undefined : onDoubleClick\n          }\n          onError={onError}\n          onFileRequested={onFileRequested}\n          onPropertiesUpdateRequested={onPropertiesUpdateRequested}\n          leftPalette={true}\n        >\n          {type === undefined ? (\n            <EmptyGenericPipeline onOpenSettings={handleOpenSettings} />\n          ) : (\n            <EmptyPlatformSpecificPipeline\n              onOpenCatalog={handleOpenCatalog}\n              onOpenSettings={handleOpenSettings}\n            />\n          )}\n        </PipelineEditor>\n      </Dropzone>\n    </ExtendedThemeProvider>\n  );\n};\n\nexport class PipelineEditorFactory extends ABCWidgetFactory<DocumentWidget> {\n  browserFactory: IDefaultFileBrowser;\n  shell: JupyterFrontEnd.IShell;\n  commands: CommandRegistry;\n  serviceManager: ServiceManager.IManager;\n  settings: ISettingRegistry.ISettings | undefined;\n  defaultRuntimeType: string;\n  content?: PipelineEditorWidget;\n\n  constructor(\n    options: Pick<\n      IPipelineEditorWidgetProps,\n      | 'shell'\n      | 'commands'\n      | 'browserFactory'\n      | 'serviceManager'\n      | 'settings'\n      | 'defaultRuntimeType'\n    > &\n      Pick<\n        DocumentRegistry.IWidgetFactoryOptions<DocumentWidget>,\n        'name' | 'fileTypes' | 'defaultFor'\n      >\n  ) {\n    super(options);\n    this.browserFactory = options.browserFactory;\n    this.shell = options.shell;\n    this.commands = options.commands;\n    this.settings = options.settings;\n    this.serviceManager = options.serviceManager;\n    this.defaultRuntimeType = options.defaultRuntimeType;\n  }\n\n  get addFileToPipelineSignal() {\n    return this.content?.addFileToPipelineSignal;\n  }\n\n  get refreshPaletteSignal() {\n    return this.content?.refreshPaletteSignal;\n  }\n\n  protected createNewWidget(context: DocumentRegistry.Context): DocumentWidget {\n    // Creates a blank widget with a DocumentWidget wrapper\n    const props: IPipelineEditorWidgetProps = {\n      shell: this.shell,\n      commands: this.commands,\n      browserFactory: this.browserFactory,\n      context: context,\n      settings: this.settings,\n      defaultRuntimeType: this.defaultRuntimeType,\n      serviceManager: this.serviceManager\n    };\n    this.content = new PipelineEditorWidget(props);\n\n    const widget = new DocumentWidget({ content: this.content, context });\n    widget.addClass(PIPELINE_CLASS);\n    widget.title.icon = pipelineIcon;\n    return widget;\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport { IParameterProps, ParameterInputForm } from './ParameterInputForm';\n\nimport { IRuntimeType } from './PipelineService';\nimport { IRuntimeData } from './runtime-utils';\nimport RuntimeConfigSelect from './RuntimeConfigSelect';\n\ninterface IFileTypeSelectProps {\n  fileTypes: { display_name: string; id: string }[];\n}\n\nconst FileTypeSelect: React.FC<IFileTypeSelectProps> = ({ fileTypes }) => {\n  return (\n    <>\n      <label htmlFor=\"pipeline_filetype\">Export Pipeline as:</label>\n      <br />\n      <select\n        id=\"pipeline_filetype\"\n        name=\"pipeline_filetype\"\n        className=\"elyra-form-export-filetype\"\n        data-form-required\n      >\n        {fileTypes.map((f) => (\n          <option key={f.id} value={f.id}>\n            {f.display_name}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\ninterface IProps extends IParameterProps {\n  runtimeData: IRuntimeData;\n  runtimeTypeInfo: IRuntimeType[];\n  pipelineType?: string;\n  exportName: string;\n}\n\nexport const PipelineExportDialog: React.FC<IProps> = ({\n  runtimeData,\n  runtimeTypeInfo,\n  pipelineType,\n  exportName,\n  parameters\n}) => {\n  return (\n    <form className=\"elyra-dialog-form\">\n      <RuntimeConfigSelect\n        runtimeData={runtimeData}\n        pipelineType={pipelineType}\n      >\n        {(platform): JSX.Element => {\n          const info = runtimeTypeInfo.find((i) => i.id === platform);\n          return <FileTypeSelect fileTypes={info?.export_file_types ?? []} />;\n        }}\n      </RuntimeConfigSelect>\n      <label htmlFor=\"export_name\">Export Filename:</label>\n      <br />\n      <input\n        type=\"text\"\n        id=\"export_name\"\n        name=\"export_name\"\n        defaultValue={exportName}\n        data-form-required\n      />\n      <br />\n      <br />\n      <input\n        type=\"checkbox\"\n        className=\"elyra-Dialog-checkbox\"\n        id=\"overwrite\"\n        name=\"overwrite\"\n      />\n      <label htmlFor=\"overwrite\">Replace if file already exists</label>\n      <br />\n      <br />\n      <ParameterInputForm parameters={parameters} />\n    </form>\n  );\n};\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IDictionary,\n  IElyraResource,\n  IMetadataResource,\n  ISchemaResource,\n  MetadataService,\n  RequestHandler\n} from '@elyra/services';\nimport { GenericObjectType, RequestErrors } from '@elyra/ui-components';\n\nimport { Dialog, showDialog } from '@jupyterlab/apputils';\nimport { PathExt } from '@jupyterlab/coreutils';\n\nimport * as React from 'react';\n\nimport { IRuntimeComponentNodeType } from './pipeline-hooks';\n\nexport const KFP_SCHEMA = 'kfp';\nexport const RUNTIMES_SCHEMASPACE = 'runtimes';\nexport const RUNTIME_IMAGES_SCHEMASPACE = 'runtime-images';\nexport const COMPONENT_CATALOGS_SCHEMASPACE = 'component-catalogs';\n\nexport interface IPipelineExportBody {\n  pipeline: IPipelineResource;\n  export_format: string;\n  export_path: string;\n  overwrite: boolean;\n}\n\nexport interface IPipelineResource extends IElyraResource {\n  primary_pipeline: string;\n  pipelines: Array<{\n    id: string;\n    name?: string;\n    nodes?: Array<IDictionary<unknown>>;\n    runtime?: string;\n    runtime_config?: IDictionary<unknown>;\n  }>;\n}\n\nexport interface IPipelineScheduleResponse {\n  run_url: string;\n  git_url: string;\n  platform: string;\n  object_storage_url: string;\n  object_storage_path: string;\n}\n\nexport interface IRuntimeSchema extends ISchemaResource {\n  runtime_type: string;\n}\n\ninterface IComponentDef {\n  content: string;\n  mimeType: string;\n}\n\nenum ContentType {\n  notebook = 'execute-notebook-node',\n  python = 'execute-python-node',\n  r = 'execute-r-node',\n  other = 'other'\n}\n\nconst CONTENT_TYPE_MAPPER: Map<string, ContentType> = new Map([\n  ['.py', ContentType.python],\n  ['.ipynb', ContentType.notebook],\n  ['.r', ContentType.r]\n]);\n\nexport interface IRuntimeType extends IElyraResource {\n  runtime_enabled: boolean;\n  id: string;\n  display_name: string;\n  icon: string;\n  export_file_types: { id: string; display_name: string }[];\n}\n\nexport interface IRuntimesTypesResponse extends IElyraResource {\n  runtime_types: IRuntimeType[];\n}\n\nexport class PipelineService {\n  /**\n   * Returns a list of resources corresponding to each active runtime-type.\n   */\n  static async getRuntimeTypes(): Promise<IRuntimeType[]> {\n    const res = await RequestHandler.makeGetRequest<IRuntimesTypesResponse>(\n      'elyra/pipeline/runtimes/types'\n    );\n    if (!res) {\n      return [];\n    }\n    return res.runtime_types.sort((a, b) => a.id.localeCompare(b.id));\n  }\n\n  /**\n   * Returns a list of external runtime configurations available as\n   * `runtimes metadata`. This is used to submit the pipeline to be\n   * executed on these runtimes.\n   */\n  static async getRuntimes(): Promise<IMetadataResource[] | undefined> {\n    return MetadataService.getMetadata(RUNTIMES_SCHEMASPACE);\n  }\n\n  /**\n   * Returns a list of runtime schema\n   */\n  static async getRuntimesSchema(): Promise<IRuntimeSchema[] | undefined> {\n    return MetadataService.getSchema(RUNTIMES_SCHEMASPACE).then((schema) => {\n      if (!schema) {\n        return;\n      }\n\n      return schema as IRuntimeSchema[];\n    });\n  }\n\n  /**\n   * Return a list of configured container images that are used as runtimes environments\n   * to run the pipeline nodes.\n   */\n  static async getRuntimeImages(): Promise<IDictionary<string> | undefined> {\n    try {\n      let runtimeImages = await MetadataService.getMetadata('runtime-images');\n\n      if (!runtimeImages?.length) {\n        await RequestErrors.noMetadataError('runtime image');\n        return;\n      }\n\n      runtimeImages = runtimeImages?.sort(\n        (a, b) => 0 - (a.name > b.name ? -1 : 1)\n      );\n\n      const images: IDictionary<string> = {};\n      for (const image in runtimeImages) {\n        const imageName = (\n          runtimeImages[image].metadata as { image_name: string }\n        ).image_name;\n        images[imageName] = runtimeImages[image].display_name;\n      }\n      return images;\n    } catch (error) {\n      Promise.reject(error);\n      return;\n    }\n  }\n\n  static async getComponentDef(\n    type = 'local',\n    componentID: string\n  ): Promise<IComponentDef | undefined> {\n    return await RequestHandler.makeGetRequest<IComponentDef>(\n      `elyra/pipeline/components/${type}/${componentID}`\n    );\n  }\n\n  /**\n   * Submit a request to refresh the component cache. If catalogName is given\n   * only refreshes the given catalog\n   *\n   * @param catalogName\n   */\n  static async refreshComponentsCache(catalogName?: string): Promise<void> {\n    return await RequestHandler.makePutRequest(\n      `elyra/pipeline/components/cache${catalogName ? '/' + catalogName : ''}`,\n      JSON.stringify({ action: 'refresh' })\n    );\n  }\n\n  /**\n   * Creates a Dialog for passing to makeServerRequest\n   */\n  static getWaitDialog(\n    title = 'Making server request...',\n    body = 'This may take some time'\n  ): Dialog<void> {\n    return new Dialog({\n      title: title,\n      body: body,\n      buttons: [Dialog.okButton()]\n    });\n  }\n\n  /**\n   * Submit the pipeline to be executed on an external runtime (e.g. Kbeflow Pipelines)\n   *\n   * @param pipeline\n   * @param runtimeName\n   */\n  static async submitPipeline(\n    pipeline: GenericObjectType,\n    runtimeName: string\n  ): Promise<void> {\n    return RequestHandler.makePostRequest<IPipelineScheduleResponse>(\n      'elyra/pipeline/schedule',\n      JSON.stringify(pipeline),\n      this.getWaitDialog('Packaging and submitting pipeline ...')\n    ).then(async (response) => {\n      if (!response) {\n        return;\n      }\n      let dialogTitle;\n      let dialogBody;\n      if (response['run_url']) {\n        // pipeline executed remotely in a runtime of choice\n        dialogTitle = 'Job submission to ' + runtimeName + ' succeeded';\n        dialogBody = (\n          <p>\n            {response['platform'] === 'APACHE_AIRFLOW' ? (\n              <p>\n                Apache Airflow DAG has been pushed to the{' '}\n                <a\n                  href={response['git_url']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Git repository.\n                </a>\n                <br />\n              </p>\n            ) : null}\n            Check the status of your job at{' '}\n            <a\n              href={response['run_url']}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Run Details.\n            </a>\n            {response['object_storage_path'] !== null ? (\n              <p>\n                The results and outputs are in the{' '}\n                {response['object_storage_path']} working directory in{' '}\n                <a\n                  href={response['object_storage_url']}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  object storage\n                </a>\n                .\n              </p>\n            ) : null}\n            <br />\n          </p>\n        );\n      } else {\n        // pipeline executed in-place locally\n        dialogTitle = 'Job execution succeeded';\n        dialogBody = (\n          <p>Your job has been executed in-place in your local environment.</p>\n        );\n      }\n\n      await showDialog({\n        title: dialogTitle,\n        body: dialogBody,\n        buttons: [Dialog.okButton()]\n      });\n    });\n  }\n\n  /**\n   * Export a pipeline to different formats (e.g. DSL, YAML, etc). These formats\n   * are understood by a given runtime.\n   *\n   * @param pipeline\n   * @param pipeline_export_format\n   * @param pipeline_export_path\n   * @param overwrite\n   */\n  static async exportPipeline(\n    pipeline: GenericObjectType,\n    pipeline_export_format: string,\n    pipeline_export_path: string,\n    overwrite: boolean\n  ): Promise<void> {\n    console.log(\n      'Exporting pipeline to [' + pipeline_export_format + '] format'\n    );\n\n    console.log('Overwriting existing file: ' + overwrite);\n\n    const body = {\n      pipeline: pipeline,\n      export_format: pipeline_export_format,\n      export_path: pipeline_export_path,\n      overwrite: overwrite\n    };\n\n    return RequestHandler.makePostRequest<IPipelineExportBody>(\n      'elyra/pipeline/export',\n      JSON.stringify(body),\n      this.getWaitDialog('Generating pipeline artifacts ...')\n    ).then(async (response) => {\n      if (!response) {\n        return;\n      }\n      await showDialog({\n        title: 'Pipeline export succeeded',\n        body: <p>Exported file: {response.export_path} </p>,\n        buttons: [Dialog.okButton()]\n      });\n    });\n  }\n\n  static getNodeType(filepath: string): string {\n    const extension: string = PathExt.extname(filepath);\n    const type: string = CONTENT_TYPE_MAPPER.get(extension)!;\n\n    // TODO: throw error when file extension is not supported?\n    return type;\n  }\n\n  /**\n   * Check if a given file is allowed to be added to the pipeline\n   * @param item\n   */\n  static isSupportedNode(file: { path: string }): boolean {\n    if (PipelineService.getNodeType(file.path)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static getPipelineRelativeNodePath(\n    pipelinePath: string,\n    nodePath: string\n  ): string {\n    const relativePath: string = PathExt.relative(\n      PathExt.dirname(pipelinePath),\n      nodePath\n    );\n    return relativePath;\n  }\n\n  static getWorkspaceRelativeNodePath(\n    pipelinePath: string,\n    nodePath: string\n  ): string {\n    // since resolve returns an \"absolute\" path we need to strip off the leading '/'\n    const workspacePath: string = PathExt.resolve(\n      PathExt.dirname(pipelinePath),\n      nodePath\n    );\n    return workspacePath;\n  }\n\n  static setNodePathsRelativeToWorkspace(\n    pipeline: GenericObjectType,\n    paletteNodes: IRuntimeComponentNodeType[],\n    pipelinePath: string\n  ): GenericObjectType {\n    for (const node of pipeline.nodes) {\n      const nodeDef = paletteNodes.find((n) => {\n        return n.op === node.op;\n      });\n      const parameters =\n        nodeDef?.app_data.properties?.properties.component_parameters\n          .properties;\n      for (const param in parameters) {\n        if (parameters[param].uihints?.['ui:widget'] === 'file') {\n          node.app_data.component_parameters[param] =\n            this.getWorkspaceRelativeNodePath(\n              pipelinePath,\n              node.app_data.component_parameters[param]\n            );\n        } else if (\n          node.app_data.component_parameters[param]?.widget === 'file'\n        ) {\n          node.app_data.component_parameters[param].value =\n            this.getWorkspaceRelativeNodePath(\n              pipelinePath,\n              node.app_data.component_parameters[param].value\n            );\n        }\n      }\n    }\n    return pipeline;\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport { IParameterProps, ParameterInputForm } from './ParameterInputForm';\n\nimport { IRuntimeData } from './runtime-utils';\nimport RuntimeConfigSelect from './RuntimeConfigSelect';\n\ninterface IProps extends IParameterProps {\n  name: string;\n  runtimeData: IRuntimeData;\n  pipelineType?: string;\n}\n\nexport const PipelineSubmissionDialog: React.FC<IProps> = ({\n  name,\n  runtimeData,\n  pipelineType,\n  parameters\n}) => {\n  return (\n    <form className=\"elyra-dialog-form\">\n      <label htmlFor=\"pipeline_name\">Pipeline Name:</label>\n      <br />\n      <input\n        type=\"text\"\n        id=\"pipeline_name\"\n        name=\"pipeline_name\"\n        defaultValue={name}\n        data-form-required\n      />\n      <br />\n      <br />\n      <RuntimeConfigSelect\n        runtimeData={runtimeData}\n        pipelineType={pipelineType}\n      />\n      <ParameterInputForm parameters={parameters} />\n    </form>\n  );\n};\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport { IRuntimeData } from './runtime-utils';\n\nconst RUN_LOCALLY_ID = '__elyra_local__';\n\ninterface IProps {\n  runtimeData: IRuntimeData;\n  pipelineType?: string;\n  children?(platform: string): JSX.Element;\n}\n\nconst RuntimeConfigSelect: React.FC<IProps> = ({\n  runtimeData: { platforms, allowLocal },\n  pipelineType,\n  children\n}) => {\n  const filteredPlatforms = platforms.filter((p) => p.configs.length > 0);\n  if (allowLocal) {\n    filteredPlatforms.unshift({\n      id: RUN_LOCALLY_ID,\n      displayName: 'Run in-place locally',\n      configs: []\n    });\n  }\n\n  // NOTE: platform is only selectable if pipelineType is undefined\n  const [platform, setPlatform] = React.useState(\n    pipelineType ?? filteredPlatforms[0]?.id\n  );\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    setPlatform(e.target.value);\n  };\n\n  const configs =\n    filteredPlatforms.find((p) => p.id === platform)?.configs ?? [];\n  configs.sort((a, b) => a.displayName.localeCompare(b.displayName));\n\n  return (\n    <>\n      {!pipelineType && (\n        <div>\n          <label htmlFor=\"runtime_platform\">Runtime Platform:</label>\n          <br />\n          <select\n            id=\"runtime_platform\"\n            name=\"runtime_platform\"\n            className=\"elyra-form-runtime-platform\"\n            value={platform}\n            onChange={handleChange}\n          >\n            {filteredPlatforms.map((p) => (\n              <option key={p.id} value={p.id}>\n                {p.displayName}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      {/* must be present in dom at initial render */}\n      <div style={{ display: platform === RUN_LOCALLY_ID ? 'none' : 'block' }}>\n        <label htmlFor=\"runtime_config\">Runtime Configuration:</label>\n        <br />\n        <select\n          id=\"runtime_config\"\n          name=\"runtime_config\"\n          className=\"elyra-form-runtime-config\"\n        >\n          {configs.map((c) => (\n            <option key={c.id} value={c.id}>\n              {c.displayName}\n            </option>\n          ))}\n        </select>\n      </div>\n      {children?.(platform)}\n    </>\n  );\n};\n\nexport default RuntimeConfigSelect;\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MetadataWidget,\n  IMetadataWidgetProps,\n  MetadataDisplay,\n  IMetadataDisplayProps\n} from '@elyra/metadata-common';\nimport { IMetadataResource } from '@elyra/services';\n\nimport React from 'react';\n\nexport const RUNTIME_IMAGES_SCHEMASPACE = 'runtime-images';\n\nconst RUNTIME_IMAGES_CLASS = 'elyra-metadata-runtime-images';\n\nconst getLinkFromImageName = (imageName: string): string => {\n  let hostname = '';\n  const fqinParts = imageName.split('/');\n\n  if (\n    fqinParts[0].includes('.') ||\n    fqinParts[0].includes(':') ||\n    fqinParts[0].includes('localhost')\n  ) {\n    hostname = fqinParts[0];\n    imageName = fqinParts.slice(1).join('/');\n  }\n\n  if (!hostname || hostname.includes('docker.io')) {\n    hostname = 'hub.docker.com/r';\n  }\n\n  const imageRepo = imageName.split(':')[0];\n\n  return `https://${hostname}/${imageRepo}`;\n};\n\n/**\n * A React Component for displaying the runtime images list.\n */\nclass RuntimeImagesDisplay extends MetadataDisplay<IMetadataDisplayProps> {\n  renderExpandableContent(metadata: IMetadataResource): JSX.Element {\n    const imageName = metadata.metadata.image_name as string;\n    return (\n      <div>\n        <h6>Container Image</h6>\n        <a\n          href={getLinkFromImageName(imageName)}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          {imageName}\n        </a>\n      </div>\n    );\n  }\n}\n\n/**\n * A widget for displaying runtime images.\n */\nexport class RuntimeImagesWidget extends MetadataWidget {\n  constructor(props: IMetadataWidgetProps) {\n    super(props);\n  }\n\n  renderDisplay(metadata: IMetadataResource[]): React.ReactElement {\n    if (Array.isArray(metadata) && !metadata.length) {\n      // Empty metadata\n      return (\n        <div>\n          <br />\n          <h6 className=\"elyra-no-metadata-msg\">\n            Click the + button to add {this.props.display_name.toLowerCase()}\n          </h6>\n        </div>\n      );\n    }\n    return (\n      <RuntimeImagesDisplay\n        metadata={metadata}\n        updateMetadata={this.updateMetadata}\n        openMetadataEditor={this.openMetadataEditor}\n        schemaspace={RUNTIME_IMAGES_SCHEMASPACE}\n        sortMetadata={true}\n        className={RUNTIME_IMAGES_CLASS}\n        labelName={(): string => {\n          return 'runtime image';\n        }}\n      />\n    );\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MetadataWidget,\n  IMetadataWidgetProps,\n  MetadataDisplay,\n  IMetadataDisplayProps,\n  IOpenMetadataEditorArgs\n} from '@elyra/metadata-common';\nimport {\n  IMetadataResource,\n  ISchemaResource,\n  MetadataService\n} from '@elyra/services';\nimport {\n  GenericObjectType,\n  IErrorResponse,\n  RequestErrors\n} from '@elyra/ui-components';\nimport React from 'react';\n\nimport {\n  IRuntimeType,\n  PipelineService,\n  RUNTIMES_SCHEMASPACE\n} from './PipelineService';\n\nconst RUNTIMES_METADATA_CLASS = 'elyra-metadata-runtimes';\n\ninterface IRuntimeSchema extends ISchemaResource {\n  runtime_type: string;\n}\n\nconst addTrailingSlash = (url: string): string => {\n  return url.endsWith('/') ? url : url + '/';\n};\n\nconst getGithubURLFromAPI = (apiEndpoint: string): string => {\n  // For Enterprise Server the api is located at <hostname>/api/\n  let baseURL = new URL(apiEndpoint).origin;\n\n  // For Github.com and Github AE the api is located at api.<hostname>\n  baseURL = baseURL.replace('api.', '');\n\n  return addTrailingSlash(baseURL);\n};\n\nexport interface IRuntimesDisplayProps extends IMetadataDisplayProps {\n  metadata: IMetadataResource[];\n  openMetadataEditor: (args: IOpenMetadataEditorArgs) => void;\n  updateMetadata: () => void;\n  schemaspace: string;\n  sortMetadata: boolean;\n  className: string;\n  schemas?: ISchemaResource[];\n  titleContext?: string;\n  appendToTitle?: boolean;\n}\n\n/**\n * A React Component for displaying the runtimes list.\n */\n\nclass RuntimesDisplay extends MetadataDisplay<IRuntimesDisplayProps> {\n  renderExpandableContent(metadata: IMetadataResource): JSX.Element {\n    let apiEndpoint = addTrailingSlash(\n      metadata.metadata.api_endpoint as string\n    );\n    let cosEndpoint = addTrailingSlash(\n      metadata.metadata.cos_endpoint as string\n    );\n\n    let githubRepoElement: JSX.Element | null = null;\n    let metadata_props: GenericObjectType | null = null;\n\n    for (const schema of this.props.schemas ?? []) {\n      if (schema.name === metadata.schema_name) {\n        const metadata = schema.properties?.metadata as\n          | GenericObjectType\n          | undefined;\n        metadata_props = metadata?.properties;\n      }\n    }\n\n    if (metadata.schema_name === 'airflow' && metadata_props) {\n      const githubRepoUrl =\n        getGithubURLFromAPI(metadata.metadata.github_api_endpoint as string) +\n        metadata.metadata.github_repo +\n        '/tree/' +\n        metadata.metadata.github_branch +\n        '/';\n      githubRepoElement = (\n        <span>\n          <h6>{metadata_props.github_repo.title}</h6>\n          <a href={githubRepoUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n            {githubRepoUrl}\n          </a>\n          <br />\n          <br />\n        </span>\n      );\n    }\n    if (metadata.schema_name === 'kfp') {\n      if (metadata.metadata.public_api_endpoint) {\n        // user specified a public API endpoint. use it instead of the API endpoint\n        apiEndpoint = addTrailingSlash(\n          metadata.metadata.public_api_endpoint as string\n        );\n      }\n    }\n\n    if (metadata.metadata.public_cos_endpoint) {\n      // user specified a public COS endpoint. use it instead of the API endpoint\n      cosEndpoint = addTrailingSlash(\n        metadata.metadata.public_cos_endpoint as string\n      );\n    }\n\n    return (\n      <div>\n        <h6>\n          {metadata_props ? metadata_props.api_endpoint.title : 'API Endpoint'}\n        </h6>\n        <a href={apiEndpoint} target=\"_blank\" rel=\"noreferrer noopener\">\n          {apiEndpoint}\n        </a>\n        <br />\n        <br />\n        {githubRepoElement}\n        <h6>\n          {metadata_props\n            ? metadata_props.cos_endpoint.title\n            : 'Cloud Object Storage'}\n        </h6>\n        <a href={cosEndpoint} target=\"_blank\" rel=\"noreferrer noopener\">\n          {cosEndpoint}\n        </a>\n      </div>\n    );\n  }\n}\n\n/**\n * A widget for displaying runtimes.\n */\nexport class RuntimesWidget extends MetadataWidget {\n  runtimeTypes: IRuntimeType[] = [];\n\n  constructor(props: IMetadataWidgetProps) {\n    super(props);\n  }\n\n  async fetchMetadata(): Promise<IMetadataResource[] | undefined> {\n    return await PipelineService.getRuntimes().catch(async (error) => {\n      await RequestErrors.serverError(error);\n      return [];\n    });\n  }\n\n  async getSchemas(): Promise<void> {\n    try {\n      const schemas = await MetadataService.getSchema(this.props.schemaspace);\n      if (!schemas) {\n        return;\n      }\n      this.runtimeTypes = await PipelineService.getRuntimeTypes();\n      const sortedSchema = schemas.sort((a, b) =>\n        (a.title ?? '').localeCompare(b.title ?? '')\n      );\n      this.schemas = sortedSchema.filter((schema) => {\n        const runtimeSchema = schema as IRuntimeSchema;\n        return !!this.runtimeTypes.find(\n          (r) => r.id === runtimeSchema.runtime_type && r.runtime_enabled\n        );\n      });\n      if (this.schemas?.length ?? 0 > 1) {\n        for (const schema of this.schemas ?? []) {\n          this.props.app.contextMenu.addItem({\n            selector: `#${this.props.schemaspace} .elyra-metadataHeader-addButton`,\n            command: 'elyra-metadata-editor:open',\n            args: {\n              onSave: this.updateMetadata,\n              schemaspace: this.props.schemaspace,\n              schema: schema.name,\n              title: schema.title,\n              titleContext: this.props.titleContext,\n              appendToTitle: this.props.appendToTitle\n            } as GenericObjectType\n          });\n        }\n      }\n      this.update();\n    } catch (error) {\n      await RequestErrors.serverError(error as IErrorResponse);\n    }\n  }\n\n  private getSchemaTitle = (metadata: IMetadataResource): string => {\n    if (this.schemas) {\n      for (const schema of this.schemas) {\n        if (schema.name === metadata.schema_name) {\n          return schema.title ?? '';\n        }\n      }\n    }\n\n    return 'runtime configuration';\n  };\n\n  addMetadata(schema: string, titleContext?: string): void {\n    this.openMetadataEditor({\n      onSave: this.updateMetadata,\n      schemaspace: this.props.schemaspace,\n      schema: schema,\n      titleContext: titleContext\n    });\n  }\n\n  renderDisplay(metadata: IMetadataResource[]): React.ReactElement {\n    if (Array.isArray(metadata) && !metadata.length) {\n      // Empty metadata\n      return (\n        <div>\n          <br />\n          <h6 className=\"elyra-no-metadata-msg\">\n            Click the + button to add {this.props.display_name.toLowerCase()}\n          </h6>\n        </div>\n      );\n    }\n\n    const filteredMetadata = metadata.filter((m) => {\n      return !!this.runtimeTypes.find((r) => m.metadata?.runtime_type === r.id);\n    });\n\n    return (\n      <RuntimesDisplay\n        metadata={filteredMetadata}\n        updateMetadata={this.updateMetadata}\n        openMetadataEditor={this.openMetadataEditor}\n        schemaspace={RUNTIMES_SCHEMASPACE}\n        sortMetadata={true}\n        schemas={this.schemas}\n        className={RUNTIMES_METADATA_CLASS}\n        labelName={this.getSchemaTitle}\n        titleContext={this.props.titleContext}\n        appendToTitle={this.props.appendToTitle}\n      />\n    );\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentParser } from '@elyra/services';\nimport {\n  GenericObjectType,\n  IErrorResponse,\n  RequestErrors,\n  showFormDialog\n} from '@elyra/ui-components';\nimport { Dialog, showDialog } from '@jupyterlab/apputils';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { DocumentRegistry, DocumentWidget } from '@jupyterlab/docregistry';\nimport { ToolbarButton } from '@jupyterlab/ui-components';\nimport { IDisposable } from '@lumino/disposable';\nimport * as React from 'react';\n\nimport { FileSubmissionDialog } from './FileSubmissionDialog';\nimport { formDialogWidget } from './formDialogWidget';\nimport { PipelineService, RUNTIMES_SCHEMASPACE } from './PipelineService';\nimport { createRuntimeData, getConfigDetails } from './runtime-utils';\nimport Utils from './utils';\n\n/**\n * Submit file button extension\n *  - Attach button to editor toolbar and launch a dialog requesting\n *  information about the remote location to where submit the file\n *  for execution\n */\n\nexport class SubmitFileButtonExtension<\n  T extends DocumentWidget,\n  U extends DocumentRegistry.IModel\n> implements DocumentRegistry.IWidgetExtension<T, U>\n{\n  showWidget = async (document: T): Promise<void> => {\n    const { context } = document;\n    if (context.model.dirty) {\n      const dialogResult = await showDialog({\n        title:\n          'This file contains unsaved changes. To run the file as pipeline the changes need to be saved.',\n        buttons: [\n          Dialog.cancelButton(),\n          Dialog.okButton({ label: 'Save and Submit' })\n        ]\n      });\n      if (dialogResult.button.accept === false) {\n        return;\n      }\n      await context.save();\n    }\n\n    try {\n      const env = await ContentParser.getEnvVars(context.path);\n\n      const runtimeTypes = await PipelineService.getRuntimeTypes();\n      const runtimes = await PipelineService.getRuntimes().then(\n        (runtimeList) => {\n          return runtimeList?.filter((runtime) => {\n            return (\n              !runtime.metadata.runtime_enabled &&\n              !!runtimeTypes.find((r) => runtime.metadata.runtime_type === r.id)\n            );\n          });\n        }\n      );\n\n      if (!runtimes) {\n        await RequestErrors.noMetadataError('runtime');\n        return;\n      }\n\n      const images = await PipelineService.getRuntimeImages();\n      const schema = await PipelineService.getRuntimesSchema();\n\n      if (!schema) {\n        await RequestErrors.noMetadataError('schema');\n        return;\n      }\n\n      if (!images) {\n        await RequestErrors.noMetadataError('runtime images');\n        return;\n      }\n\n      const runtimeData = createRuntimeData({ schema, runtimes });\n\n      if (!runtimeData.platforms.find((p) => p.configs.length > 0)) {\n        const res = await RequestErrors.noMetadataError(\n          'runtime',\n          `run file as pipeline.`\n        );\n\n        if (res.button.label.includes(RUNTIMES_SCHEMASPACE)) {\n          // Open the runtimes widget\n          Utils.getLabShell(document)?.activateById(\n            `elyra-metadata:${RUNTIMES_SCHEMASPACE}`\n          );\n        }\n        return;\n      }\n\n      let dependencyFileExtension = PathExt.extname(context.path);\n      if (dependencyFileExtension === '.ipynb') {\n        dependencyFileExtension = '.py';\n      }\n\n      const dialogOptions: Partial<Dialog.IOptions<GenericObjectType>> = {\n        title: 'Run file as pipeline',\n        body: formDialogWidget(\n          <FileSubmissionDialog\n            env={env}\n            dependencyFileExtension={dependencyFileExtension}\n            images={images}\n            runtimeData={runtimeData}\n          />\n        ),\n        buttons: [Dialog.cancelButton(), Dialog.okButton()]\n      };\n\n      const dialogResult = await showFormDialog(dialogOptions);\n\n      if (dialogResult.value === null) {\n        // When Cancel is clicked on the dialog, just return\n        return;\n      }\n\n      const {\n        runtime_config,\n        framework,\n        cpu,\n        cpu_limit,\n        gpu,\n        memory,\n        memory_limit,\n        dependency_include,\n        dependencies,\n        ...envObject\n      } = dialogResult.value;\n\n      const configDetails = getConfigDetails(runtimeData, runtime_config);\n\n      // prepare file submission details\n      const pipeline = Utils.generateSingleFilePipeline(\n        context.path,\n        configDetails,\n        framework,\n        dependency_include ? dependencies.split(',') : undefined,\n        envObject,\n        cpu,\n        cpu_limit,\n        gpu,\n        memory,\n        memory_limit\n      );\n\n      PipelineService.submitPipeline(\n        pipeline,\n        configDetails?.platform.displayName ?? ''\n      );\n    } catch (error) {\n      await RequestErrors.serverError(error as IErrorResponse);\n    }\n  };\n\n  createNew(editor: T): IDisposable {\n    // Create the toolbar button\n    const submitFileButton = new ToolbarButton({\n      label: 'Run as Pipeline',\n      onClick: () => this.showWidget(editor),\n      tooltip: 'Run file as batch'\n    });\n\n    // Add the toolbar button to the editor\n    editor.toolbar.insertItem(10, 'submitFile', submitFileButton);\n\n    // The ToolbarButton class implements `IDisposable`, so the\n    // button *is* the extension for the purposes of this method.\n    return submitFileButton;\n  }\n}\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenericObjectType } from '@elyra/ui-components';\nimport { ReactWidget, Dialog } from '@jupyterlab/apputils';\nimport { MessageLoop } from '@lumino/messaging';\nimport { Widget } from '@lumino/widgets';\n\nexport const formDialogWidget = (\n  dialogComponent: JSX.Element\n): Dialog.IBodyWidget<GenericObjectType> => {\n  const widget = ReactWidget.create(\n    dialogComponent\n  ) as Dialog.IBodyWidget<GenericObjectType>;\n\n  // Immediately update the body even though it has not yet attached in\n  // order to trigger a render of the DOM nodes from the React element.\n  MessageLoop.sendMessage(widget, Widget.Msg.UpdateRequest);\n\n  widget.getValue = (): GenericObjectType => {\n    const form = widget.node.querySelector('form');\n    const formValues: GenericObjectType = {};\n    for (const element of Object.values(\n      form?.elements ?? []\n    ) as HTMLInputElement[]) {\n      switch (element.type) {\n        case 'checkbox':\n          formValues[element.name] = element.checked;\n          break;\n        default:\n          formValues[element.name] = element.value;\n          break;\n      }\n    }\n    return formValues;\n  };\n\n  return widget;\n};\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PIPELINE_CURRENT_VERSION } from '@elyra/pipeline-editor';\nimport { RequestHandler } from '@elyra/services';\nimport {\n  containerIcon,\n  pipelineIcon,\n  RequestErrors,\n  runtimesIcon,\n  componentCatalogIcon\n} from '@elyra/ui-components';\n\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n  ILayoutRestorer\n} from '@jupyterlab/application';\nimport { ICommandPalette, WidgetTracker } from '@jupyterlab/apputils';\nimport { DocumentWidget } from '@jupyterlab/docregistry';\nimport { IDefaultFileBrowser } from '@jupyterlab/filebrowser';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport {\n  addIcon,\n  IRankedMenu,\n  LabIcon,\n  refreshIcon\n} from '@jupyterlab/ui-components';\n\nimport { ReadonlyJSONValue } from '@lumino/coreutils';\n\nimport {\n  COMPONENT_CATALOGS_SCHEMASPACE,\n  ComponentCatalogsWidget\n} from './ComponentCatalogsWidget';\nimport { PipelineEditorFactory, commandIDs } from './PipelineEditorWidget';\nimport {\n  IRuntimeType,\n  PipelineService,\n  RUNTIMES_SCHEMASPACE\n} from './PipelineService';\nimport {\n  RUNTIME_IMAGES_SCHEMASPACE,\n  RuntimeImagesWidget\n} from './RuntimeImagesWidget';\nimport { RuntimesWidget } from './RuntimesWidget';\nimport { SubmitFileButtonExtension } from './SubmitFileButtonExtension';\n\nimport '../style/index.css';\n\nconst PIPELINE_EDITOR = 'Pipeline Editor';\nconst PIPELINE = 'pipeline';\nconst PIPELINE_EDITOR_NAMESPACE = 'elyra-pipeline-editor-extension';\nconst PLUGIN_ID = '@elyra/pipeline-editor-extension:plugin';\n\nconst createRemoteIcon = async ({\n  name,\n  url\n}: {\n  name: string;\n  url: string;\n}): Promise<LabIcon> => {\n  const svgstr = await RequestHandler.makeServerRequest<string>(url, {\n    method: 'GET',\n    type: 'text'\n  });\n  if (!svgstr) {\n    throw new Error(`Failed to fetch icon from ${url}`);\n  }\n  return new LabIcon({ name, svgstr });\n};\n\nexport type ResolvedRuntimeType = IRuntimeType & { icon: LabIcon };\n\ninterface ICommandArgs {\n  isMenu?: string;\n  isPalette?: string;\n  isContextMenu?: string;\n  runtimeType?: ResolvedRuntimeType;\n}\n\nexport const getEmptyPipelineJson = (runtime_type: string | undefined) => {\n  return {\n    doc_type: 'pipeline',\n    version: '3.0',\n    json_schema:\n      'http://api.dataplatform.ibm.com/schemas/common-pipeline/pipeline-flow/pipeline-flow-v3-schema.json',\n    id: 'elyra-auto-generated-pipeline',\n    primary_pipeline: 'primary',\n    pipelines: [\n      {\n        id: 'primary',\n        nodes: [],\n        app_data: {\n          ui_data: {\n            comments: []\n          },\n          version: PIPELINE_CURRENT_VERSION,\n          runtime_type\n        },\n        runtime_ref: ''\n      }\n    ],\n    schemas: []\n  };\n};\n\n/**\n * Initialization data for the pipeline-editor-extension extension.\n */\nconst extension: JupyterFrontEndPlugin<void> = {\n  id: PIPELINE,\n  autoStart: true,\n  requires: [\n    ICommandPalette,\n    ILauncher,\n    IDefaultFileBrowser,\n    ILayoutRestorer,\n    IMainMenu,\n    ISettingRegistry\n  ],\n  activate: async (\n    app: JupyterFrontEnd,\n    palette: ICommandPalette,\n    launcher: ILauncher,\n    browserFactory: IDefaultFileBrowser,\n    restorer: ILayoutRestorer,\n    menu: IMainMenu,\n    registry: ISettingRegistry\n  ) => {\n    console.log('Elyra - pipeline-editor extension is activated!');\n\n    // Fetch the initial state of the settings.\n    const settings = await registry.load(PLUGIN_ID).catch((error) => {\n      console.log(error);\n      return undefined;\n    });\n\n    PipelineService.getRuntimeTypes()\n      .then(async (types) => {\n        const filteredTypes = types.filter((t) => t.runtime_enabled);\n        const promises = filteredTypes.map(async (t) => {\n          return {\n            ...t,\n            icon: await createRemoteIcon({\n              name: `elyra:platform:${t.id}`,\n              url: t.icon\n            })\n          };\n        });\n\n        const resolvedTypes = (await Promise.all(\n          promises\n        )) as ResolvedRuntimeType[];\n\n        // Set up new widget Factory for .pipeline files\n        const pipelineEditorFactory = new PipelineEditorFactory({\n          name: PIPELINE_EDITOR,\n          fileTypes: [PIPELINE],\n          defaultFor: [PIPELINE],\n          shell: app.shell,\n          commands: app.commands,\n          browserFactory: browserFactory,\n          serviceManager: app.serviceManager,\n          settings: settings,\n          defaultRuntimeType: resolvedTypes[0]?.id\n        });\n\n        // Add the default behavior of opening the widget for .pipeline files\n        app.docRegistry.addFileType(\n          {\n            name: PIPELINE,\n            displayName: 'Pipeline',\n            extensions: ['.pipeline'],\n            icon: pipelineIcon\n          },\n          ['JSON']\n        );\n        app.docRegistry.addWidgetFactory(pipelineEditorFactory);\n\n        const tracker = new WidgetTracker<DocumentWidget>({\n          namespace: PIPELINE_EDITOR_NAMESPACE\n        });\n\n        pipelineEditorFactory.widgetCreated.connect((_sender, widget) => {\n          void tracker.add(widget);\n\n          // Notify the widget tracker if restore data needs to update\n          widget.context.pathChanged.connect(() => {\n            void tracker.save(widget);\n          });\n        });\n\n        // Handle state restoration\n        void restorer.restore(tracker, {\n          command: commandIDs.openDocManager,\n          args: (widget) => ({\n            path: widget.context.path,\n            factory: PIPELINE_EDITOR\n          }),\n          name: (widget) => widget.context.path\n        });\n\n        // Add command to add file to pipeline\n        const addFileToPipelineCommand: string = commandIDs.addFileToPipeline;\n        app.commands.addCommand(addFileToPipelineCommand, {\n          label: 'Add File to Pipeline',\n          icon: addIcon,\n          execute: (args) => {\n            pipelineEditorFactory.addFileToPipelineSignal?.emit(args);\n          }\n        });\n        const refreshPaletteCommand: string = commandIDs.refreshPalette;\n        app.commands.addCommand(refreshPaletteCommand, {\n          label: 'Refresh Pipeline Palette',\n          icon: refreshIcon,\n          execute: (args) => {\n            pipelineEditorFactory.refreshPaletteSignal?.emit(args);\n          }\n        });\n        app.contextMenu.addItem({\n          selector: '[data-file-type=\"notebook\"]',\n          command: addFileToPipelineCommand\n        });\n        app.contextMenu.addItem({\n          selector: '[data-file-type=\"python\"]',\n          command: addFileToPipelineCommand\n        });\n        app.contextMenu.addItem({\n          selector: '[data-file-type=\"r\"]',\n          command: addFileToPipelineCommand\n        });\n\n        // Add an application command\n        const openPipelineEditorCommand: string = commandIDs.openPipelineEditor;\n        app.commands.addCommand(openPipelineEditorCommand, {\n          label: (args) => {\n            const commandArgs = args as ICommandArgs;\n            if (commandArgs.isPalette) {\n              return `New ${PIPELINE_EDITOR}`;\n            }\n            if (commandArgs.runtimeType?.id === 'LOCAL') {\n              const contextMenuPrefix = commandArgs.isContextMenu ? 'New ' : '';\n              return `${contextMenuPrefix}Generic ${PIPELINE_EDITOR}`;\n            }\n            if (commandArgs.isMenu) {\n              return `${commandArgs.runtimeType?.display_name} ${PIPELINE_EDITOR}`;\n            }\n            if (commandArgs.isContextMenu) {\n              return `New ${commandArgs.runtimeType?.display_name} ${PIPELINE_EDITOR}`;\n            }\n            return PIPELINE_EDITOR;\n          },\n          caption: (args) => {\n            const commandArgs = args as ICommandArgs;\n            if (commandArgs.runtimeType?.id === 'LOCAL') {\n              return `Generic ${PIPELINE_EDITOR}`;\n            }\n            return `${commandArgs.runtimeType?.display_name} ${PIPELINE_EDITOR}`;\n          },\n          iconLabel: (args) => {\n            const commandArgs = args as ICommandArgs;\n            if (commandArgs.isPalette) {\n              return '';\n            }\n            if (commandArgs.runtimeType?.id === 'LOCAL') {\n              return `Generic ${PIPELINE_EDITOR}`;\n            }\n            return `${commandArgs.runtimeType?.display_name} ${PIPELINE_EDITOR}`;\n          },\n          icon: (args) => {\n            const commandArgs = args as ICommandArgs;\n            if (commandArgs.isPalette) {\n              return undefined;\n            }\n            return commandArgs.runtimeType?.icon;\n          },\n          execute: (args) => {\n            const commandArgs = args as ICommandArgs;\n            // Creates blank file, then opens it in a new window\n            app.commands\n              .execute(commandIDs.newDocManager, {\n                type: 'file',\n                path: browserFactory.model.path,\n                ext: '.pipeline'\n              })\n              .then(async (model) => {\n                const platformId = commandArgs.runtimeType?.id;\n                const runtime_type =\n                  platformId === 'LOCAL' ? undefined : platformId;\n\n                const pipelineJson = getEmptyPipelineJson(runtime_type);\n                const newWidget = await app.commands.execute(\n                  commandIDs.openDocManager,\n                  {\n                    path: model.path,\n                    factory: PIPELINE_EDITOR\n                  }\n                );\n                newWidget.context.ready.then(() => {\n                  newWidget.context.model.fromJSON(pipelineJson);\n                  app.commands.execute(commandIDs.saveDocManager, {\n                    path: model.path\n                  });\n                });\n              });\n          }\n        });\n        // Add the command to the palette.\n        palette.addItem({\n          command: openPipelineEditorCommand,\n          args: { isPalette: true },\n          category: 'Elyra'\n        });\n\n        // Add the command to the launcher\n        if (launcher) {\n          const fileMenuItems: IRankedMenu.IItemOptions[] = [];\n\n          let contextMenuRank = 100;\n\n          app.contextMenu.addItem({\n            command: openPipelineEditorCommand,\n            type: 'separator',\n            selector: '.jp-DirListing-content',\n            rank: ++contextMenuRank\n          });\n\n          for (const t of resolvedTypes) {\n            launcher.add({\n              command: openPipelineEditorCommand,\n              category: 'Elyra',\n              args: { runtimeType: t as unknown as ReadonlyJSONValue },\n              rank: t.id === 'LOCAL' ? 1 : 2\n            });\n\n            fileMenuItems.push({\n              command: openPipelineEditorCommand,\n              args: {\n                runtimeType: t as unknown as ReadonlyJSONValue,\n                isMenu: true\n              },\n              rank: t.id === 'LOCAL' ? 90 : 91\n            });\n\n            app.contextMenu.addItem({\n              command: openPipelineEditorCommand,\n              args: {\n                runtimeType: t as unknown as ReadonlyJSONValue,\n                isContextMenu: true\n              },\n              selector: '.jp-DirListing-content',\n              rank: ++contextMenuRank\n            });\n          }\n\n          app.contextMenu.addItem({\n            command: openPipelineEditorCommand,\n            type: 'separator',\n            selector: '.jp-DirListing-content',\n            rank: ++contextMenuRank\n          });\n\n          menu.fileMenu.newMenu.addGroup(fileMenuItems);\n        }\n      })\n      .catch(async (error) => {\n        await RequestErrors.serverError(error);\n      });\n\n    // SubmitNotebookButtonExtension initialization code\n    const notebookButtonExtension = new SubmitFileButtonExtension();\n    app.docRegistry.addWidgetExtension('Notebook', notebookButtonExtension);\n    app.contextMenu.addItem({\n      selector: '.jp-Notebook',\n      command: commandIDs.submitNotebook,\n      rank: -0.5\n    });\n\n    // SubmitScriptButtonExtension initialization code\n    const scriptButtonExtension = new SubmitFileButtonExtension();\n    app.docRegistry.addWidgetExtension('Python Editor', scriptButtonExtension);\n    app.contextMenu.addItem({\n      selector: '.elyra-ScriptEditor',\n      command: commandIDs.submitScript,\n      rank: -0.5\n    });\n\n    app.docRegistry.addWidgetExtension('R Editor', scriptButtonExtension);\n    app.contextMenu.addItem({\n      selector: '.elyra-ScriptEditor',\n      command: commandIDs.submitScript,\n      rank: -0.5\n    });\n\n    const runtimesWidget = new RuntimesWidget({\n      app,\n      display_name: 'Runtimes',\n      schemaspace: RUNTIMES_SCHEMASPACE,\n      icon: runtimesIcon,\n      titleContext: 'runtime configuration',\n      addLabel: 'runtime configuration',\n      appendToTitle: true\n    });\n    const runtimesWidgetID = `elyra-metadata:${RUNTIMES_SCHEMASPACE}`;\n    runtimesWidget.id = runtimesWidgetID;\n    runtimesWidget.title.icon = runtimesIcon;\n    runtimesWidget.title.caption = 'Runtimes';\n\n    restorer.add(runtimesWidget, runtimesWidgetID);\n    app.shell.add(runtimesWidget, 'left', { rank: 950 });\n\n    const runtimeImagesWidget = new RuntimeImagesWidget({\n      app,\n      display_name: 'Runtime Images',\n      schemaspace: RUNTIME_IMAGES_SCHEMASPACE,\n      icon: containerIcon,\n      titleContext: '',\n      addLabel: 'runtime image'\n    });\n    const runtimeImagesWidgetID = `elyra-metadata:${RUNTIME_IMAGES_SCHEMASPACE}`;\n    runtimeImagesWidget.id = runtimeImagesWidgetID;\n    runtimeImagesWidget.title.icon = containerIcon;\n    runtimeImagesWidget.title.caption = 'Runtime Images';\n\n    restorer.add(runtimeImagesWidget, runtimeImagesWidgetID);\n    app.shell.add(runtimeImagesWidget, 'left', { rank: 951 });\n\n    const componentCatalogWidget = new ComponentCatalogsWidget({\n      app,\n      display_name: 'Component Catalogs', // TODO: This info should come from the server for all schemaspaces\n      schemaspace: COMPONENT_CATALOGS_SCHEMASPACE,\n      icon: componentCatalogIcon,\n      titleContext: '',\n      addLabel: 'component catalog',\n      refreshCallback: (): void => {\n        app.commands.execute(commandIDs.refreshPalette);\n      }\n    });\n    const componentCatalogWidgetID = `elyra-metadata:${COMPONENT_CATALOGS_SCHEMASPACE}`;\n    componentCatalogWidget.id = componentCatalogWidgetID;\n    componentCatalogWidget.title.icon = componentCatalogIcon;\n    componentCatalogWidget.title.caption = 'Component Catalogs';\n\n    restorer.add(componentCatalogWidget, componentCatalogWidgetID);\n    app.shell.add(componentCatalogWidget, 'left', { rank: 961 });\n  }\n};\nexport default extension;\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  IMetadataResource,\n  MetadataService,\n  RequestHandler\n} from '@elyra/services';\nimport { GenericObjectType } from '@elyra/ui-components';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport produce from 'immer';\nimport useSWR, { SWRResponse } from 'swr';\n\nimport { IRuntimeSchema, PipelineService } from './PipelineService';\n\nexport const GENERIC_CATEGORY_ID = 'Elyra';\n\ninterface IReturn<T> {\n  data?: T | undefined;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- SWR API\n  error?: SWRResponse<T, any>['error'];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- SWR API\n  mutate?: SWRResponse<T, any>['mutate'];\n}\n\ntype IRuntimeImagesResponse = IRuntimeImage[];\n\nexport interface IRuntimeImage extends IMetadataResource {\n  metadata: {\n    image_name: string;\n  };\n}\n\nconst metadataFetcher = async <T extends IMetadataResource[]>(\n  key: string\n): Promise<T> => {\n  return (await MetadataService.getMetadata(key)) as T;\n};\n\nexport const useRuntimeImages = (\n  additionalRuntimeImages?: IRuntimeImage[]\n): IReturn<IRuntimeImagesResponse> => {\n  const { data, error } = useSWR<IRuntimeImagesResponse>(\n    'runtime-images',\n    metadataFetcher\n  );\n\n  let result: IRuntimeImage[] | undefined = data;\n\n  if (result && additionalRuntimeImages) {\n    // Sort and remove duplicates from additionalRuntimeImages\n    additionalRuntimeImages.sort((a, b) => 0 - (a.name > b.name ? -1 : 1));\n    additionalRuntimeImages = additionalRuntimeImages.filter(\n      (image, index, self) =>\n        index ===\n        self.findIndex(\n          (otherImage) =>\n            image.name === otherImage.name &&\n            image.display_name === otherImage.display_name &&\n            image.metadata.image_name === otherImage.metadata.image_name\n        )\n    );\n\n    // Remove previously added additionalRuntimeImages from result\n    result = result.filter(\n      (runtimeImage) =>\n        !additionalRuntimeImages ||\n        additionalRuntimeImages.findIndex(\n          (additionalRuntimeImage) =>\n            runtimeImage.name === additionalRuntimeImage.name &&\n            runtimeImage.display_name === additionalRuntimeImage.display_name &&\n            runtimeImage.metadata.image_name ===\n              additionalRuntimeImage.metadata.image_name\n        ) < 0\n    );\n\n    // Find out which additionalRuntimeImages are not yet in result\n    const existingImageNames = result.map(\n      (runtimeImage) => runtimeImage.metadata.image_name\n    );\n    const runtimeImagesToAdd = additionalRuntimeImages.filter(\n      (additionalRuntimeImage) =>\n        !existingImageNames.includes(additionalRuntimeImage.metadata.image_name)\n    );\n\n    // Sort and add missing images to result (at the end)\n    result.sort((a, b) => 0 - (a.name > b.name ? -1 : 1));\n    Array.prototype.push.apply(result, runtimeImagesToAdd);\n  }\n\n  return { data: result, error };\n};\n\nconst schemaFetcher = async <T>(key: string): Promise<T> => {\n  return (await MetadataService.getSchema(key)) as T;\n};\n\nexport const useRuntimesSchema = (): IReturn<IRuntimeSchema[]> => {\n  const { data, error } = useSWR<IRuntimeSchema[]>('runtimes', schemaFetcher);\n\n  return { data, error };\n};\n\nexport interface IRuntimeComponentsResponse {\n  version: string;\n  categories: IRuntimeComponent[];\n  properties: IComponentPropertiesResponse;\n  parameters: IComponentPropertiesResponse;\n}\n\n// Types come from `elyra/templates/components/canvas_palette_template.jinja2`\n// Example: `elyra/tests/pipeline/resources/palette.json`\n\nexport interface IRuntimeComponentInputOutputData {\n  id: string;\n  app_data: {\n    ui_data: {\n      label: string;\n      cardinality: {\n        min: number;\n        max: number;\n      };\n    };\n  };\n}\n\nexport interface IRuntimeComponentParameter {\n  filename?: string;\n  env_vars?: { env_var: string }[];\n}\n\nexport interface IRuntimeComponentNodeType {\n  op: string;\n  id: string;\n  label: string;\n  image: string;\n  runtime_type?: string;\n  type: 'execution_node';\n  inputs: { app_data: IRuntimeComponentInputOutputData }[];\n  outputs: { app_data: IRuntimeComponentInputOutputData }[];\n  app_data: {\n    parameter_refs?: {\n      filehandler: string;\n    };\n    properties?: IComponentPropertiesResponse;\n    image: string;\n    ui_data: {\n      image: string;\n    };\n  };\n}\n\nexport interface IRuntimeComponent {\n  label: string;\n  image: string;\n  id: string;\n  description: string;\n  runtime?: string;\n  node_types: IRuntimeComponentNodeType[];\n  extensions?: string[];\n}\n\ninterface IComponentPropertiesResponse {\n  current_parameters: GenericObjectType;\n  properties: GenericObjectType;\n  parameters: { id: string }[];\n  uihints: {\n    parameter_info: {\n      parameter_ref: string;\n      control: 'custom';\n      custom_control_id: string;\n      label: { default: string };\n      description: {\n        default: string;\n        placement: 'on_panel';\n      };\n      data: GenericObjectType;\n    }[];\n  };\n  group_info: {\n    group_info: {\n      id: string;\n      parameter_refs: string[];\n    }[];\n  }[];\n}\n\n/**\n * Sort palette in place. Takes a list of categories each containing a list of\n * components.\n * - Categories: alphabetically by \"label\" (exception: \"generic\" always first)\n * - Components: alphabetically by \"op\" (where is component label stored?)\n */\nexport const sortPalette = (palette: {\n  categories: IRuntimeComponent[];\n}): void => {\n  palette.categories.sort((a, b) => {\n    if (a.id === GENERIC_CATEGORY_ID) {\n      return -1;\n    }\n    if (b.id === GENERIC_CATEGORY_ID) {\n      return 1;\n    }\n    return a.label.localeCompare(b.label, undefined, { numeric: true });\n  });\n\n  for (const components of palette.categories) {\n    components.node_types.sort((a, b) =>\n      a.label.localeCompare(b.label, undefined, {\n        numeric: true\n      })\n    );\n  }\n};\n\n// TODO: This should be enabled through `extensions`\nconst NodeIcons: Map<string, string> = new Map([\n  ['execute-notebook-node', 'static/elyra/notebook.svg'],\n  ['execute-python-node', 'static/elyra/python.svg'],\n  ['execute-r-node', 'static/elyra/r-logo.svg']\n]);\n\n// TODO: We should decouple components and properties to support lazy loading.\nexport const componentFetcher = async (\n  type: string\n): Promise<IRuntimeComponentsResponse> => {\n  const palettePromise =\n    RequestHandler.makeGetRequest<IRuntimeComponentsResponse>(\n      `elyra/pipeline/components/${type}`\n    );\n\n  const pipelinePropertiesPromise =\n    RequestHandler.makeGetRequest<IComponentPropertiesResponse>(\n      `elyra/pipeline/${type}/properties`\n    );\n\n  const pipelineParametersPromise =\n    RequestHandler.makeGetRequest<IComponentPropertiesResponse>(\n      `elyra/pipeline/${type}/parameters`\n    );\n\n  const typesPromise = PipelineService.getRuntimeTypes();\n\n  const [palette, pipelineProperties, pipelineParameters, types] =\n    await Promise.all([\n      palettePromise,\n      pipelinePropertiesPromise,\n      pipelineParametersPromise,\n      typesPromise\n    ]);\n\n  if (!palette || !pipelineProperties || !types) {\n    throw new Error('Failed to fetch palette data');\n  }\n\n  palette.properties = pipelineProperties;\n\n  if (pipelineParameters) {\n    palette.parameters = pipelineParameters;\n  }\n\n  // Gather list of component IDs to fetch properties for.\n  const componentList: string[] = [];\n  for (const category of palette.categories) {\n    for (const node of category.node_types) {\n      componentList.push(node.id);\n    }\n  }\n\n  const propertiesPromises = componentList.map(async (componentID) => {\n    const res =\n      await RequestHandler.makeGetRequest<IComponentPropertiesResponse>(\n        `elyra/pipeline/components/${type}/${componentID}/properties`\n      );\n    return {\n      id: componentID,\n      properties: res\n    };\n  });\n\n  // load all of the properties in parallel instead of serially\n  const properties = await Promise.all(propertiesPromises);\n\n  // inject properties\n  for (const category of palette.categories) {\n    // Use the runtime_type from the first node of the category to determine category\n    // icon.\n    // TODO: Ideally, this would be included in the category.\n    const category_runtime_type =\n      category.node_types?.[0]?.runtime_type ?? 'LOCAL';\n\n    const type = types.find((t) => t.id === category_runtime_type);\n    const baseUrl = ServerConnection.makeSettings().baseUrl;\n    const defaultIcon = URLExt.parse(\n      URLExt.join(baseUrl, type?.icon || '')\n    ).pathname;\n\n    category.image = defaultIcon;\n\n    for (const node of category.node_types) {\n      // update icon\n      const genericNodeIcon = NodeIcons.get(node.op);\n      const nodeIcon = genericNodeIcon\n        ? URLExt.parse(URLExt.join(baseUrl, genericNodeIcon)).pathname\n        : defaultIcon;\n\n      // Not sure which is needed...\n      node.image = nodeIcon;\n      node.app_data.image = nodeIcon;\n      node.app_data.ui_data.image = nodeIcon;\n\n      const prop = properties.find((p) => p.id === node.id);\n      node.app_data.properties = prop?.properties;\n    }\n  }\n\n  sortPalette(palette);\n\n  return palette;\n};\n\nconst updateRuntimeImages = (\n  properties: IComponentPropertiesResponse | undefined,\n  runtimeImages: IRuntimeImage[] | undefined\n): void => {\n  const runtimeImageProperties =\n    properties?.properties?.component_parameters?.properties?.runtime_image ??\n    properties?.properties?.pipeline_defaults?.properties?.runtime_image;\n\n  const imageNames = (runtimeImages ?? []).map((i) => i.metadata.image_name);\n\n  const displayNames: { [key: string]: string } = {};\n\n  (runtimeImages ?? []).forEach((i: IRuntimeImage) => {\n    displayNames[i.metadata.image_name] = i.display_name;\n  });\n\n  if (runtimeImageProperties) {\n    runtimeImageProperties.enumNames = (runtimeImages ?? []).map(\n      (i) => i.display_name\n    );\n    runtimeImageProperties.enum = imageNames;\n  }\n};\n\nexport const usePalette = (\n  type = 'local',\n  additionalRuntimeImages?: IRuntimeImage[]\n): IReturn<IRuntimeComponentsResponse> => {\n  const { data: runtimeImages, error: runtimeError } = useRuntimeImages(\n    additionalRuntimeImages\n  );\n\n  const {\n    data: palette,\n    error: paletteError,\n    mutate: mutate\n  } = useSWR(type, componentFetcher);\n\n  let updatedPalette;\n  if (palette !== undefined) {\n    updatedPalette = produce(palette, (draft: IRuntimeComponentsResponse) => {\n      for (const category of draft.categories) {\n        for (const node of category.node_types) {\n          // update runtime images\n          updateRuntimeImages(node.app_data.properties, runtimeImages);\n        }\n      }\n      updateRuntimeImages(draft.properties, runtimeImages);\n    });\n  }\n\n  return {\n    data: updatedPalette,\n    error: runtimeError ?? paletteError,\n    mutate: mutate\n  };\n};\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IMetadataResource } from '@elyra/services';\n\nimport { IRuntimeSchema } from './PipelineService';\n\nexport interface IRuntimeData {\n  platforms: {\n    id: string;\n    displayName: string;\n    configs: {\n      id: string;\n      displayName: string;\n      processor: {\n        id: string;\n      };\n    }[];\n  }[];\n  allowLocal: boolean;\n}\n\nexport const createRuntimeData = ({\n  runtimes,\n  schema,\n  allowLocal\n}: {\n  runtimes: IMetadataResource[];\n  schema: IRuntimeSchema[];\n  allowLocal?: boolean;\n}): IRuntimeData => {\n  const platforms: IRuntimeData['platforms'] = [];\n  for (const s of schema) {\n    const found = platforms.find((p) => p.id === s.runtime_type);\n    if (found) {\n      continue;\n    }\n    platforms.push({\n      id: s.runtime_type,\n      displayName: s.title ?? '',\n      configs: runtimes\n        .filter((r) => r.metadata.runtime_type === s.runtime_type)\n        .map((r) => ({\n          id: r.name,\n          displayName: r.display_name,\n          processor: {\n            id: r.schema_name\n          }\n        }))\n    });\n  }\n  return { platforms, allowLocal: !!allowLocal };\n};\n\nexport interface IConfigDetails {\n  id: string;\n  displayName: string;\n  platform: {\n    id: string;\n    displayName: string;\n  };\n  processor: {\n    id: string;\n  };\n}\n\nexport const getConfigDetails = (\n  runtimeData: IRuntimeData,\n  configId: string\n): IConfigDetails | undefined => {\n  for (const platform of runtimeData.platforms) {\n    for (const config of platform.configs) {\n      if (config.id === configId) {\n        return {\n          id: config.id,\n          displayName: config.displayName,\n          platform: {\n            id: platform.id,\n            displayName: platform.displayName\n          },\n          processor: {\n            id: config.processor.id\n          }\n        };\n      }\n    }\n  }\n  return undefined;\n};\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Theme } from '@elyra/pipeline-editor/dist/types';\nimport { trashIcon } from '@elyra/ui-components';\nimport {\n  closeIcon,\n  caretDownEmptyIcon,\n  editIcon,\n  folderIcon,\n  LabIcon,\n  paletteIcon\n} from '@jupyterlab/ui-components';\nimport * as React from 'react';\nimport { DeepPartial } from 'redux';\n\ninterface ISvgIconProps {\n  children: React.ReactNode;\n}\n\nconst SvgIcon: React.FC<ISvgIconProps> = ({ children }) => {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"currentColor\"\n    >\n      {children}\n    </svg>\n  );\n};\n\nconst theme: DeepPartial<Theme> = {\n  palette: {\n    focus: 'var(--jp-brand-color0)',\n    border: 'var(--jp-border-color0)',\n    divider: 'var(--jp-border-color0)',\n    hover: 'var(--jp-border-color1)',\n    active: 'rgba(255, 255, 255, 0.18)',\n    inputBorder: 'var(--jp-border-color0)',\n    primary: {\n      main: 'var(--jp-inverse-layout-color4)',\n      hover: 'transparent',\n      contrastText: 'var(--jp-layout-color1)'\n    },\n    secondary: {\n      main: 'transparent',\n      contrastText: 'var(--jp-content-font-color1)'\n    },\n    error: {\n      main: 'var(--jp-error-color0)',\n      contrastText: 'var(--jp-icon-contrast-color3)'\n    },\n    errorMessage: {\n      main: 'var(--jp-error-color1)',\n      contrastText: 'rgba(255, 255, 255, 0.9)',\n      errorBorder: 'var(--jp-error-color0)'\n    },\n    text: {\n      primary: 'var(--jp-content-font-color0)',\n      secondary: 'var(--jp-ui-font-color1)',\n      bold: 'var(--jp-inverse-layout-color2)',\n      inactive: 'var(--jp-inverse-layout-color4)',\n      disabled: 'var(--jp-content-font-color3)',\n      link: 'var(--jp-content-link-color)',\n      error: 'var(--jp-error-color0)',\n      icon: 'var(--jp-inverse-layout-color2)'\n    },\n    background: {\n      default: 'var(--jp-layout-color1)',\n      secondary: 'var(--jp-border-color2)',\n      input: 'transparent'\n    },\n    highlight: {\n      border: 'transparent',\n      hover: 'var(--jp-content-font-color0)',\n      focus: 'transparent'\n    }\n  },\n  shape: {\n    borderRadius: '4px'\n  },\n  typography: {\n    fontFamily: 'var(--jp-ui-font-family)',\n    fontWeight: 'normal',\n    fontSize: 'var(--jp-content-font-size1)'\n  },\n  overrides: {\n    deleteIcon: LabIcon.resolveReact({ icon: trashIcon }),\n    editIcon: LabIcon.resolveReact({ icon: editIcon }),\n    folderIcon: LabIcon.resolveReact({ icon: folderIcon }),\n    closeIcon: LabIcon.resolveReact({ icon: closeIcon }),\n    propertiesIcon: (\n      <SvgIcon>\n        <path d=\"M3.5 2h-1v5h1V2zm6.1 5H6.4L6 6.45v-1L6.4 5h3.2l.4.5v1l-.4.5zm-5 3H1.4L1 9.5v-1l.4-.5h3.2l.4.5v1l-.4.5zm3.9-8h-1v2h1V2zm-1 6h1v6h-1V8zm-4 3h-1v3h1v-3zm7.9 0h3.19l.4-.5v-.95l-.4-.5H11.4l-.4.5v.95l.4.5zm2.1-9h-1v6h1V2zm-1 10h1v2h-1v-2z\" />\n      </SvgIcon>\n    ),\n    paletteIcon: LabIcon.resolveReact({ icon: paletteIcon }),\n    checkIcon: (\n      <SvgIcon>\n        <path d=\"M14.431 3.323l-8.47 10-.79-.036-3.35-4.77.818-.574 2.978 4.24 8.051-9.506.764.646z\" />\n      </SvgIcon>\n    ),\n    chevronDownIcon: LabIcon.resolveReact({ icon: caretDownEmptyIcon })\n  }\n};\n\nexport { theme };\n","/*\n * Copyright 2018-2025 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PIPELINE_CURRENT_VERSION } from '@elyra/pipeline-editor';\n\nimport { GenericObjectType } from '@elyra/ui-components';\n\nimport { LabShell } from '@jupyterlab/application';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { Widget } from '@lumino/widgets';\n\nimport uuid4 from 'uuid/v4';\n\nimport { IConfigDetails } from './runtime-utils';\n\n/**\n * A utilities class for static functions.\n */\nexport default class Utils {\n  /**\n   * Utility to create a one node pipeline to submit a single file as a pipeline\n   */\n  static generateSingleFilePipeline(\n    filename: string,\n    configDetails: IConfigDetails | undefined,\n    runtimeImage: string,\n    dependencies: string[] | undefined,\n    envObject: { [key: string]: string },\n    cpu?: number,\n    cpu_limit?: number,\n    gpu?: number,\n    memory?: number,\n    memory_limit?: number\n  ): GenericObjectType {\n    const generated_uuid = uuid4();\n\n    const artifactName = PathExt.basename(filename, PathExt.extname(filename));\n\n    const envVars = Object.entries(envObject).map(\n      ([key, val]) => `${key}=${val}`\n    );\n\n    return {\n      doc_type: 'pipeline',\n      version: '3.0',\n      json_schema:\n        'http://api.dataplatform.ibm.com/schemas/common-pipeline/pipeline-flow/pipeline-flow-v3-schema.json',\n      id: generated_uuid,\n      primary_pipeline: generated_uuid,\n      pipelines: [\n        {\n          id: generated_uuid,\n          nodes: [\n            {\n              id: generated_uuid,\n              type: 'execution_node',\n              op: 'execute-notebook-node',\n              app_data: {\n                component_parameters: {\n                  filename,\n                  runtime_image: runtimeImage,\n                  outputs: [],\n                  env_vars: envVars,\n                  dependencies,\n                  cpu,\n                  cpu_limit,\n                  gpu,\n                  memory,\n                  memory_limit,\n                  include_subdirectories: false\n                },\n                ui_data: {\n                  label: PathExt.basename(filename)\n                }\n              }\n            }\n          ],\n          app_data: {\n            name: artifactName,\n            runtime_config: configDetails?.id,\n            version: PIPELINE_CURRENT_VERSION,\n            source: PathExt.basename(filename),\n            properties: {\n              name: 'generic'\n            },\n            ui_data: {\n              comments: []\n            }\n          }\n        }\n      ],\n      schemas: []\n    };\n  }\n\n  /**\n   * Break an array into an array of \"chunks\", each \"chunk\" having \"n\" elements.\n   * The final \"chuck\" may have less than \"n\" elements.\n   * Example:\n   * chunkArray(['a', 'b', 'c', 'd', 'e', 'f', 'g'], 4)\n   * -> [['a', 'b', 'c', 'd'], ['e', 'f', 'g']]\n   */\n  static chunkArray<T>(arr: T[], n: number): T[][] {\n    return Array.from(Array(Math.ceil(arr.length / n)), (_, i) =>\n      arr.slice(i * n, i * n + n)\n    );\n  }\n\n  /**\n   * From a given widget, find the application shell and return it\n   */\n  static getLabShell = (widget: Widget | null): LabShell | null => {\n    while (widget !== null && !(widget instanceof LabShell)) {\n      widget = widget.parent;\n    }\n\n    return widget;\n  };\n}\n"],"names":[],"sourceRoot":""}