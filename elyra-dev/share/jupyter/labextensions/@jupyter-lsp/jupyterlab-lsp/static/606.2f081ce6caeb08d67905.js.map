{"version":3,"file":"606.2f081ce6caeb08d67905.js?v=2f081ce6caeb08d67905","mappings":"2LAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,iPAWtC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qDAAqD,MAAQ,GAAG,SAAW,sFAAsF,eAAiB,CAAC,kPAAkP,WAAa,MAEhd,S,4LCPIC,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,EAAAC,EAASN,GAKJ,EAAAM,GAAW,EAAAA,EAAQC,QAAS,EAAAD,EAAQC,O,oBCoCpDC,EAAoC,CACxCT,GAAI,WACJU,KAAM,kBACNC,MAAO,CACLC,QAAS,CACPF,KAAM,4BACNG,aAAc,MACdC,SAAU,4BACVC,KAAM,oEAERC,MAtCmC,CACrCC,K,yZACAC,O,ghBACAC,S,qpBACAC,Y,qpBACAC,M,uUACAC,S,2RACAC,M,6QACAC,U,8jBACAC,O,+nBACAC,S,sYACAC,K,wUACAC,M,sOACAC,K,sZACAC,Q,2WACAC,Q,uYACAC,M,k6BACAC,K,8QACAC,U,6VACAC,O,iSACAC,W,0aACAC,S,+UACAC,O,gUACAC,M,4PACAC,S,2QACAC,c,0WAiBW,EAAsC,CAIjDzC,GAAI,8BACJ0C,SAAU,CAAC,EAAAC,4BACXC,SAAU,CAACC,EAAKC,KACdA,EAAuBC,cAActC,EAAgB,EAEvDuC,WAAW,GAGb,G","sources":["webpack://@jupyter-lsp/jupyterlab-lsp/../theme-material/style/completer.css","webpack://@jupyter-lsp/jupyterlab-lsp/../theme-material/style/completer.css?edaa","webpack://@jupyter-lsp/jupyterlab-lsp/../theme-material/src/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.lsp-completer-theme-material .jp-Completer-icon svg {\n  position: relative;\n  top: 2px;\n  left: 2px;\n  width: 16px;\n  height: 16px;\n}\n\n.lsp-completer-theme-material .jp-Completer-item.jp-mod-active svg path {\n  fill: white;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../theme-material/style/completer.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;AACb\",\"sourcesContent\":[\".lsp-completer-theme-material .jp-Completer-icon svg {\\n  position: relative;\\n  top: 2px;\\n  left: 2px;\\n  width: 16px;\\n  height: 16px;\\n}\\n\\n.lsp-completer-theme-material .jp-Completer-item.jp-mod-active svg path {\\n  fill: white;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./completer.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./completer.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import '../style/completer.css';\nimport {\n  ICompletionIconSet,\n  ICompletionTheme,\n  ILSPCompletionThemeManager\n} from '@jupyter-lsp/completion-theme';\nimport { JupyterFrontEndPlugin } from '@jupyterlab/application';\n\nimport alphaTOverCode from '../style/icons/alpha-t-and-code.svg';\nimport alphabetical from '../style/icons/alphabetical.svg';\nimport beaker from '../style/icons/beaker-outline.svg';\nimport snippet from '../style/icons/border-none-variant.svg';\nimport field from '../style/icons/checkbox-blank-circle-outline.svg';\nimport variable from '../style/icons/checkbox-blank-outline.svg';\nimport file from '../style/icons/file-outline.svg';\nimport fileReplace from '../style/icons/file-replace-outline.svg';\nimport structure from '../style/icons/file-tree.svg';\nimport lightning from '../style/icons/flash-outline.svg';\nimport folder from '../style/icons/folder-outline.svg';\nimport listNumbered from '../style/icons/format-list-numbered-rtl.svg';\nimport funcVariant from '../style/icons/function-variant.svg';\nimport func from '../style/icons/function.svg';\nimport hammerWrench from '../style/icons/hammer-wrench.svg';\nimport key from '../style/icons/key.svg';\nimport number from '../style/icons/numeric.svg';\nimport module from '../style/icons/package-variant-closed.svg';\nimport palette from '../style/icons/palette-outline.svg';\nimport plusMinus from '../style/icons/plus-minus-variant.svg';\nimport shield from '../style/icons/shield-outline.svg';\nimport sitemap from '../style/icons/sitemap.svg';\nimport value from '../style/icons/text.svg';\nimport connection from '../style/icons/transit-connection-horizontal.svg';\nimport wrench from '../style/icons/wrench.svg';\n\nconst defaultSet: ICompletionIconSet = {\n  Text: alphabetical,\n  Method: func,\n  Function: funcVariant,\n  Constructor: hammerWrench,\n  Field: field,\n  Variable: variable,\n  Class: structure,\n  Interface: connection,\n  Module: module,\n  Property: wrench,\n  Unit: beaker,\n  Value: value,\n  Enum: listNumbered,\n  Keyword: key,\n  Snippet: snippet,\n  Color: palette,\n  File: file,\n  Reference: fileReplace,\n  Folder: folder,\n  EnumMember: number,\n  Constant: shield,\n  Struct: sitemap,\n  Event: lightning,\n  Operator: plusMinus,\n  TypeParameter: alphaTOverCode\n};\n\nconst completionTheme: ICompletionTheme = {\n  id: 'material',\n  name: 'Material Design',\n  icons: {\n    licence: {\n      name: 'SIL Open Font License 1.1',\n      abbreviation: 'OFL',\n      licensor: 'Austin Andrews and Google',\n      link: 'https://github.com/Templarian/MaterialDesign/blob/master/LICENSE'\n    },\n    light: defaultSet\n  }\n};\n\nexport const plugin: JupyterFrontEndPlugin<void> = {\n  // while for now it only styles completion,\n  // we may decide to allow styling of more\n  // components, reusing these plugins.\n  id: '@jupyter-lsp/theme-material',\n  requires: [ILSPCompletionThemeManager],\n  activate: (app, completionThemeManager: ILSPCompletionThemeManager) => {\n    completionThemeManager.registerTheme(completionTheme);\n  },\n  autoStart: true\n};\n\nexport default plugin;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","c","locals","completionTheme","name","icons","licence","abbreviation","licensor","link","light","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","requires","ILSPCompletionThemeManager","activate","app","completionThemeManager","registerTheme","autoStart"],"sourceRoot":""}