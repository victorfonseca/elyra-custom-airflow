{"version":3,"file":"292.065b5526d8893b656a5a.js?v=065b5526d8893b656a5a","mappings":"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","sources":["webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/@rjsf/validator-ajv8/src/createAjvInstance.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/@rjsf/validator-ajv8/src/processRawValidationErrors.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/@rjsf/validator-ajv8/src/validator.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/@rjsf/validator-ajv8/src/customizeValidator.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/@rjsf/validator-ajv8/src/precompiledValidator.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/@rjsf/validator-ajv8/src/createPrecompiledValidator.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/@rjsf/validator-ajv8/src/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv-formats/src/formats.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv-formats/src/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv-formats/src/limit.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/ajv.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/codegen/code.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/codegen/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/codegen/scope.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/errors.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/names.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/ref_error.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/resolve.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/rules.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/util.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/validate/applicability.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/validate/boolSchema.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/validate/dataType.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/validate/defaults.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/validate/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/validate/keyword.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/compile/validate/subschema.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/core.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/runtime/equal.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/runtime/ucs2length.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/runtime/uri.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/runtime/validation_error.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/allOf.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/anyOf.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/contains.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/dependencies.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/if.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/items.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/items2020.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/not.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/oneOf.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/properties.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/applicator/thenElse.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/code.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/core/id.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/core/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/core/ref.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/discriminator/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/discriminator/types.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/draft7.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/format/format.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/format/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/metadata.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/const.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/enum.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/limitItems.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/limitLength.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/limitNumber.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/limitProperties.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/multipleOf.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/pattern.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/required.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/ajv/node_modules/json-schema-traverse/index.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/fast-deep-equal/index.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/util.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/regexps-uri.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/regexps-iri.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/node_modules/punycode/punycode.es6.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/uri.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/schemes/http.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/schemes/https.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/schemes/ws.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/schemes/wss.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/schemes/mailto.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/schemes/urn.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/schemes/urn-uuid.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/uri-js/src/index.ts"],"sourcesContent":["import Ajv, { Options } from 'ajv';\nimport addFormats, { FormatsPluginOptions } from 'ajv-formats';\nimport isObject from 'lodash/isObject';\n\nimport { CustomValidatorOptionsType } from './types';\nimport { ADDITIONAL_PROPERTY_FLAG, RJSF_ADDITONAL_PROPERTIES_FLAG } from '@rjsf/utils';\n\nexport const AJV_CONFIG: Options = {\n  allErrors: true,\n  multipleOfPrecision: 8,\n  strict: false,\n  verbose: true,\n} as const;\nexport const COLOR_FORMAT_REGEX =\n  /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/;\nexport const DATA_URL_FORMAT_REGEX = /^data:([a-z]+\\/[a-z0-9-+.]+)?;(?:name=(.*);)?base64,(.*)$/;\n\n/** Creates an Ajv version 8 implementation object with standard support for the 'color` and `data-url` custom formats.\n * If `additionalMetaSchemas` are provided then the Ajv instance is modified to add each of the meta schemas in the\n * list. If `customFormats` are provided then those additional formats are added to the list of supported formats. If\n * `ajvOptionsOverrides` are provided then they are spread on top of the default `AJV_CONFIG` options when constructing\n * the `Ajv` instance. With Ajv v8, the JSON Schema formats are not provided by default, but can be plugged in. By\n * default, all formats from the `ajv-formats` library are added. To disable this capability, set the `ajvFormatOptions`\n * parameter to `false`. Additionally, you can configure the `ajv-formats` by providing a custom set of\n * [format options](https://github.com/ajv-validator/ajv-formats) to the `ajvFormatOptions` parameter.\n *\n * @param [additionalMetaSchemas] - The list of additional meta schemas that the validator can access\n * @param [customFormats] - The set of additional custom formats that the validator will support\n * @param [ajvOptionsOverrides={}] - The set of validator config override options\n * @param [ajvFormatOptions] - The `ajv-format` options to use when adding formats to `ajv`; pass `false` to disable it\n * @param [AjvClass] - The `Ajv` class to use when creating the validator instance\n */\nexport default function createAjvInstance(\n  additionalMetaSchemas?: CustomValidatorOptionsType['additionalMetaSchemas'],\n  customFormats?: CustomValidatorOptionsType['customFormats'],\n  ajvOptionsOverrides: CustomValidatorOptionsType['ajvOptionsOverrides'] = {},\n  ajvFormatOptions?: FormatsPluginOptions | false,\n  AjvClass: typeof Ajv = Ajv\n) {\n  const ajv = new AjvClass({ ...AJV_CONFIG, ...ajvOptionsOverrides });\n  if (ajvFormatOptions) {\n    addFormats(ajv, ajvFormatOptions);\n  } else if (ajvFormatOptions !== false) {\n    addFormats(ajv);\n  }\n\n  // add custom formats\n  ajv.addFormat('data-url', DATA_URL_FORMAT_REGEX);\n  ajv.addFormat('color', COLOR_FORMAT_REGEX);\n\n  // Add RJSF-specific additional properties keywords so Ajv doesn't report errors if strict is enabled.\n  ajv.addKeyword(ADDITIONAL_PROPERTY_FLAG);\n  ajv.addKeyword(RJSF_ADDITONAL_PROPERTIES_FLAG);\n\n  // add more schemas to validate against\n  if (Array.isArray(additionalMetaSchemas)) {\n    ajv.addMetaSchema(additionalMetaSchemas);\n  }\n\n  // add more custom formats to validate against\n  if (isObject(customFormats)) {\n    Object.keys(customFormats).forEach((formatName) => {\n      ajv.addFormat(formatName, customFormats[formatName]);\n    });\n  }\n\n  return ajv;\n}\n","import { ErrorObject } from 'ajv';\nimport get from 'lodash/get';\nimport {\n  createErrorHandler,\n  CustomValidator,\n  ErrorTransformer,\n  FormContextType,\n  getDefaultFormState,\n  getUiOptions,\n  PROPERTIES_KEY,\n  RJSFSchema,\n  RJSFValidationError,\n  StrictRJSFSchema,\n  toErrorSchema,\n  UiSchema,\n  unwrapErrorHandler,\n  validationDataMerge,\n  ValidatorType,\n} from '@rjsf/utils';\n\nexport type RawValidationErrorsType<Result = any> = { errors?: Result[]; validationError?: Error };\n\n/** Transforming the error output from ajv to format used by @rjsf/utils.\n * At some point, components should be updated to support ajv.\n *\n * @param errors - The list of AJV errors to convert to `RJSFValidationErrors`\n * @param [uiSchema] - An optional uiSchema that is passed to `transformErrors` and `customValidate`\n */\nexport function transformRJSFValidationErrors<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(errors: ErrorObject[] = [], uiSchema?: UiSchema<T, S, F>): RJSFValidationError[] {\n  return errors.map((e: ErrorObject) => {\n    const { instancePath, keyword, params, schemaPath, parentSchema, ...rest } = e;\n    let { message = '' } = rest;\n    let property = instancePath.replace(/\\//g, '.');\n    let stack = `${property} ${message}`.trim();\n\n    if ('missingProperty' in params) {\n      property = property ? `${property}.${params.missingProperty}` : params.missingProperty;\n      const currentProperty: string = params.missingProperty;\n      const uiSchemaTitle = getUiOptions(get(uiSchema, `${property.replace(/^\\./, '')}`)).title;\n\n      if (uiSchemaTitle) {\n        message = message.replace(currentProperty, uiSchemaTitle);\n      } else {\n        const parentSchemaTitle = get(parentSchema, [PROPERTIES_KEY, currentProperty, 'title']);\n\n        if (parentSchemaTitle) {\n          message = message.replace(currentProperty, parentSchemaTitle);\n        }\n      }\n\n      stack = message;\n    } else {\n      const uiSchemaTitle = getUiOptions<T, S, F>(get(uiSchema, `${property.replace(/^\\./, '')}`)).title;\n\n      if (uiSchemaTitle) {\n        stack = `'${uiSchemaTitle}' ${message}`.trim();\n      } else {\n        const parentSchemaTitle = parentSchema?.title;\n\n        if (parentSchemaTitle) {\n          stack = `'${parentSchemaTitle}' ${message}`.trim();\n        }\n      }\n    }\n\n    // put data in expected format\n    return {\n      name: keyword,\n      property,\n      message,\n      params, // specific to ajv\n      stack,\n      schemaPath,\n    };\n  });\n}\n\n/** This function processes the `formData` with an optional user contributed `customValidate` function, which receives\n * the form data and a `errorHandler` function that will be used to add custom validation errors for each field. Also\n * supports a `transformErrors` function that will take the raw AJV validation errors, prior to custom validation and\n * transform them in what ever way it chooses.\n *\n * @param validator - The `ValidatorType` implementation used for the `getDefaultFormState()` call\n * @param rawErrors - The list of raw `ErrorObject`s to process\n * @param formData - The form data to validate\n * @param schema - The schema against which to validate the form data\n * @param [customValidate] - An optional function that is used to perform custom validation\n * @param [transformErrors] - An optional function that is used to transform errors after AJV validation\n * @param [uiSchema] - An optional uiSchema that is passed to `transformErrors` and `customValidate`\n */\nexport default function processRawValidationErrors<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  rawErrors: RawValidationErrorsType<ErrorObject>,\n  formData: T | undefined,\n  schema: S,\n  customValidate?: CustomValidator<T, S, F>,\n  transformErrors?: ErrorTransformer<T, S, F>,\n  uiSchema?: UiSchema<T, S, F>\n) {\n  const { validationError: invalidSchemaError } = rawErrors;\n  let errors = transformRJSFValidationErrors<T, S, F>(rawErrors.errors, uiSchema);\n\n  if (invalidSchemaError) {\n    errors = [...errors, { stack: invalidSchemaError!.message }];\n  }\n  if (typeof transformErrors === 'function') {\n    errors = transformErrors(errors, uiSchema);\n  }\n\n  let errorSchema = toErrorSchema<T>(errors);\n\n  if (invalidSchemaError) {\n    errorSchema = {\n      ...errorSchema,\n      $schema: {\n        __errors: [invalidSchemaError!.message],\n      },\n    };\n  }\n\n  if (typeof customValidate !== 'function') {\n    return { errors, errorSchema };\n  }\n\n  // Include form data with undefined values, which is required for custom validation.\n  const newFormData = getDefaultFormState<T, S, F>(validator, schema, formData, schema, true) as T;\n\n  const errorHandler = customValidate(newFormData, createErrorHandler<T>(newFormData), uiSchema);\n  const userErrorSchema = unwrapErrorHandler<T>(errorHandler);\n  return validationDataMerge<T>({ errors, errorSchema }, userErrorSchema);\n}\n","import Ajv, { ErrorObject, ValidateFunction } from 'ajv';\nimport {\n  CustomValidator,\n  ErrorSchema,\n  ErrorTransformer,\n  FormContextType,\n  ID_KEY,\n  RJSFSchema,\n  ROOT_SCHEMA_PREFIX,\n  StrictRJSFSchema,\n  toErrorList,\n  UiSchema,\n  ValidationData,\n  ValidatorType,\n  withIdRefPrefix,\n  hashForSchema,\n} from '@rjsf/utils';\n\nimport { CustomValidatorOptionsType, Localizer } from './types';\nimport createAjvInstance from './createAjvInstance';\nimport processRawValidationErrors, { RawValidationErrorsType } from './processRawValidationErrors';\n\n/** `ValidatorType` implementation that uses the AJV 8 validation mechanism.\n */\nexport default class AJV8Validator<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>\n  implements ValidatorType<T, S, F>\n{\n  /** The AJV instance to use for all validations\n   *\n   * @private\n   */\n  ajv: Ajv;\n\n  /** The Localizer function to use for localizing Ajv errors\n   *\n   * @private\n   */\n  readonly localizer?: Localizer;\n\n  /** Constructs an `AJV8Validator` instance using the `options`\n   *\n   * @param options - The `CustomValidatorOptionsType` options that are used to create the AJV instance\n   * @param [localizer] - If provided, is used to localize a list of Ajv `ErrorObject`s\n   */\n  constructor(options: CustomValidatorOptionsType, localizer?: Localizer) {\n    const { additionalMetaSchemas, customFormats, ajvOptionsOverrides, ajvFormatOptions, AjvClass } = options;\n    this.ajv = createAjvInstance(additionalMetaSchemas, customFormats, ajvOptionsOverrides, ajvFormatOptions, AjvClass);\n    this.localizer = localizer;\n  }\n\n  /** Converts an `errorSchema` into a list of `RJSFValidationErrors`\n   *\n   * @param errorSchema - The `ErrorSchema` instance to convert\n   * @param [fieldPath=[]] - The current field path, defaults to [] if not specified\n   * @deprecated - Use the `toErrorList()` function provided by `@rjsf/utils` instead. This function will be removed in\n   *        the next major release.\n   */\n  toErrorList(errorSchema?: ErrorSchema<T>, fieldPath: string[] = []) {\n    return toErrorList(errorSchema, fieldPath);\n  }\n\n  /** Runs the pure validation of the `schema` and `formData` without any of the RJSF functionality. Provided for use\n   * by the playground. Returns the `errors` from the validation\n   *\n   * @param schema - The schema against which to validate the form data   * @param schema\n   * @param formData - The form data to validate\n   */\n  rawValidation<Result = any>(schema: S, formData?: T): RawValidationErrorsType<Result> {\n    let compilationError: Error | undefined = undefined;\n    let compiledValidator: ValidateFunction | undefined;\n    if (schema[ID_KEY]) {\n      compiledValidator = this.ajv.getSchema(schema[ID_KEY]);\n    }\n    try {\n      if (compiledValidator === undefined) {\n        compiledValidator = this.ajv.compile(schema);\n      }\n      compiledValidator(formData);\n    } catch (err) {\n      compilationError = err as Error;\n    }\n\n    let errors;\n    if (compiledValidator) {\n      if (typeof this.localizer === 'function') {\n        this.localizer(compiledValidator.errors);\n      }\n      errors = compiledValidator.errors || undefined;\n\n      // Clear errors to prevent persistent errors, see #1104\n      compiledValidator.errors = null;\n    }\n\n    return {\n      errors: errors as unknown as Result[],\n      validationError: compilationError,\n    };\n  }\n\n  /** This function processes the `formData` with an optional user contributed `customValidate` function, which receives\n   * the form data and a `errorHandler` function that will be used to add custom validation errors for each field. Also\n   * supports a `transformErrors` function that will take the raw AJV validation errors, prior to custom validation and\n   * transform them in what ever way it chooses.\n   *\n   * @param formData - The form data to validate\n   * @param schema - The schema against which to validate the form data\n   * @param [customValidate] - An optional function that is used to perform custom validation\n   * @param [transformErrors] - An optional function that is used to transform errors after AJV validation\n   * @param [uiSchema] - An optional uiSchema that is passed to `transformErrors` and `customValidate`\n   */\n  validateFormData(\n    formData: T | undefined,\n    schema: S,\n    customValidate?: CustomValidator<T, S, F>,\n    transformErrors?: ErrorTransformer<T, S, F>,\n    uiSchema?: UiSchema<T, S, F>\n  ): ValidationData<T> {\n    const rawErrors = this.rawValidation<ErrorObject>(schema, formData);\n    return processRawValidationErrors(this, rawErrors, formData, schema, customValidate, transformErrors, uiSchema);\n  }\n\n  /** Validates data against a schema, returning true if the data is valid, or\n   * false otherwise. If the schema is invalid, then this function will return\n   * false.\n   *\n   * @param schema - The schema against which to validate the form data\n   * @param formData - The form data to validate\n   * @param rootSchema - The root schema used to provide $ref resolutions\n   */\n  isValid(schema: S, formData: T | undefined, rootSchema: S) {\n    const rootSchemaId = rootSchema[ID_KEY] ?? ROOT_SCHEMA_PREFIX;\n    try {\n      // add the rootSchema ROOT_SCHEMA_PREFIX as id.\n      // then rewrite the schema ref's to point to the rootSchema\n      // this accounts for the case where schema have references to models\n      // that lives in the rootSchema but not in the schema in question.\n      // if (this.ajv.getSchema(rootSchemaId) === undefined) {\n      // TODO restore the commented out `if` above when the TODO in the `finally` is completed\n      this.ajv.addSchema(rootSchema, rootSchemaId);\n      // }\n      const schemaWithIdRefPrefix = withIdRefPrefix<S>(schema) as S;\n      const schemaId = schemaWithIdRefPrefix[ID_KEY] ?? hashForSchema(schemaWithIdRefPrefix);\n      let compiledValidator: ValidateFunction | undefined;\n      compiledValidator = this.ajv.getSchema(schemaId);\n      if (compiledValidator === undefined) {\n        // Add schema by an explicit ID so it can be fetched later\n        // Fall back to using compile if necessary\n        // https://ajv.js.org/guide/managing-schemas.html#pre-adding-all-schemas-vs-adding-on-demand\n        compiledValidator =\n          this.ajv.addSchema(schemaWithIdRefPrefix, schemaId).getSchema(schemaId) ||\n          this.ajv.compile(schemaWithIdRefPrefix);\n      }\n      const result = compiledValidator(formData);\n      return result as boolean;\n    } catch (e) {\n      console.warn('Error encountered compiling schema:', e);\n      return false;\n    } finally {\n      // TODO: A function should be called if the root schema changes so we don't have to remove and recompile the schema every run.\n      // make sure we remove the rootSchema from the global ajv instance\n      this.ajv.removeSchema(rootSchemaId);\n    }\n  }\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport { CustomValidatorOptionsType, Localizer } from './types';\nimport AJV8Validator from './validator';\n\n/** Creates and returns a customized implementation of the `ValidatorType` with the given customization `options` if\n * provided. If a `localizer` is provided, it is used to translate the messages generated by the underlying AJV\n * validation.\n *\n * @param [options={}] - The `CustomValidatorOptionsType` options that are used to create the `ValidatorType` instance\n * @param [localizer] - If provided, is used to localize a list of Ajv `ErrorObject`s\n * @returns - The custom validator implementation resulting from the set of parameters provided\n */\nexport default function customizeValidator<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(options: CustomValidatorOptionsType = {}, localizer?: Localizer) {\n  return new AJV8Validator<T, S, F>(options, localizer);\n}\n","import { ErrorObject } from 'ajv';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport {\n  CustomValidator,\n  ErrorSchema,\n  ErrorTransformer,\n  FormContextType,\n  hashForSchema,\n  ID_KEY,\n  JUNK_OPTION_ID,\n  RJSFSchema,\n  StrictRJSFSchema,\n  toErrorList,\n  UiSchema,\n  ValidationData,\n  ValidatorType,\n  retrieveSchema,\n} from '@rjsf/utils';\n\nimport { CompiledValidateFunction, Localizer, ValidatorFunctions } from './types';\nimport processRawValidationErrors, { RawValidationErrorsType } from './processRawValidationErrors';\n\n/** `ValidatorType` implementation that uses an AJV 8 precompiled validator as created by the\n * `compileSchemaValidators()` function provided by the `@rjsf/validator-ajv8` library.\n */\nexport default class AJV8PrecompiledValidator<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> implements ValidatorType<T, S, F>\n{\n  /** The root schema object used to construct this validator\n   *\n   * @private\n   */\n  readonly rootSchema: S;\n\n  /** The `ValidatorFunctions` map used to construct this validator\n   *\n   * @private\n   */\n  readonly validateFns: ValidatorFunctions;\n\n  /** The main validator function associated with the base schema in the `precompiledValidator`\n   *\n   * @private\n   */\n  readonly mainValidator: CompiledValidateFunction;\n\n  /** The Localizer function to use for localizing Ajv errors\n   *\n   * @private\n   */\n  readonly localizer?: Localizer;\n\n  /** Constructs an `AJV8PrecompiledValidator` instance using the `validateFns` and `rootSchema`\n   *\n   * @param validateFns - The map of the validation functions that are generated by the `schemaCompile()` function\n   * @param rootSchema - The root schema that was used with the `compileSchema()` function\n   * @param [localizer] - If provided, is used to localize a list of Ajv `ErrorObject`s\n   * @throws - Error when the base schema of the precompiled validator does not have a matching validator function\n   */\n  constructor(validateFns: ValidatorFunctions, rootSchema: S, localizer?: Localizer) {\n    this.rootSchema = rootSchema;\n    this.validateFns = validateFns;\n    this.localizer = localizer;\n    this.mainValidator = this.getValidator(rootSchema);\n  }\n\n  /** Returns the precompiled validator associated with the given `schema` from the map of precompiled validator\n   * functions.\n   *\n   * @param schema - The schema for which a precompiled validator function is desired\n   * @returns - The precompiled validator function associated with this schema\n   */\n  getValidator(schema: S) {\n    const key = get(schema, ID_KEY) || hashForSchema(schema);\n    const validator = this.validateFns[key];\n    if (!validator) {\n      throw new Error(`No precompiled validator function was found for the given schema for \"${key}\"`);\n    }\n    return validator;\n  }\n\n  /** Ensures that the validator is using the same schema as the root schema used to construct the precompiled\n   * validator. It first compares the given `schema` against the root schema and if they aren't the same, then it\n   * checks against the resolved root schema, on the chance that a resolved version of the root schema was passed in\n   * instead of the raw root schema.\n   *\n   * @param schema - The schema against which to validate the form data\n   * @param [formData] - The form data to validate if any\n   */\n  ensureSameRootSchema(schema: S, formData?: T) {\n    if (!isEqual(schema, this.rootSchema)) {\n      // Resolve the root schema with the passed in form data since that may affect the resolution\n      const resolvedRootSchema = retrieveSchema(this, this.rootSchema, this.rootSchema, formData);\n      if (!isEqual(schema, resolvedRootSchema)) {\n        throw new Error(\n          'The schema associated with the precompiled validator differs from the rootSchema provided for validation'\n        );\n      }\n    }\n    return true;\n  }\n\n  /** Converts an `errorSchema` into a list of `RJSFValidationErrors`\n   *\n   * @param errorSchema - The `ErrorSchema` instance to convert\n   * @param [fieldPath=[]] - The current field path, defaults to [] if not specified\n   * @deprecated - Use the `toErrorList()` function provided by `@rjsf/utils` instead. This function will be removed in\n   *        the next major release.\n   */\n  toErrorList(errorSchema?: ErrorSchema<T>, fieldPath: string[] = []) {\n    return toErrorList(errorSchema, fieldPath);\n  }\n\n  /** Runs the pure validation of the `schema` and `formData` without any of the RJSF functionality. Provided for use\n   * by the playground. Returns the `errors` from the validation\n   *\n   * @param schema - The schema against which to validate the form data\n   * @param [formData] - The form data to validate, if any\n   * @throws - Error when the schema provided does not match the base schema of the precompiled validator\n   */\n  rawValidation<Result = any>(schema: S, formData?: T): RawValidationErrorsType<Result> {\n    this.ensureSameRootSchema(schema, formData);\n    this.mainValidator(formData);\n\n    if (typeof this.localizer === 'function') {\n      this.localizer(this.mainValidator.errors);\n    }\n    const errors = this.mainValidator.errors || undefined;\n\n    // Clear errors to prevent persistent errors, see #1104\n    this.mainValidator.errors = null;\n\n    return { errors: errors as unknown as Result[] };\n  }\n\n  /** This function processes the `formData` with an optional user contributed `customValidate` function, which receives\n   * the form data and a `errorHandler` function that will be used to add custom validation errors for each field. Also\n   * supports a `transformErrors` function that will take the raw AJV validation errors, prior to custom validation and\n   * transform them in what ever way it chooses.\n   *\n   * @param formData - The form data to validate\n   * @param schema - The schema against which to validate the form data\n   * @param [customValidate] - An optional function that is used to perform custom validation\n   * @param [transformErrors] - An optional function that is used to transform errors after AJV validation\n   * @param [uiSchema] - An optional uiSchema that is passed to `transformErrors` and `customValidate`\n   */\n  validateFormData(\n    formData: T | undefined,\n    schema: S,\n    customValidate?: CustomValidator<T, S, F>,\n    transformErrors?: ErrorTransformer<T, S, F>,\n    uiSchema?: UiSchema<T, S, F>\n  ): ValidationData<T> {\n    const rawErrors = this.rawValidation<ErrorObject>(schema, formData);\n    return processRawValidationErrors(this, rawErrors, formData, schema, customValidate, transformErrors, uiSchema);\n  }\n\n  /** Validates data against a schema, returning true if the data is valid, or false otherwise. If the schema is\n   * invalid, then this function will return false.\n   *\n   * @param schema - The schema against which to validate the form data\n   * @param formData - The form data to validate\n   * @param rootSchema - The root schema used to provide $ref resolutions\n   * @returns - true if the formData validates against the schema, false otherwise\n   * @throws - Error when the schema provided does not match the base schema of the precompiled validator OR if there\n   *        isn't a precompiled validator function associated with the schema\n   */\n  isValid(schema: S, formData: T | undefined, rootSchema: S) {\n    this.ensureSameRootSchema(rootSchema, formData);\n    if (get(schema, ID_KEY) === JUNK_OPTION_ID) {\n      return false;\n    }\n    const validator = this.getValidator(schema);\n    return validator(formData);\n  }\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '@rjsf/utils';\n\nimport { Localizer, ValidatorFunctions } from './types';\nimport AJV8PrecompiledValidator from './precompiledValidator';\n\n/** Creates and returns a `ValidatorType` interface that is implemented with a precompiled validator. If a `localizer`\n * is provided, it is used to translate the messages generated by the underlying AJV validation.\n *\n * NOTE: The `validateFns` parameter is an object obtained by importing from a precompiled validation file created via\n * the `compileSchemaValidators()` function.\n *\n * @param validateFns - The map of the validation functions that are created by the `compileSchemaValidators()` function\n * @param rootSchema - The root schema that was used with the `compileSchemaValidators()` function\n * @param [localizer] - If provided, is used to localize a list of Ajv `ErrorObject`s\n * @returns - The precompiled validator implementation resulting from the set of parameters provided\n */\nexport default function createPrecompiledValidator<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(validateFns: ValidatorFunctions, rootSchema: S, localizer?: Localizer): ValidatorType<T, S, F> {\n  return new AJV8PrecompiledValidator<T, S, F>(validateFns, rootSchema, localizer);\n}\n","import customizeValidator from './customizeValidator';\nimport createPrecompiledValidator from './createPrecompiledValidator';\n\nexport { customizeValidator, createPrecompiledValidator };\nexport * from './types';\n\nexport default customizeValidator();\n","import type {Format, FormatDefinition} from \"ajv\"\nimport type {FormatValidator, FormatCompare} from \"ajv/dist/types\"\n\nexport type FormatMode = \"fast\" | \"full\"\n\nexport type FormatName =\n  | \"date\"\n  | \"time\"\n  | \"date-time\"\n  | \"duration\"\n  | \"uri\"\n  | \"uri-reference\"\n  | \"uri-template\"\n  | \"url\"\n  | \"email\"\n  | \"hostname\"\n  | \"ipv4\"\n  | \"ipv6\"\n  | \"regex\"\n  | \"uuid\"\n  | \"json-pointer\"\n  | \"json-pointer-uri-fragment\"\n  | \"relative-json-pointer\"\n  | \"byte\"\n  | \"int32\"\n  | \"int64\"\n  | \"float\"\n  | \"double\"\n  | \"password\"\n  | \"binary\"\n\nexport type DefinedFormats = {\n  [key in FormatName]: Format\n}\n\nfunction fmtDef(\n  validate: RegExp | FormatValidator<string>,\n  compare: FormatCompare<string>\n): FormatDefinition<string> {\n  return {validate, compare}\n}\n\nexport const fullFormats: DefinedFormats = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: fmtDef(date, compareDate),\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: fmtDef(time, compareTime),\n  \"date-time\": fmtDef(date_time, compareDateTime),\n  // duration: https://tools.ietf.org/html/rfc3339#appendix-A\n  duration: /^P(?!$)((\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?|(\\d+W)?)$/,\n  uri,\n  \"uri-reference\":\n    /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  \"uri-template\":\n    /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  url: /^(?:https?|ftp):\\/\\/(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)(?:\\.(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  email:\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname:\n    /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i,\n  regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  \"json-pointer\": /^(?:\\/(?:[^~/]|~0|~1)*)*$/,\n  \"json-pointer-uri-fragment\": /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  \"relative-json-pointer\": /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n  // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types\n  // byte: https://github.com/miguelmota/is-base64\n  byte,\n  // signed 32 bit integer\n  int32: {type: \"number\", validate: validateInt32},\n  // signed 64 bit integer\n  int64: {type: \"number\", validate: validateInt64},\n  // C-type float\n  float: {type: \"number\", validate: validateNumber},\n  // C-type double\n  double: {type: \"number\", validate: validateNumber},\n  // hint to the UI to hide input strings\n  password: true,\n  // unchecked string payload\n  binary: true,\n}\n\nexport const fastFormats: DefinedFormats = {\n  ...fullFormats,\n  date: fmtDef(/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/, compareDate),\n  time: fmtDef(\n    /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n    compareTime\n  ),\n  \"date-time\": fmtDef(\n    /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n    compareDateTime\n  ),\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  \"uri-reference\": /^(?:(?:[a-z][a-z0-9+\\-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'wilful violation')\n  email:\n    /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n}\n\nexport const formatNames = Object.keys(fullFormats) as FormatName[]\n\nfunction isLeapYear(year: number): boolean {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)\n}\n\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nfunction date(str: string): boolean {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  const matches: string[] | null = DATE.exec(str)\n  if (!matches) return false\n  const year: number = +matches[1]\n  const month: number = +matches[2]\n  const day: number = +matches[3]\n  return (\n    month >= 1 &&\n    month <= 12 &&\n    day >= 1 &&\n    day <= (month === 2 && isLeapYear(year) ? 29 : DAYS[month])\n  )\n}\n\nfunction compareDate(d1: string, d2: string): number | undefined {\n  if (!(d1 && d2)) return undefined\n  if (d1 > d2) return 1\n  if (d1 < d2) return -1\n  return 0\n}\n\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i\n\nfunction time(str: string, withTimeZone?: boolean): boolean {\n  const matches: string[] | null = TIME.exec(str)\n  if (!matches) return false\n\n  const hour: number = +matches[1]\n  const minute: number = +matches[2]\n  const second: number = +matches[3]\n  const timeZone: string = matches[5]\n  return (\n    ((hour <= 23 && minute <= 59 && second <= 59) ||\n      (hour === 23 && minute === 59 && second === 60)) &&\n    (!withTimeZone || timeZone !== \"\")\n  )\n}\n\nfunction compareTime(t1: string, t2: string): number | undefined {\n  if (!(t1 && t2)) return undefined\n  const a1 = TIME.exec(t1)\n  const a2 = TIME.exec(t2)\n  if (!(a1 && a2)) return undefined\n  t1 = a1[1] + a1[2] + a1[3] + (a1[4] || \"\")\n  t2 = a2[1] + a2[2] + a2[3] + (a2[4] || \"\")\n  if (t1 > t2) return 1\n  if (t1 < t2) return -1\n  return 0\n}\n\nconst DATE_TIME_SEPARATOR = /t|\\s/i\nfunction date_time(str: string): boolean {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  const dateTime: string[] = str.split(DATE_TIME_SEPARATOR)\n  return dateTime.length === 2 && date(dateTime[0]) && time(dateTime[1], true)\n}\n\nfunction compareDateTime(dt1: string, dt2: string): number | undefined {\n  if (!(dt1 && dt2)) return undefined\n  const [d1, t1] = dt1.split(DATE_TIME_SEPARATOR)\n  const [d2, t2] = dt2.split(DATE_TIME_SEPARATOR)\n  const res = compareDate(d1, d2)\n  if (res === undefined) return undefined\n  return res || compareTime(t1, t2)\n}\n\nconst NOT_URI_FRAGMENT = /\\/|:/\nconst URI =\n  /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i\n\nfunction uri(str: string): boolean {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str)\n}\n\nconst BYTE = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm\n\nfunction byte(str: string): boolean {\n  BYTE.lastIndex = 0\n  return BYTE.test(str)\n}\n\nconst MIN_INT32 = -(2 ** 31)\nconst MAX_INT32 = 2 ** 31 - 1\n\nfunction validateInt32(value: number): boolean {\n  return Number.isInteger(value) && value <= MAX_INT32 && value >= MIN_INT32\n}\n\nfunction validateInt64(value: number): boolean {\n  // JSON and javascript max Int is 2**53, so any int that passes isInteger is valid for Int64\n  return Number.isInteger(value)\n}\n\nfunction validateNumber(): boolean {\n  return true\n}\n\nconst Z_ANCHOR = /[^\\\\]\\\\Z/\nfunction regex(str: string): boolean {\n  if (Z_ANCHOR.test(str)) return false\n  try {\n    new RegExp(str)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n","import {\n  DefinedFormats,\n  FormatMode,\n  FormatName,\n  formatNames,\n  fastFormats,\n  fullFormats,\n} from \"./formats\"\nimport formatLimit from \"./limit\"\nimport type Ajv from \"ajv\"\nimport type {Plugin, Format} from \"ajv\"\nimport {_, Name} from \"ajv/dist/compile/codegen\"\n\nexport {FormatMode, FormatName} from \"./formats\"\nexport {LimitFormatError} from \"./limit\"\nexport interface FormatOptions {\n  mode?: FormatMode\n  formats?: FormatName[]\n  keywords?: boolean\n}\n\nexport type FormatsPluginOptions = FormatName[] | FormatOptions\n\nexport interface FormatsPlugin extends Plugin<FormatsPluginOptions> {\n  get: (format: FormatName, mode?: FormatMode) => Format\n}\n\nconst fullName = new Name(\"fullFormats\")\nconst fastName = new Name(\"fastFormats\")\n\nconst formatsPlugin: FormatsPlugin = (\n  ajv: Ajv,\n  opts: FormatsPluginOptions = {keywords: true}\n): Ajv => {\n  if (Array.isArray(opts)) {\n    addFormats(ajv, opts, fullFormats, fullName)\n    return ajv\n  }\n  const [formats, exportName] =\n    opts.mode === \"fast\" ? [fastFormats, fastName] : [fullFormats, fullName]\n  const list = opts.formats || formatNames\n  addFormats(ajv, list, formats, exportName)\n  if (opts.keywords) formatLimit(ajv)\n  return ajv\n}\n\nformatsPlugin.get = (name: FormatName, mode: FormatMode = \"full\"): Format => {\n  const formats = mode === \"fast\" ? fastFormats : fullFormats\n  const f = formats[name]\n  if (!f) throw new Error(`Unknown format \"${name}\"`)\n  return f\n}\n\nfunction addFormats(ajv: Ajv, list: FormatName[], fs: DefinedFormats, exportName: Name): void {\n  ajv.opts.code.formats ??= _`require(\"ajv-formats/dist/formats\").${exportName}`\n  for (const f of list) ajv.addFormat(f, fs[f])\n}\n\nmodule.exports = exports = formatsPlugin\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default formatsPlugin\n","import type Ajv from \"ajv\"\nimport type {\n  Plugin,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  Code,\n  Name,\n  ErrorObject,\n} from \"ajv\"\nimport type {AddedFormat} from \"ajv/dist/types\"\nimport type {Rule} from \"ajv/dist/compile/rules\"\nimport {KeywordCxt} from \"ajv\"\nimport {_, str, or, getProperty, operators} from \"ajv/dist/compile/codegen\"\n\ntype Kwd = \"formatMaximum\" | \"formatMinimum\" | \"formatExclusiveMaximum\" | \"formatExclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst ops = operators\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  formatMaximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  formatMinimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  formatExclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  formatExclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitFormatError = ErrorObject<Kwd, {limit: string; comparison: Comparison}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`should be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nexport const formatLimitDefinition: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {gen, data, schemaCode, keyword, it} = cxt\n    const {opts, self} = it\n    if (!opts.validateFormats) return\n\n    const fCxt = new KeywordCxt(it, (self.RULES.all.format as Rule).definition, \"format\")\n    if (fCxt.$data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fmt = gen.const(\"fmt\", _`${fmts}[${fCxt.schemaCode}]`)\n      cxt.fail$data(\n        or(\n          _`typeof ${fmt} != \"object\"`,\n          _`${fmt} instanceof RegExp`,\n          _`typeof ${fmt}.compare != \"function\"`,\n          compareCode(fmt)\n        )\n      )\n    }\n\n    function validateFormat(): void {\n      const format = fCxt.schema as string\n      const fmtDef: AddedFormat | undefined = self.formats[format]\n      if (!fmtDef || fmtDef === true) return\n      if (\n        typeof fmtDef != \"object\" ||\n        fmtDef instanceof RegExp ||\n        typeof fmtDef.compare != \"function\"\n      ) {\n        throw new Error(`\"${keyword}\": format \"${format}\" does not define \"compare\" function`)\n      }\n      const fmt = gen.scopeValue(\"formats\", {\n        key: format,\n        ref: fmtDef,\n        code: opts.code.formats ? _`${opts.code.formats}${getProperty(format)}` : undefined,\n      })\n\n      cxt.fail$data(compareCode(fmt))\n    }\n\n    function compareCode(fmt: Name): Code {\n      return _`${fmt}.compare(${data}, ${schemaCode}) ${KWDs[keyword as Kwd].fail} 0`\n    }\n  },\n  dependencies: [\"format\"],\n}\n\nconst formatLimitPlugin: Plugin<undefined> = (ajv: Ajv): Ajv => {\n  ajv.addKeyword(formatLimitDefinition)\n  return ajv\n}\n\nexport default formatLimitPlugin\n","import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nclass Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n","export abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n","import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(private readonly varKind: Name, private readonly name: Name, private rhs?: SafeExpr) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(readonly lhs: Code, public rhs: SafeExpr, private readonly sideEffects?: boolean) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(lhs: Code, private readonly op: Code, rhs: SafeExpr, sideEffects?: boolean) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(private condition: Code | boolean, nodes?: ChildNode[]) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(public name: Name, public args: Code, public async?: boolean) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n","import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n","import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n","import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport * as URI from \"uri-js\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URI.URIComponents,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n","import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n","import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n","import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponents} from \"uri-js\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponents): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let baseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") baseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = baseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(baseId ? _resolve(baseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n","import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = typeof _jsonTypes[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n","import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n","import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n","import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n","import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n","import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n","import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n","import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n","import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n","export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n","// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n","// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n","import * as uri from \"uri-js\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n","import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n","import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n","import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n","import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n","import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch?.$ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n","import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n","import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n","import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n","import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n","import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}","import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n","import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n","/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;","import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n"],"names":["AJV_CONFIG","allErrors","multipleOfPrecision","strict","verbose","COLOR_FORMAT_REGEX","DATA_URL_FORMAT_REGEX","processRawValidationErrors","validator","rawErrors","formData","schema","customValidate","transformErrors","uiSchema","validationError","invalidSchemaError","errors","map","e","instancePath","keyword","params","schemaPath","parentSchema","rest","message","property","replace","stack","trim","missingProperty","currentProperty","uiSchemaTitle","getUiOptions","title","parentSchemaTitle","PROPERTIES_KEY","name","transformRJSFValidationErrors","errorSchema","toErrorSchema","$schema","__errors","newFormData","getDefaultFormState","errorHandler","createErrorHandler","userErrorSchema","unwrapErrorHandler","validationDataMerge","AJV8Validator","constructor","options","localizer","additionalMetaSchemas","customFormats","ajvOptionsOverrides","ajvFormatOptions","AjvClass","this","ajv","addFormat","addKeyword","ADDITIONAL_PROPERTY_FLAG","RJSF_ADDITONAL_PROPERTIES_FLAG","Array","isArray","addMetaSchema","Object","keys","forEach","formatName","createAjvInstance","toErrorList","fieldPath","rawValidation","compilationError","compiledValidator","ID_KEY","getSchema","undefined","compile","err","validateFormData","isValid","rootSchema","rootSchemaId","ROOT_SCHEMA_PREFIX","addSchema","schemaWithIdRefPrefix","withIdRefPrefix","schemaId","hashForSchema","console","warn","removeSchema","customizeValidator","AJV8PrecompiledValidator","validateFns","mainValidator","getValidator","key","Error","ensureSameRootSchema","resolvedRootSchema","retrieveSchema","JUNK_OPTION_ID","createPrecompiledValidator","fmtDef","validate","compare","fullFormats","date","compareDate","time","compareTime","str","dateTime","split","DATE_TIME_SEPARATOR","length","compareDateTime","duration","uri","NOT_URI_FRAGMENT","test","URI","url","email","hostname","ipv4","ipv6","regex","Z_ANCHOR","RegExp","uuid","byte","BYTE","lastIndex","int32","type","value","Number","isInteger","MAX_INT32","MIN_INT32","int64","float","validateNumber","double","password","binary","fastFormats","formatNames","DATE","DAYS","matches","exec","year","month","day","isLeapYear","d1","d2","TIME","withTimeZone","hour","minute","second","timeZone","t1","t2","a1","a2","dt1","dt2","res","fullName","Name","fastName","formatsPlugin","opts","keywords","addFormats","formats","exportName","mode","list","fs","code","_","f","get","module","exports","defineProperty","ops","operators","KWDs","formatMaximum","okStr","ok","LTE","fail","GT","formatMinimum","GTE","LT","formatExclusiveMaximum","formatExclusiveMinimum","error","schemaCode","formatLimitDefinition","schemaType","$data","cxt","gen","data","it","self","validateFormats","fCxt","KeywordCxt","RULES","all","format","definition","compareCode","fmt","fmts","scopeValue","ref","const","fail$data","or","validate$DataFormat","getProperty","validateFormat","dependencies","META_SUPPORT_DATA","META_SCHEMA_ID","Ajv","_addVocabularies","super","v","addVocabulary","discriminator","_addDefaultMetaSchema","meta","metaSchema","$dataMetaSchema","draft7MetaSchema","refs","defaultMeta","stringify","nil","CodeGen","default","_CodeOrName","IDENTIFIER","s","toString","emptyStr","names","_Code","_items","item","_str","reduce","c","_names","strs","args","i","addCodeArg","push","plus","expr","safeStringify","mergeExprItems","splice","optimize","arg","x","join","a","b","slice","JSON","c1","c2","rx","strConcat","regexpCode","Scope","ValueScope","ValueScopeName","varKinds","EQ","NEQ","NOT","OR","AND","ADD","Node","optimizeNodes","optimizeNames","_constants","Def","varKind","rhs","render","es5","_n","var","constants","optimizeExpr","Assign","lhs","sideEffects","addExprNames","AssignOp","op","Label","label","Break","Throw","AnyCode","ParentNode","nodes","n","subtractNames","addNames","BlockNode","Root","Else","kind","If","condition","else","cond","ns","not","For","ForLoop","iteration","ForRange","from","to","ForIter","loop","iterable","Func","async","Return","Try","catch","finally","Catch","Finally","replaceName","some","items","par","extScope","_values","_blockStarts","lines","_extScope","_scope","parent","_nodes","_root","prefix","scopeName","prefixOrName","Set","add","getScopeValue","keyOrRef","getValue","scopeRefs","scopeCode","_def","nameOrPrefix","constant","toName","_leafNode","_constant","let","assign","object","keyValues","thenBody","elseBody","_blockNode","endIf","elseIf","_elseNode","_endBlockNode","_for","node","forBody","endFor","forRange","forOf","arr","forIn","obj","ownProperties","tryBody","catchCode","finallyCode","_currNode","block","body","nodeCount","endBlock","len","pop","toClose","func","funcBody","endFunc","N1","N2","andCode","mappend","orCode","y","ValueError","UsedValueState","prefixes","_prefixes","_parent","_newName","_nameGroup","index","has","nameStr","setValue","itemIndex","scopePath","line","scope","valueKey","vs","_name","Map","set","values","_reduceValues","usedValues","getCode","valueCode","nameSet","Started","def","Completed","addError","errObj","if","vErrors","returnErrors","errs","validateName","schemaEnv","$async","throw","ValidationError","return","keywordError","keyword$DataError","errorPaths","overrideAllErrors","compositeRule","errorObjectCode","errsCount","schemaValue","errorPath","errSchemaPath","E","propertyName","createErrors","errorInstancePath","errorSchemaPath","topSchemaRef","messages","extraErrorProps","errorObject","instPath","getErrorPath","Type","Str","schPath","SchemaEnv","env","dynamicAnchors","root","baseId","normalizeId","localRefs","compileSchema","sch","_sch","getCompilingSchema","call","rootId","getFullPath","uriResolver","_ValidationError","schemaCxt","parentData","parentDataProperty","dataNames","dataPathArr","dataLevel","dataTypes","definedProperties","source","jtd","sourceCode","_compilations","validateFunctionCode","validateCode","process","Function","makeValidate","scopeValues","unevaluated","props","evaluated","dynamicProps","dynamicItems","logger","delete","inlineOrCompile","inlineRef","inlineRefs","schEnv","s2","s1","resolve","schemas","resolveSchema","p","parse","refPath","_getFullPath","getJsonPointer","id","schOrRef","schId","resolveUrl","schOrFunc","PREVENT_SCOPE_CHANGE","parsedRef","fragment","part","partSchema","unescapeFragment","$ref","schemaHasRulesButRef","valCxt","rootData","json","jsonPos","jsonLen","jsonPart","MissingRefError","resolver","msg","missingRef","missingSchema","SIMPLE_INLINED","limit","hasRef","countKeys","REF_KEYWORDS","count","Infinity","eachItem","normalize","serialize","TRAILING_SLASH_HASH","ANCHOR","baseIds","pathPrefix","schemaRefs","traverse","allKeys","jsonPtr","parentJsonPtr","fullPath","addRef","_resolve","ambiguos","checkAmbiguosRef","addAnchor","anchor","$anchor","$dynamicAnchor","sch1","sch2","equal","jsonTypes","groups","number","rules","string","array","types","integer","boolean","null","post","checkUnknownRules","strictSchema","checkStrictMode","schemaHasRules","escapeJsonPointer","unescapeJsonPointer","makeMergeEvaluated","mergeNames","mergeToName","mergeValues","resultToName","evaluatedPropsToName","ps","setEvaluated","hash","decodeURIComponent","encodeURIComponent","xs","mergeEvaluated","Math","max","snippets","dataProp","dataPropType","jsPropertySyntax","isNumber","Num","shouldUseGroup","group","rule","shouldUseRule","implements","kwd","boolError","falseSchemaError","reportError","valid","DataType","getJSONTypes","ts","every","isJSONType","includes","nullable","coerceTo","coerceTypes","filter","t","COERCIBLE","coerceToTypes","checkTypes","schemaHasRulesForType","wrongType","checkDataTypes","strictNumbers","Wrong","dataType","coerced","coerceSpecificType","reportTypeError","assignParentData","coerceData","checkDataType","strictNums","correct","Correct","numCond","_cond","and","toHash","notObj","typeError","schemaRefOrVal","getTypeErrorContext","assignDefault","prop","defaultValue","childData","useDefaults","ty","properties","validateFunction","funcSourceUrl","dynamicRef","destructureValCxtES5","destructureValCxt","schemaCxtHasRules","isSchemaObj","checkKeywords","ignoreKeywordsWithRef","checkRefsAndKeywords","typeAndKeywords","schemaKeywords","getSchemaTypes","coerceAndCheckDataType","commentKeyword","$comment","rootName","typeErrors","groupKeywords","iterateKeywords","strictTypes","includesType","strictTypesError","withTypes","narrowSchemaTypes","checkContextTypes","allowUnionTypes","checkMultipleTypes","hasApplicableType","kwdT","schTs","checkKeywordTypes","checkStrictTypes","keywordCode","assignDefaults","checkNoDefault","resetEvaluated","assignEvaluated","returnResults","topSchemaObjCode","topBoolOrEmptySchema","validateKeywordUsage","getData","validSchemaType","allowUndefined","trackErrors","result","successAction","failAction","failResult","pass","invalid$data","append","errorParams","setParams","_error","reportExtraError","$dataError","reset","resetErrorsCount","block$data","codeBlock","$dataValid","check$data","validateSchema","st","wrong$DataType","validateSchemaRef","invalid$DataSchema","subschema","appl","getSubschema","extendSubschemaData","extendSubschemaMode","nextContext","updateContext","checkAsyncSchema","subSchemaObjCode","boolOrEmptySchema","subschemaCode","mergeValidEvaluated","ruleType","funcKeywordCode","macroKeywordCode","JSON_POINTER","RELATIVE_JSON_POINTER","jsonPointer","up","errorMsg","segments","segment","pointerType","modifyData","useKeyword","macroSchema","macro","schemaRef","checkAsyncKeyword","validateRef","assignValid","_await","passCxt","passContext","passSchema","callValidateCode","modifying","reportErrs","ruleErrs","try","validateAsync","validateErrs","validateSync","extendErrors","addErrs","deps","prototype","hasOwnProperty","errorsText","schemaProp","escapeFragment","dpType","dataContextProps","_nextData","jtdDiscriminator","jtdMetadata","defaultRegExp","flags","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","errorDataPath","jsonPointers","extendRefs","missingRefs","processCode","strictDefaults","strictKeywords","uniqueItems","unknownFormats","cache","ajvErrors","deprecatedOptions","unicode","requiredOptions","o","_optz","regExp","strictTuples","strictRequired","loopRequired","loopEnum","addUsedSchema","unicodeRegExp","int32range","_loading","_cache","noLogs","log","getLogger","formatOpt","getRules","checkOptions","_metaOpts","getMetaSchemaOptions","addInitialFormats","addInitialKeywords","addInitialSchemas","_dataRefSchema","$dataRefSchema","$id","schemaKeyRef","_meta","_addSchema","_compileSchemaEnv","compileAsync","loadSchema","runCompileAsync","_schema","loadMetaSchema","_compileAsync","checkLoaded","loadMissingSchema","_loadSchema","_validateSchema","_checkUnique","throwOrLogError","keyRef","getSchEnv","_removeAllSchemas","clear","cacheKey","definitions","kwdOrDef","checkKeyword","addRule","keywordMetaschema","k","getKeyword","removeKeyword","findIndex","separator","dataVar","text","keywordsJsonPointers","seg","schemaOrData","getSchemaRefs","startsWith","_compileMetaSchema","currentOpts","checkOpts","opt","optsSchemas","defs","metaOpts","KEYWORD_NAME","ruleGroup","find","before","addBeforeRule","_rule","$dataRef","anyOf","ucs2length","pos","charCodeAt","validation","validateAdditionalItems","alwaysValidSchema","break","validateItems","additionalProperty","removeAdditional","allSchemaProperties","patProps","patternProperties","deleteAdditional","additionalPropertyCode","applyAdditionalSchema","definedProp","propsSchema","isOwnProperty","usePattern","isAdditional","schCxt","validateUnion","min","minContains","maxContains","next","validateItemsWithCount","schValid","checkLimits","_valid","depsCount","property_ies","propDeps","schDeps","propertyDeps","schemaDeps","splitDependencies","validatePropertyDeps","validateSchemaDeps","missing","hasProperty","propertyInData","depProp","checkReportMissingProp","checkMissingProp","reportMissingProp","ifClause","then","hasThen","hasSchema","hasElse","validateIf","validateClause","draft2020","applicator","validateTuple","validateArray","extraItems","schArr","l","fullTuple","minItems","maxItems","checkStrictTuple","prefixItems","passing","patterns","alwaysValidPatterns","checkProperties","allowMatchingProperties","checkMatchingProperties","pat","validateProperties","alwaysValid","validatePatternProperties","additionalProperties","allProps","hasDefault","applyPropertySchema","hasPropFunc","noPropertyInData","schemaMap","context","dataAndSchema","newRegExp","pattern","u","useFunc","validArr","notValid","core","callRef","callRootRef","schOrEnv","resolveRef","getValidate","callValidate","schName","inlineRefSchema","addErrorsFrom","addEvaluatedFrom","schEvaluated","callAsyncRef","discrError","tagName","DiscrError","Tag","tag","oneOf","mapping","applyTagSchema","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","required","addMapping","enum","tagValue","getMapping","Mapping","validateMapping","draft7Vocabularies","metadataVocabulary","contentVocabulary","fDef","fType","callFormat","validData","invalidFmt","formatDef","unknownMsg","unknownFormat","fmtType","fmtRef","getFormat","validCondition","useLoop","eql","getEql","vSchema","_x","equalCode","comp","maximum","minimum","exclusiveMaximum","exclusiveMinimum","prec","invalid","loopAllRequired","allErrorsMode","loopUntilMissing","exitOnErrorMode","requiredKey","j","itemTypes","loopN","indices","for","loopN2","outer","cb","_traverse","pre","parentKeyword","keyIndex","arrayKeywords","propsKeywords","skipKeywords","additionalItems","contains","propertyNames","allOf","$defs","multipleOf","maxLength","minLength","maxProperties","minProperties","valueOf","merge","sets","xl","subexp","typeOf","shift","toLowerCase","toUpperCase","buildExps","isIRI","ALPHA$$","DIGIT$$","HEXDIG$$","PCT_ENCODED$","SUB_DELIMS$$","RESERVED$$","SCHEME$","USERINFO$","UNRESERVED$$","DEC_OCTET_RELAXED$","H16$","LS32$","IPV4ADDRESS$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","ZONEID$","IPV6ADDRESS$","IP_LITERAL$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","HOST$","REG_NAME$","PORT$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","QUERY$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","IPRIVATE$$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","floor","stringFromCharCode","String","fromCharCode","RangeError","mapDomain","fn","parts","ucs2decode","output","counter","extra","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","decode","input","codePoint","inputLength","bias","basic","lastIndexOf","oldi","w","baseMinusT","out","fromCodePoint","encode","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","punycode","SCHEMES","pctEncChar","chr","pctDecChars","newStr","il","parseInt","substr","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","match","UNRESERVED","scheme","PCT_ENCODED","NOT_SCHEME","userinfo","NOT_USERINFO","host","NOT_HOST","path","NOT_PATH","NOT_PATH_NOSCHEME","query","NOT_QUERY","NOT_FRAGMENT","_stripLeadingZeros","_normalizeIPv4","IPV4ADDRESS","address","_normalizeIPv6","IPV6ADDRESS","zone","reverse","last","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","longestZeroFields","acc","field","lastLongest","sort","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","uriString","iri","IRI_PROTOCOL","URI_PROTOCOL","reference","port","isNaN","indexOf","schemeHandler","unicodeSupport","domainHost","toASCII","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","uriTokens","toUnicode","authority","$1","$2","_recomposeAuthority","charAt","absolutePath","resolveComponents","relative","target","tolerant","unescapeComponent","handler","secure","http","isSecure","wsComponents","resourceName","ws","O","VCHAR$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","mailtoComponents","unknownHeaders","headers","hfields","hfield","toAddrs","subject","addr","setInterval","toAddr","atIdx","localPart","domain","URN_PARSE","urnComponents","nid","nss","urnScheme","uriComponents","UUID","uuidComponents","https","wss","mailto","urn","baseURI","relativeURI","schemelessOptions","uriA","uriB","ESCAPE"],"sourceRoot":""}