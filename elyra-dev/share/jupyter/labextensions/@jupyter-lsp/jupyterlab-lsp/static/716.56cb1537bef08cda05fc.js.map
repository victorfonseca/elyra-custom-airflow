{"version":3,"file":"716.56cb1537bef08cda05fc.js?v=56cb1537bef08cda05fc","mappings":"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","sources":["webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/style/index.css","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/css-loader/dist/runtime/api.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/style/index.css?1059","webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/src/types.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/src/about.tsx","webpack://@jupyter-lsp/jupyterlab-lsp/../completion-theme/src/index.ts","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://@jupyter-lsp/jupyterlab-lsp/../../node_modules/style-loader/dist/runtime/styleTagTransform.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.lsp-completer-themes .lsp-licence {\n  display: inline;\n}\n\n.lsp-completer-themes ul {\n  list-style: none;\n  padding-left: 10px;\n}\n\n.lsp-completer-theme-icons {\n  margin-left: 10px;\n}\n\n.lsp-completer-icon-row {\n  width: 50%;\n  display: flex;\n  justify-content: space-between;\n}\n\nbody[data-lsp-completer-layout] .jp-Completer-docpanel {\n  width: 300px;\n  /* https://github.com/jupyterlab/jupyterlab/pull/15024 */\n  flex-shrink: 0;\n}\n\nbody[data-lsp-completer-layout] {\n  /* Important to use selectors which work on body so that size estimation\n  works when the list items get temporarily attached to the body */\n  --lsp-completer-max-label-width: 400px;\n  --lsp-completer-max-detail-width: 200px;\n}\n\nbody[data-lsp-completer-layout] .jp-Completer-match {\n  max-width: calc(\n    var(--lsp-completer-max-label-width) + var(--lsp-completer-max-detail-width)\n  );\n  overflow-x: hidden;\n  white-space: nowrap;\n  display: block;\n  text-overflow: ellipsis;\n}\n\nbody[data-lsp-completer-layout] .jp-mod-active .jp-Completer-match {\n  text-overflow: clip;\n}\n\n.lsp-completer-placeholder:after {\n  content: 'Loading...';\n  color: #7f7f7f;\n}\n\n/* a workaround for code being larger font size than text in markdown-rendered panel */\nbody[data-lsp-completer-layout] .jp-Completer-docpanel pre code {\n  font-size: 90%;\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-item {\n  --lsp-completer-label-height: 24px;\n  --lsp-completer-detail-height: 20px;\n  --lsp-completer-icon-width: 16px;\n  height: var(--lsp-completer-label-height);\n  display: grid;\n  grid-template-areas:\n    'icon label'\n    'detail detail';\n  grid-template-columns: min-content 1fr;\n}\n\nbody[data-lsp-completer-layout='detail-below']\n  .jp-Completer-item.jp-mod-active {\n  height: calc(\n    var(--lsp-completer-detail-height) + var(--lsp-completer-label-height)\n  );\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-icon {\n  grid-area: icon;\n  width: var(--lsp-completer-icon-width);\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\n  grid-area: label;\n  overflow: hidden;\n  height: var(--lsp-completer-label-height);\n}\n\nbody[data-lsp-completer-layout] .jp-Completer-item .jp-Completer-typeExtended {\n  max-width: var(--lsp-completer-max-detail-width);\n  min-height: 50px;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\nbody[data-lsp-completer-layout] .jp-mod-active .jp-Completer-typeExtended {\n  text-overflow: clip;\n}\n\nbody[data-lsp-completer-layout] mark.lsp-elide:first-child {\n  display: inline-block;\n  overflow-x: clip;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  direction: rtl;\n  /* stretch to as much space as possible */\n  flex-shrink: 1;\n  /* always reserve small space to fit the ellipsis */\n  min-width: 20px;\n  /* a reasonably long limit on the space taken by the elipsis */\n  max-width: calc(var(--lsp-completer-max-label-width) / 2);\n}\n\nbody[data-lsp-completer-layout] .lsp-elide-wrapper {\n  display: flex;\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-typeExtended {\n  grid-area: detail;\n  text-align: left;\n  padding-left: calc(var(--lsp-completer-icon-width) + 8px);\n  height: var(--lsp-completer-detail-height);\n  line-height: var(--lsp-completer-detail-height);\n  display: none;\n  position: relative;\n  top: -2px;\n  overflow: hidden;\n  max-width: var(--lsp-completer-max-label-width);\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\n  overflow: hidden;\n  max-width: var(--lsp-completer-max-label-width);\n}\n\nbody[data-lsp-completer-layout='detail-below']\n  .jp-Completer-item.jp-mod-active\n  .jp-Completer-typeExtended {\n  display: block;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../completion-theme/style/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,UAAU;EACV,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,YAAY;EACZ,wDAAwD;EACxD,cAAc;AAChB;;AAEA;EACE;kEACgE;EAChE,sCAAsC;EACtC,uCAAuC;AACzC;;AAEA;EACE;;GAEC;EACD,kBAAkB;EAClB,mBAAmB;EACnB,cAAc;EACd,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA,sFAAsF;AACtF;EACE,cAAc;AAChB;;AAEA;EACE,kCAAkC;EAClC,mCAAmC;EACnC,gCAAgC;EAChC,yCAAyC;EACzC,aAAa;EACb;;mBAEiB;EACjB,sCAAsC;AACxC;;AAEA;;EAEE;;GAEC;AACH;;AAEA;EACE,eAAe;EACf,sCAAsC;AACxC;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,yCAAyC;AAC3C;;AAEA;EACE,gDAAgD;EAChD,gBAAgB;EAChB,kBAAkB;EAClB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;EACd,yCAAyC;EACzC,cAAc;EACd,mDAAmD;EACnD,eAAe;EACf,8DAA8D;EAC9D,yDAAyD;AAC3D;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,yDAAyD;EACzD,0CAA0C;EAC1C,+CAA+C;EAC/C,aAAa;EACb,kBAAkB;EAClB,SAAS;EACT,gBAAgB;EAChB,+CAA+C;AACjD;;AAEA;EACE,gBAAgB;EAChB,+CAA+C;AACjD;;AAEA;;;EAGE,cAAc;AAChB\",\"sourcesContent\":[\".lsp-completer-themes .lsp-licence {\\n  display: inline;\\n}\\n\\n.lsp-completer-themes ul {\\n  list-style: none;\\n  padding-left: 10px;\\n}\\n\\n.lsp-completer-theme-icons {\\n  margin-left: 10px;\\n}\\n\\n.lsp-completer-icon-row {\\n  width: 50%;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\nbody[data-lsp-completer-layout] .jp-Completer-docpanel {\\n  width: 300px;\\n  /* https://github.com/jupyterlab/jupyterlab/pull/15024 */\\n  flex-shrink: 0;\\n}\\n\\nbody[data-lsp-completer-layout] {\\n  /* Important to use selectors which work on body so that size estimation\\n  works when the list items get temporarily attached to the body */\\n  --lsp-completer-max-label-width: 400px;\\n  --lsp-completer-max-detail-width: 200px;\\n}\\n\\nbody[data-lsp-completer-layout] .jp-Completer-match {\\n  max-width: calc(\\n    var(--lsp-completer-max-label-width) + var(--lsp-completer-max-detail-width)\\n  );\\n  overflow-x: hidden;\\n  white-space: nowrap;\\n  display: block;\\n  text-overflow: ellipsis;\\n}\\n\\nbody[data-lsp-completer-layout] .jp-mod-active .jp-Completer-match {\\n  text-overflow: clip;\\n}\\n\\n.lsp-completer-placeholder:after {\\n  content: 'Loading...';\\n  color: #7f7f7f;\\n}\\n\\n/* a workaround for code being larger font size than text in markdown-rendered panel */\\nbody[data-lsp-completer-layout] .jp-Completer-docpanel pre code {\\n  font-size: 90%;\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-item {\\n  --lsp-completer-label-height: 24px;\\n  --lsp-completer-detail-height: 20px;\\n  --lsp-completer-icon-width: 16px;\\n  height: var(--lsp-completer-label-height);\\n  display: grid;\\n  grid-template-areas:\\n    'icon label'\\n    'detail detail';\\n  grid-template-columns: min-content 1fr;\\n}\\n\\nbody[data-lsp-completer-layout='detail-below']\\n  .jp-Completer-item.jp-mod-active {\\n  height: calc(\\n    var(--lsp-completer-detail-height) + var(--lsp-completer-label-height)\\n  );\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-icon {\\n  grid-area: icon;\\n  width: var(--lsp-completer-icon-width);\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\\n  grid-area: label;\\n  overflow: hidden;\\n  height: var(--lsp-completer-label-height);\\n}\\n\\nbody[data-lsp-completer-layout] .jp-Completer-item .jp-Completer-typeExtended {\\n  max-width: var(--lsp-completer-max-detail-width);\\n  min-height: 50px;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n\\nbody[data-lsp-completer-layout] .jp-mod-active .jp-Completer-typeExtended {\\n  text-overflow: clip;\\n}\\n\\nbody[data-lsp-completer-layout] mark.lsp-elide:first-child {\\n  display: inline-block;\\n  overflow-x: clip;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  direction: rtl;\\n  /* stretch to as much space as possible */\\n  flex-shrink: 1;\\n  /* always reserve small space to fit the ellipsis */\\n  min-width: 20px;\\n  /* a reasonably long limit on the space taken by the elipsis */\\n  max-width: calc(var(--lsp-completer-max-label-width) / 2);\\n}\\n\\nbody[data-lsp-completer-layout] .lsp-elide-wrapper {\\n  display: flex;\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-typeExtended {\\n  grid-area: detail;\\n  text-align: left;\\n  padding-left: calc(var(--lsp-completer-icon-width) + 8px);\\n  height: var(--lsp-completer-detail-height);\\n  line-height: var(--lsp-completer-detail-height);\\n  display: none;\\n  position: relative;\\n  top: -2px;\\n  overflow: hidden;\\n  max-width: var(--lsp-completer-max-label-width);\\n}\\n\\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\\n  overflow: hidden;\\n  max-width: var(--lsp-completer-max-label-width);\\n}\\n\\nbody[data-lsp-completer-layout='detail-below']\\n  .jp-Completer-item.jp-mod-active\\n  .jp-Completer-typeExtended {\\n  display: block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { LabIcon } from '@jupyterlab/ui-components';\nimport { Token } from '@lumino/coreutils';\n\nexport const COMPLETER_THEME_PREFIX = 'lsp-completer-theme-';\n\n// TODO, once features are extracted to standalone packages,\n//  import the CompletionItemKindStrings from @feature-completer\nenum CompletionItemKind {\n  Text = 1,\n  Method = 2,\n  Function = 3,\n  Constructor = 4,\n  Field = 5,\n  Variable = 6,\n  Class = 7,\n  Interface = 8,\n  Module = 9,\n  Property = 10,\n  Unit = 11,\n  Value = 12,\n  Enum = 13,\n  Keyword = 14,\n  Snippet = 15,\n  Color = 16,\n  File = 17,\n  Reference = 18,\n  Folder = 19,\n  EnumMember = 20,\n  Constant = 21,\n  Struct = 22,\n  Event = 23,\n  Operator = 24,\n  TypeParameter = 25\n}\n\nexport type CompletionItemKindStrings = keyof typeof CompletionItemKind;\n\nexport const PLUGIN_ID = '@jupyter-lsp/completion-manager';\n\nexport type SvgString = string;\n\ntype requiredIcons = {\n  [key in CompletionItemKindStrings]: SvgString;\n};\n\nexport const KernelKind = 'Kernel';\n\nexport interface ICompletionIconSet extends requiredIcons {\n  [KernelKind]?: SvgString;\n}\n\nexport interface ILicenseInfo {\n  /**\n   * Licence name.\n   */\n  name: string;\n  /**\n   * Abbreviation of the licence name;\n   */\n  abbreviation: string;\n  /**\n   * The copyright holder/owner name.\n   */\n  licensor: string;\n  /**\n   * Link to the full licence text.\n   */\n  link: string;\n}\n\nexport interface ICompletionTheme {\n  /**\n   * Theme identifier (which can be part of a valid HTML class name).\n   */\n  id: string;\n  /**\n   * Name of the theme.\n   */\n  name: string;\n  /**\n   * Provides object mapping completion item kind name to a string with an SVG icon,\n   * as well as icons options and metadata.\n   */\n  icons: {\n    /**\n     * Short name of the license of the icons included.\n     */\n    licence: ILicenseInfo;\n    /**\n     * The version to be used in the light mode.\n     */\n    light: ICompletionIconSet;\n    /**\n     * The version to be used in the dark mode.\n     */\n    dark?: ICompletionIconSet;\n    /**\n     * Icon properties to be set on each of the icons.\n     * NOTE: setting className here will not work, as\n     * it would be overwritten in the completer.\n     * In order to style the icons use:\n     * `.lsp-completer-theme-{id} .jp-Completer-icon svg`\n     * instead, where {id} is the identifier of your theme.\n     */\n    options?: LabIcon.IProps;\n  };\n}\n\nexport interface ILSPCompletionThemeManager {\n  getIcon(type: string): LabIcon.ILabIcon | null;\n\n  setTheme(theme_id: string | null): void;\n\n  registerTheme(theme: ICompletionTheme): void;\n\n  getIconSet(\n    theme: ICompletionTheme\n  ): Map<keyof ICompletionIconSet, LabIcon.ILabIcon>;\n\n  setIconsOverrides(\n    map: Record<string, CompletionItemKindStrings | 'Kernel'>\n  ): void;\n}\n\nexport const ILSPCompletionThemeManager = new Token<ILSPCompletionThemeManager>(\n  PLUGIN_ID + ':ILSPCompletionThemeManager'\n);\n","import { TranslationBundle } from '@jupyterlab/translation';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport React, { ReactElement } from 'react';\n\nimport {\n  COMPLETER_THEME_PREFIX,\n  ICompletionTheme,\n  ILicenseInfo\n} from './types';\n\nfunction renderLicence(licence: ILicenseInfo): ReactElement {\n  return (\n    <div className={'lsp-licence'}>\n      <a href={licence.link} title={licence.name}>\n        {licence.abbreviation}\n      </a>{' '}\n      {licence.licensor}\n    </div>\n  );\n}\n\ntype IconSetGetter = (theme: ICompletionTheme) => Map<string, LabIcon>;\n\nfunction renderTheme(\n  trans: TranslationBundle,\n  theme: ICompletionTheme,\n  getSet: IconSetGetter,\n  isCurrent: boolean\n): ReactElement {\n  let icons: ReactElement[] = [];\n  for (let [name, icon] of getSet(theme)) {\n    icons.push(\n      <div className={'lsp-completer-icon-row'}>\n        <div>{name}</div>\n        <div className={'jp-Completer-icon'}>\n          <icon.react />\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div\n      className={'lsp-completer-themes ' + COMPLETER_THEME_PREFIX + theme.id}\n    >\n      <h4>\n        {theme.name}\n        {isCurrent ? trans.__(' (current)') : ''}\n      </h4>\n      <ul>\n        <li key={'id'}>\n          ID: <code>{theme.id}</code>\n        </li>\n        <li key={'licence'}>\n          {trans.__('Licence: ')}\n          {renderLicence(theme.icons.licence)}\n        </li>\n        <li key={'dark'}>\n          {typeof theme.icons.dark === 'undefined'\n            ? ''\n            : trans.__('Includes dedicated dark mode icons set')}\n        </li>\n      </ul>\n      <div className={'lsp-completer-theme-icons'}>{icons}</div>\n    </div>\n  );\n}\n\nexport function renderThemesList(\n  trans: TranslationBundle,\n  props: {\n    themes: ICompletionTheme[];\n    current: ICompletionTheme | null;\n    getSet: IconSetGetter;\n  }\n): React.ReactElement {\n  let themes = props.themes.map(theme =>\n    renderTheme(trans, theme, props.getSet, theme == props.current)\n  );\n  return <div>{themes}</div>;\n}\n","import '../style/index.css';\nimport { JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport {\n  Dialog,\n  ICommandPalette,\n  IThemeManager,\n  showDialog\n} from '@jupyterlab/apputils';\nimport { ITranslator, TranslationBundle } from '@jupyterlab/translation';\nimport { LabIcon, kernelIcon } from '@jupyterlab/ui-components';\n\nimport { renderThemesList } from './about';\nimport {\n  COMPLETER_THEME_PREFIX,\n  CompletionItemKindStrings,\n  ICompletionIconSet,\n  ICompletionTheme,\n  ILSPCompletionThemeManager,\n  KernelKind,\n  PLUGIN_ID\n} from './types';\nexport * from './types';\n\nexport class CompletionThemeManager implements ILSPCompletionThemeManager {\n  protected currentIcons: Map<string, LabIcon>;\n  protected themes: Map<string, ICompletionTheme>;\n  private _currentThemeId: string | null = null;\n  private _iconsCache: Map<string, LabIcon>;\n  private _iconOverrides: Map<string, CompletionItemKindStrings>;\n  private _trans: TranslationBundle;\n\n  constructor(protected themeManager: IThemeManager, trans: TranslationBundle) {\n    this.themes = new Map();\n    this._iconsCache = new Map();\n    this._iconOverrides = new Map();\n    themeManager.themeChanged.connect(this.updateIconsSet, this);\n    this._trans = trans;\n  }\n\n  protected isThemeLight() {\n    const current = this.themeManager.theme;\n    if (!current) {\n      // assume true by default\n      return true;\n    }\n    return this.themeManager.isLight(current);\n  }\n\n  getIconSet(theme: ICompletionTheme): Map<keyof ICompletionIconSet, LabIcon> {\n    const iconsSets = theme.icons;\n    const darkModeOnAndDarkSupported =\n      !this.isThemeLight() && typeof iconsSets.dark !== 'undefined';\n    const set: ICompletionIconSet = darkModeOnAndDarkSupported\n      ? iconsSets.dark!\n      : iconsSets.light;\n    const icons: Map<keyof ICompletionIconSet, LabIcon> = new Map();\n    let options = this.currentTheme?.icons?.options || {};\n    const mode = this.isThemeLight() ? 'light' : 'dark';\n    for (let [completionKind, svg] of Object.entries(set)) {\n      let name =\n        'lsp:' + theme.id + '-' + completionKind.toLowerCase() + '-' + mode;\n      let icon: LabIcon;\n      if (this._iconsCache.has(name)) {\n        icon = this._iconsCache.get(name)!;\n      } else {\n        icon = new LabIcon({\n          name: name,\n          svgstr: svg\n        });\n        this._iconsCache.set(name, icon);\n      }\n      icons.set(\n        completionKind as keyof ICompletionIconSet,\n        icon.bindprops(options)\n      );\n    }\n    return icons;\n  }\n\n  protected updateIconsSet() {\n    if (this.currentTheme === null) {\n      return;\n    }\n    this.currentIcons = this.getIconSet(this.currentTheme);\n  }\n\n  getIcon(type: string): LabIcon | null {\n    if (this.currentTheme === null) {\n      return null;\n    }\n    if (type) {\n      if (this._iconOverrides.has(type.toLowerCase())) {\n        type = this._iconOverrides.get(type.toLowerCase())!;\n      }\n      type =\n        type.substring(0, 1).toUpperCase() + type.substring(1).toLowerCase();\n    }\n    if (this.currentIcons.has(type)) {\n      return this.currentIcons.get(type)!;\n    }\n\n    if (type === KernelKind) {\n      return kernelIcon;\n    }\n    return null;\n  }\n\n  protected get currentThemeClass() {\n    return COMPLETER_THEME_PREFIX + this._currentThemeId;\n  }\n\n  setTheme(id: string | null) {\n    if (this._currentThemeId) {\n      document.body.classList.remove(this.currentThemeClass);\n    }\n    if (id && !this.themes.has(id)) {\n      console.warn(\n        `[LSP][Completer] Icons theme ${id} cannot be set yet (it may be loaded later).`\n      );\n    }\n    this._currentThemeId = id;\n    if (id !== null) {\n      document.body.classList.add(this.currentThemeClass);\n    }\n    this.updateIconsSet();\n  }\n\n  protected get currentTheme(): ICompletionTheme | null {\n    if (this._currentThemeId && this.themes.has(this._currentThemeId)) {\n      return this.themes.get(this._currentThemeId)!;\n    }\n    return null;\n  }\n\n  registerTheme(theme: ICompletionTheme) {\n    if (this.themes.has(theme.id)) {\n      console.warn(\n        'Theme with name',\n        theme.id,\n        'was already registered, overwriting.'\n      );\n    }\n    this.themes.set(theme.id, theme);\n    this.updateIconsSet();\n  }\n\n  /**\n   * Display the registered themes in a dialog,\n   * both for the user to know what they can choose from,\n   * and for the developer to quickly check how the icons\n   * from each theme would look rendered.\n   */\n  displayThemes() {\n    showDialog({\n      title: this._trans.__('LSP Completer Themes'),\n      body: renderThemesList(this._trans, {\n        themes: [...this.themes.values()],\n        current: this.currentTheme,\n        getSet: this.getIconSet.bind(this)\n      }),\n      buttons: [Dialog.okButton({ label: this._trans.__('OK') })]\n    }).catch(console.warn);\n  }\n\n  setIconsOverrides(iconOverrides: Record<string, CompletionItemKindStrings>) {\n    this._iconOverrides = new Map(\n      Object.keys(iconOverrides).map(kernelType => [\n        kernelType.toLowerCase(),\n        iconOverrides[kernelType]\n      ])\n    );\n  }\n}\n\nexport const COMPLETION_THEME_MANAGER: JupyterFrontEndPlugin<ILSPCompletionThemeManager> =\n  {\n    id: PLUGIN_ID,\n    requires: [IThemeManager, ICommandPalette, ITranslator],\n    activate: (\n      app,\n      themeManager: IThemeManager,\n      commandPalette: ICommandPalette,\n      translator: ITranslator\n    ) => {\n      const trans = translator.load('jupyterlab_lsp');\n      let manager = new CompletionThemeManager(themeManager, trans);\n      const commandId = 'lsp:completer-about-themes';\n      app.commands.addCommand(commandId, {\n        label: trans.__('Display the completer themes'),\n        execute: () => {\n          manager.displayThemes();\n        }\n      });\n      commandPalette.addItem({\n        category: trans.__('Language server protocol'),\n        command: commandId\n      });\n      return manager;\n    },\n    provides: ILSPCompletionThemeManager,\n    autoStart: true\n  };\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","c","locals","COMPLETER_THEME_PREFIX","CompletionItemKind","PLUGIN_ID","KernelKind","ILSPCompletionThemeManager","Token","renderThemesList","trans","props","themes","theme","getSet","isCurrent","icons","name","icon","className","react","__","key","licence","href","link","title","abbreviation","licensor","dark","renderTheme","current","CompletionThemeManager","constructor","themeManager","_currentThemeId","Map","_iconsCache","_iconOverrides","themeChanged","connect","updateIconsSet","_trans","isThemeLight","isLight","getIconSet","iconsSets","set","light","currentTheme","mode","completionKind","svg","Object","entries","toLowerCase","has","get","LabIcon","svgstr","bindprops","currentIcons","getIcon","type","substring","toUpperCase","kernelIcon","currentThemeClass","setTheme","document","body","classList","remove","console","warn","add","registerTheme","displayThemes","showDialog","values","bind","buttons","Dialog","okButton","label","catch","setIconsOverrides","iconOverrides","keys","kernelType","COMPLETION_THEME_MANAGER","requires","IThemeManager","ICommandPalette","ITranslator","activate","app","commandPalette","translator","load","manager","commandId","commands","addCommand","execute","addItem","category","command","provides","autoStart","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","update","newObj","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","attributes","styleElement","nonce","setAttribute","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode"],"sourceRoot":""}