"use strict";(self.webpackChunk_jupyter_lsp_jupyterlab_lsp=self.webpackChunk_jupyter_lsp_jupyterlab_lsp||[]).push([[336,954],{7400:(e,t,l)=>{l.d(t,{c:()=>i});var n=l(3260),a=l.n(n),o=l(1957),r=l.n(o)()(a());r.push([e.id,".lsp-completer-themes .lsp-licence {\n  display: inline;\n}\n\n.lsp-completer-themes ul {\n  list-style: none;\n  padding-left: 10px;\n}\n\n.lsp-completer-theme-icons {\n  margin-left: 10px;\n}\n\n.lsp-completer-icon-row {\n  width: 50%;\n  display: flex;\n  justify-content: space-between;\n}\n\nbody[data-lsp-completer-layout] .jp-Completer-docpanel {\n  width: 300px;\n  /* https://github.com/jupyterlab/jupyterlab/pull/15024 */\n  flex-shrink: 0;\n}\n\nbody[data-lsp-completer-layout] {\n  /* Important to use selectors which work on body so that size estimation\n  works when the list items get temporarily attached to the body */\n  --lsp-completer-max-label-width: 400px;\n  --lsp-completer-max-detail-width: 200px;\n}\n\nbody[data-lsp-completer-layout] .jp-Completer-match {\n  max-width: calc(\n    var(--lsp-completer-max-label-width) + var(--lsp-completer-max-detail-width)\n  );\n  overflow-x: hidden;\n  white-space: nowrap;\n  display: block;\n  text-overflow: ellipsis;\n}\n\nbody[data-lsp-completer-layout] .jp-mod-active .jp-Completer-match {\n  text-overflow: clip;\n}\n\n.lsp-completer-placeholder:after {\n  content: 'Loading...';\n  color: #7f7f7f;\n}\n\n/* a workaround for code being larger font size than text in markdown-rendered panel */\nbody[data-lsp-completer-layout] .jp-Completer-docpanel pre code {\n  font-size: 90%;\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-item {\n  --lsp-completer-label-height: 24px;\n  --lsp-completer-detail-height: 20px;\n  --lsp-completer-icon-width: 16px;\n  height: var(--lsp-completer-label-height);\n  display: grid;\n  grid-template-areas:\n    'icon label'\n    'detail detail';\n  grid-template-columns: min-content 1fr;\n}\n\nbody[data-lsp-completer-layout='detail-below']\n  .jp-Completer-item.jp-mod-active {\n  height: calc(\n    var(--lsp-completer-detail-height) + var(--lsp-completer-label-height)\n  );\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-icon {\n  grid-area: icon;\n  width: var(--lsp-completer-icon-width);\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\n  grid-area: label;\n  overflow: hidden;\n  height: var(--lsp-completer-label-height);\n}\n\nbody[data-lsp-completer-layout] .jp-Completer-item .jp-Completer-typeExtended {\n  max-width: var(--lsp-completer-max-detail-width);\n  min-height: 50px;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\nbody[data-lsp-completer-layout] .jp-mod-active .jp-Completer-typeExtended {\n  text-overflow: clip;\n}\n\nbody[data-lsp-completer-layout] mark.lsp-elide:first-child {\n  display: inline-block;\n  overflow-x: clip;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  direction: rtl;\n  /* stretch to as much space as possible */\n  flex-shrink: 1;\n  /* always reserve small space to fit the ellipsis */\n  min-width: 20px;\n  /* a reasonably long limit on the space taken by the elipsis */\n  max-width: calc(var(--lsp-completer-max-label-width) / 2);\n}\n\nbody[data-lsp-completer-layout] .lsp-elide-wrapper {\n  display: flex;\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-typeExtended {\n  grid-area: detail;\n  text-align: left;\n  padding-left: calc(var(--lsp-completer-icon-width) + 8px);\n  height: var(--lsp-completer-detail-height);\n  line-height: var(--lsp-completer-detail-height);\n  display: none;\n  position: relative;\n  top: -2px;\n  overflow: hidden;\n  max-width: var(--lsp-completer-max-label-width);\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\n  overflow: hidden;\n  max-width: var(--lsp-completer-max-label-width);\n}\n\nbody[data-lsp-completer-layout='detail-below']\n  .jp-Completer-item.jp-mod-active\n  .jp-Completer-typeExtended {\n  display: block;\n}\n","",{version:3,sources:["webpack://./../completion-theme/style/index.css"],names:[],mappings:"AAAA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,UAAU;EACV,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,YAAY;EACZ,wDAAwD;EACxD,cAAc;AAChB;;AAEA;EACE;kEACgE;EAChE,sCAAsC;EACtC,uCAAuC;AACzC;;AAEA;EACE;;GAEC;EACD,kBAAkB;EAClB,mBAAmB;EACnB,cAAc;EACd,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA,sFAAsF;AACtF;EACE,cAAc;AAChB;;AAEA;EACE,kCAAkC;EAClC,mCAAmC;EACnC,gCAAgC;EAChC,yCAAyC;EACzC,aAAa;EACb;;mBAEiB;EACjB,sCAAsC;AACxC;;AAEA;;EAEE;;GAEC;AACH;;AAEA;EACE,eAAe;EACf,sCAAsC;AACxC;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,yCAAyC;AAC3C;;AAEA;EACE,gDAAgD;EAChD,gBAAgB;EAChB,kBAAkB;EAClB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;EACd,yCAAyC;EACzC,cAAc;EACd,mDAAmD;EACnD,eAAe;EACf,8DAA8D;EAC9D,yDAAyD;AAC3D;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,yDAAyD;EACzD,0CAA0C;EAC1C,+CAA+C;EAC/C,aAAa;EACb,kBAAkB;EAClB,SAAS;EACT,gBAAgB;EAChB,+CAA+C;AACjD;;AAEA;EACE,gBAAgB;EAChB,+CAA+C;AACjD;;AAEA;;;EAGE,cAAc;AAChB",sourcesContent:[".lsp-completer-themes .lsp-licence {\n  display: inline;\n}\n\n.lsp-completer-themes ul {\n  list-style: none;\n  padding-left: 10px;\n}\n\n.lsp-completer-theme-icons {\n  margin-left: 10px;\n}\n\n.lsp-completer-icon-row {\n  width: 50%;\n  display: flex;\n  justify-content: space-between;\n}\n\nbody[data-lsp-completer-layout] .jp-Completer-docpanel {\n  width: 300px;\n  /* https://github.com/jupyterlab/jupyterlab/pull/15024 */\n  flex-shrink: 0;\n}\n\nbody[data-lsp-completer-layout] {\n  /* Important to use selectors which work on body so that size estimation\n  works when the list items get temporarily attached to the body */\n  --lsp-completer-max-label-width: 400px;\n  --lsp-completer-max-detail-width: 200px;\n}\n\nbody[data-lsp-completer-layout] .jp-Completer-match {\n  max-width: calc(\n    var(--lsp-completer-max-label-width) + var(--lsp-completer-max-detail-width)\n  );\n  overflow-x: hidden;\n  white-space: nowrap;\n  display: block;\n  text-overflow: ellipsis;\n}\n\nbody[data-lsp-completer-layout] .jp-mod-active .jp-Completer-match {\n  text-overflow: clip;\n}\n\n.lsp-completer-placeholder:after {\n  content: 'Loading...';\n  color: #7f7f7f;\n}\n\n/* a workaround for code being larger font size than text in markdown-rendered panel */\nbody[data-lsp-completer-layout] .jp-Completer-docpanel pre code {\n  font-size: 90%;\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-item {\n  --lsp-completer-label-height: 24px;\n  --lsp-completer-detail-height: 20px;\n  --lsp-completer-icon-width: 16px;\n  height: var(--lsp-completer-label-height);\n  display: grid;\n  grid-template-areas:\n    'icon label'\n    'detail detail';\n  grid-template-columns: min-content 1fr;\n}\n\nbody[data-lsp-completer-layout='detail-below']\n  .jp-Completer-item.jp-mod-active {\n  height: calc(\n    var(--lsp-completer-detail-height) + var(--lsp-completer-label-height)\n  );\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-icon {\n  grid-area: icon;\n  width: var(--lsp-completer-icon-width);\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\n  grid-area: label;\n  overflow: hidden;\n  height: var(--lsp-completer-label-height);\n}\n\nbody[data-lsp-completer-layout] .jp-Completer-item .jp-Completer-typeExtended {\n  max-width: var(--lsp-completer-max-detail-width);\n  min-height: 50px;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\nbody[data-lsp-completer-layout] .jp-mod-active .jp-Completer-typeExtended {\n  text-overflow: clip;\n}\n\nbody[data-lsp-completer-layout] mark.lsp-elide:first-child {\n  display: inline-block;\n  overflow-x: clip;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  direction: rtl;\n  /* stretch to as much space as possible */\n  flex-shrink: 1;\n  /* always reserve small space to fit the ellipsis */\n  min-width: 20px;\n  /* a reasonably long limit on the space taken by the elipsis */\n  max-width: calc(var(--lsp-completer-max-label-width) / 2);\n}\n\nbody[data-lsp-completer-layout] .lsp-elide-wrapper {\n  display: flex;\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-typeExtended {\n  grid-area: detail;\n  text-align: left;\n  padding-left: calc(var(--lsp-completer-icon-width) + 8px);\n  height: var(--lsp-completer-detail-height);\n  line-height: var(--lsp-completer-detail-height);\n  display: none;\n  position: relative;\n  top: -2px;\n  overflow: hidden;\n  max-width: var(--lsp-completer-max-label-width);\n}\n\nbody[data-lsp-completer-layout='detail-below'] .jp-Completer-match {\n  overflow: hidden;\n  max-width: var(--lsp-completer-max-label-width);\n}\n\nbody[data-lsp-completer-layout='detail-below']\n  .jp-Completer-item.jp-mod-active\n  .jp-Completer-typeExtended {\n  display: block;\n}\n"],sourceRoot:""}]);const i=r},716:(e,t,l)=>{l.r(t),l.d(t,{COMPLETER_THEME_PREFIX:()=>x,COMPLETION_THEME_MANAGER:()=>I,CompletionThemeManager:()=>T,ILSPCompletionThemeManager:()=>k,KernelKind:()=>j,PLUGIN_ID:()=>f});var n=l(2108),a=l.n(n),o=l(7020),r=l.n(o),i=l(7240),s=l.n(i),p=l(9516),c=l.n(p),d=l(2940),m=l.n(d),h=l(9296),A=l.n(h),C=l(7400),u={};u.styleTagTransform=A(),u.setAttributes=c(),u.insert=s().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=m(),a()(C.c,u),C.c&&C.c.locals&&C.c.locals;var E=l(6052),y=l(7852),w=l(7768),b=l(6512),g=l.n(b),v=l(2464);const x="lsp-completer-theme-";var B;!function(e){e[e.Text=1]="Text",e[e.Method=2]="Method",e[e.Function=3]="Function",e[e.Constructor=4]="Constructor",e[e.Field=5]="Field",e[e.Variable=6]="Variable",e[e.Class=7]="Class",e[e.Interface=8]="Interface",e[e.Module=9]="Module",e[e.Property=10]="Property",e[e.Unit=11]="Unit",e[e.Value=12]="Value",e[e.Enum=13]="Enum",e[e.Keyword=14]="Keyword",e[e.Snippet=15]="Snippet",e[e.Color=16]="Color",e[e.File=17]="File",e[e.Reference=18]="Reference",e[e.Folder=19]="Folder",e[e.EnumMember=20]="EnumMember",e[e.Constant=21]="Constant",e[e.Struct=22]="Struct",e[e.Event=23]="Event",e[e.Operator=24]="Operator",e[e.TypeParameter=25]="TypeParameter"}(B||(B={}));const f="@jupyter-lsp/completion-manager",j="Kernel",k=new v.Token(f+":ILSPCompletionThemeManager");function _(e,t){let l=t.themes.map((l=>function(e,t,l,n){let a=[];for(let[e,n]of l(t))a.push(g().createElement("div",{className:"lsp-completer-icon-row"},g().createElement("div",null,e),g().createElement("div",{className:"jp-Completer-icon"},g().createElement(n.react,null))));return g().createElement("div",{className:"lsp-completer-themes "+x+t.id},g().createElement("h4",null,t.name,n?e.__(" (current)"):""),g().createElement("ul",null,g().createElement("li",{key:"id"},"ID: ",g().createElement("code",null,t.id)),g().createElement("li",{key:"licence"},e.__("Licence: "),(o=t.icons.licence,g().createElement("div",{className:"lsp-licence"},g().createElement("a",{href:o.link,title:o.name},o.abbreviation)," ",o.licensor))),g().createElement("li",{key:"dark"},void 0===t.icons.dark?"":e.__("Includes dedicated dark mode icons set"))),g().createElement("div",{className:"lsp-completer-theme-icons"},a));var o}(e,l,t.getSet,l==t.current)));return g().createElement("div",null,l)}class T{constructor(e,t){this.themeManager=e,this._currentThemeId=null,this.themes=new Map,this._iconsCache=new Map,this._iconOverrides=new Map,e.themeChanged.connect(this.updateIconsSet,this),this._trans=t}isThemeLight(){const e=this.themeManager.theme;return!e||this.themeManager.isLight(e)}getIconSet(e){var t,l;const n=e.icons,a=this.isThemeLight()||void 0===n.dark?n.light:n.dark,o=new Map;let r=(null===(l=null===(t=this.currentTheme)||void 0===t?void 0:t.icons)||void 0===l?void 0:l.options)||{};const i=this.isThemeLight()?"light":"dark";for(let[t,l]of Object.entries(a)){let n,a="lsp:"+e.id+"-"+t.toLowerCase()+"-"+i;this._iconsCache.has(a)?n=this._iconsCache.get(a):(n=new w.LabIcon({name:a,svgstr:l}),this._iconsCache.set(a,n)),o.set(t,n.bindprops(r))}return o}updateIconsSet(){null!==this.currentTheme&&(this.currentIcons=this.getIconSet(this.currentTheme))}getIcon(e){return null===this.currentTheme?null:(e&&(this._iconOverrides.has(e.toLowerCase())&&(e=this._iconOverrides.get(e.toLowerCase())),e=e.substring(0,1).toUpperCase()+e.substring(1).toLowerCase()),this.currentIcons.has(e)?this.currentIcons.get(e):e===j?w.kernelIcon:null)}get currentThemeClass(){return x+this._currentThemeId}setTheme(e){this._currentThemeId&&document.body.classList.remove(this.currentThemeClass),e&&!this.themes.has(e)&&console.warn(`[LSP][Completer] Icons theme ${e} cannot be set yet (it may be loaded later).`),this._currentThemeId=e,null!==e&&document.body.classList.add(this.currentThemeClass),this.updateIconsSet()}get currentTheme(){return this._currentThemeId&&this.themes.has(this._currentThemeId)?this.themes.get(this._currentThemeId):null}registerTheme(e){this.themes.has(e.id)&&console.warn("Theme with name",e.id,"was already registered, overwriting."),this.themes.set(e.id,e),this.updateIconsSet()}displayThemes(){(0,E.showDialog)({title:this._trans.__("LSP Completer Themes"),body:_(this._trans,{themes:[...this.themes.values()],current:this.currentTheme,getSet:this.getIconSet.bind(this)}),buttons:[E.Dialog.okButton({label:this._trans.__("OK")})]}).catch(console.warn)}setIconsOverrides(e){this._iconOverrides=new Map(Object.keys(e).map((t=>[t.toLowerCase(),e[t]])))}}const I={id:f,requires:[E.IThemeManager,E.ICommandPalette,y.ITranslator],activate:(e,t,l,n)=>{const a=n.load("jupyterlab_lsp");let o=new T(t,a);const r="lsp:completer-about-themes";return e.commands.addCommand(r,{label:a.__("Display the completer themes"),execute:()=>{o.displayThemes()}}),l.addItem({category:a.__("Language server protocol"),command:r}),o},provides:k,autoStart:!0}}}]);
//# sourceMappingURL=336.02b3710b415b0c4d4a26.js.map?v=02b3710b415b0c4d4a26